#!/bin/sh
#
# Copyright 1994, 1998 Patrick Volkerding, Moorhead, Minnesota USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#TMP=/var/log/setup/tmp
TMP=/tmp
PATH=$PATH:/mnt/sbin
# Set color menu mode by default:
COLOR=on
# This is a different 'probe' than the function below.
if [ -x /sbin/probe ]; then
 PROBE=/sbin/probe
else
 PROBE=/sbin/fdisk
fi
ROOT="`[ -f /tmp/SeTT_PX ] && cat /tmp/SeTT_PX`"

SWAP=`$PROBE -l | grep "Linux swap" | cut -d' ' -f1`
if [ ! -z $SWAP ]; then
  RESUME=`echo " resume=$SWAP"`
fi

# For btrfs, /etc/fstab is edited like this
# /dev/sdb2       /opt        btrfs     subvol=opt 1   2
OPTS=`grep " / " $ROOT/etc/fstab | grep "btrfs" | tr -s ' ' | cut -d' ' -f4`
if [ ! -z $OPTS ]; then
  ROOTFLAGS=`echo " rootflags=$OPTS"`
fi

# This function scans for bootable partitions (making some assumptions along
# the way which may or may not be correct, but usually work), and sets up
# LILO in either the superblock, or the MBR.
simplelilo()
{
 if $PROBE -l | grep 'OS/2 Boot Manager' 1> /dev/null 2> /dev/null ; then
  dialog --title "OS/2 BOOT MANAGER FOUND" --yesno \
"このシステムにはOS/2やPartition Magicなどのブートマネージャが \
インストールされているようです。お好みならば、シンプルなブート \
マネージャであるLILOの起動ブロックをLinuxパーティションの先頭に \
インストールできます。その場合、Linuxパーティションをブートマネー \
ジャのメニューに登録すれば、ブートマネージャからLinuxを起動する \
ことができます。LILOをブートマネージャと共存させますか？" 11 72
  FLAG=$?
  if [ ! $FLAG = 0 -a ! $FLAG = 1 ]; then
   exit 1
  fi
  if [ $FLAG = 0 ]; then # yes, use BM
   if [ -r $T_PX/etc/lilo.conf ]; then
    mv $T_PX/etc/lilo.conf $T_PX/etc/lilo.conf.orig
   fi
   cat << EOF > $T_PX/etc/lilo.conf
# LILO configuration file
# generated by 'liloconfig'
#
# Start LILO global section
boot = $ROOT_DEVICE
#delay = 5
vga = normal
lba32
prompt
# add some funcy staff :-)
map = /boot/map-bmp
install = /boot/boot-bmp.b
bitmap = /boot/inside.bmp
bmp-colors = 14,11,,15,9,0
bmp-table = 21,287p,2,4,175p
bmp-timer = 73,29,12,8,0
# End LILO global section
# Linux root partition section
image = /boot/vmlinuz
  root = $ROOT_DEVICE
  label = Linux
  read-only
  append = "vga16 unicon=eucjp vt.default_utf8=0 panic_output=7$RESUME$ROOTFLAGS"
# End root Linux partition section
EOF
   dialog --infobox "\nLinux Loader をインストール中..." 5 40
   if [ "$T_PX" = "/" ]; then
    lilo 1> /dev/null 2> /dev/null
   else
    lilo -r $T_PX -m /boot/map -C /etc/lilo.conf 1> /dev/null 2> /dev/null
   fi
   return
  fi # Use Boot Manager
 fi # Boot Manager detected
 # If we got here, we either don't have boot manager or don't want to use it
 dialog --title "LILOのインストール先の選択" --menu \
"LILOはいくつかの場所にインストールすることができます:\n\
\n\
  1. 最初のハードディスク(/dev/hdaか/dev/sda)のMBR\n\
  2. Linux のパーティションの先頭(DOSやLinuxのfdiskでそのパーティション\n\
     を起動可能にするかOS/2のブートマネージャを使って起動してください)\n\
  3. フォーマット済のフロッピーディスク\n\
\n\
2 か 3 を選べば安全ですが、2 の場合は後で少し作業が必要になります\n\
(fdiskを使ってそのパーティションを起動可能にする)。どれを選びますか？\n" \
20 74 3 \
"MBR" "Master Boot Recordへインストール" \
"Root" "Linuxパーティションの先頭(fdiskで起動可能にすること)" \
"Floppy" "/dev/fd0(A:)へインストール" 2> $TMP/reply
 if [ $? = 1 -o $? = 255 ]; then
  exit
 fi
 TG="`cat $TMP/reply`"
 rm -r $TMP/reply
 if [ "$TG" = "MBR" ]; then
  if cat /proc/partitions | grep hda 1> /dev/null 2> /dev/null ; then
   LILO_TARGET="/dev/hda"
  elif cat /proc/partitions | grep sda 1> /dev/null 2> /dev/null ; then
   LILO_TARGET="/dev/sda"
  else
   dialog --title "MBR の手動指定" --inputbox \
"LILOが MBR をインストールする HDD を見つけられませんでした。 \
申しわけありませんがMBRのHDDを手動で指定してください(ex: /dev/sda)。" \
10 72 2> $TMP/MBRreply
   if [ $? = 1 -o $? = 255 ]; then
    LILO_TARGET="/dev/null"
    continue;
   else
    LILO_TARGET="`cat $TMP/MBRreply`"
   fi
  fi
 elif [ "$TG" = "Root" ]; then
  LILO_TARGET=`echo $ROOT_DEVICE`
 elif [ "$TG" = "Floppy" ]; then
  LILO_TARGET="/dev/fd0"
 fi
 cat << EOF > $T_PX/boot/boot_message.txt

Welcome to the LILO Boot Loader!

Please enter the name of the partition you would like to boot
at the prompt below.  The choices are:

EOF
 cat << EOF > $T_PX/etc/lilo.conf
# LILO configuration file
# generated by 'liloconfig'
#
# Start LILO global section
boot = $LILO_TARGET
prompt
timeout = 1200
vga = normal
lba32
# add some funcy staff :-)
map = /boot/map-bmp
install = /boot/boot-bmp.b
bitmap = /boot/inside.bmp
bmp-colors = 14,11,,15,9,0
bmp-table = 21,287p,2,4,175p
bmp-timer = 73,29,12,8,0
# End LILO global section
EOF
 # OK, now let's look for DOS partitions:
 DOSP="`$PROBE -l | grep "DOS
Win95"`"
 DOSP="`echo $DOSP | cut -f 1 -d ' '`"
 if [ ! "$DOSP" = "" ]; then
  TABLE="`echo $DOSP | cut -b1-8`"
  cat << EOF >> $T_PX/etc/lilo.conf
# DOS bootable partition config begins
other = $DOSP
  label = DOS
  table = $TABLE
# DOS bootable partition config ends
EOF
  echo "DOS     - DOS or Windows (FAT/FAT32 partition)" \
>> $T_PX/boot/boot_message.txt
 fi
 # Next, we search for Linux partitions:
 LNXP="`$PROBE -l | grep "83  Linux"`"
 LNXP="`echo $LNXP | cut -f 1 -d ' '`"
 if [ ! "$LNXP" = "" ]; then
  cat << EOF >> $T_PX/etc/lilo.conf
# Linux bootable partition config begins
image = /boot/vmlinuz
  root = $ROOT_DEVICE
  label = Linux
  read-only
  append = "vga16 unicon=eucjp vt.default_utf8=0 panic_output=7$RESUME$ROOTFLAGS"
# Linux bootable partition config ends
EOF
  echo "Linux   - Linux (Linux native partition)" \
>> $T_PX/boot/boot_message.txt
 fi
 # OK, hopefully we can remember how to deal with OS/2 :^)
 NTFS_PARTITION="`$PROBE -l | grep "NTFS"`"
 NTFS_PARTITION="`echo $NTFS_PARTITION | cut -f 1 -d ' '`"
 if [ ! "$NTFS_PARTITION" = "" ]; then
  TABLE="`echo $NTFS_PARTITION | cut -b1-8`"
  if [ "$TABLE" = "/dev/hda" ]; then
   cat << EOF >> $T_PX/etc/lilo.conf
# Windows bootable partition config begins
other = $NTFS_PARTITION
  label = Windows
# Windows bootable partition config ends
EOF
  else
    cat << EOF >> $T_PX/etc/lilo.conf
# Windows bootable partition config begins
other = $NTFS_PARTITION
  label = Windows
  table = $TABLE
# Windows bootable partition config ends
EOF
   echo "Windows - Windows NT/2000/XP(NTFS partition)" \
>> $T_PX/boot/boot_message.txt
  fi
 fi
 echo >> $T_PX/boot/boot_message.txt
 # Done, now we must install lilo:
 dialog --infobox "\nLILOをインストール中..." 5 40
 if [ "$T_PX" = "/" ]; then
  lilo 1> /dev/null 2> /dev/null
  SUCCESS=$?
 else
  lilo -r $T_PX -m /boot/map -C /etc/lilo.conf 1> /dev/null 2> /dev/null
  SUCCESS=$?
 fi
 if [ ! "$SUCCESS" = "0" ]; then # some LILO error occured
  dialog --title "LILOインスールエラー # $SUCCESS" --msgbox \
"残念ながら、LILOをインストールする際にエラーが発生したため、LILOは正し \
くインストールされませんでした。HDDから直接起動できないので、FDに書き \
出した起動ディスクを使ってマシンを起動してください。10Gを越える \
パーティションにインストールしようとしているならば、FDで再起動後 \
/etc/lilo.conf に lba32 オプションを追加して /sbin/lilo を再実行 \
すればうまく行くかも知れません。詳細についてはLILOのマニュアルや \
/usr/share/doc/lilo-XX.X/ にあるドキュメント \
を参照してください。" 11 74
 fi
}

checkp_text()
{
 if [ ! -r $1 ]; then
  echo
  echo "'$1'というデバイスは見つかりません。"
  echo
  echo -n "このデバイス名は正しいですか？ [y]es, [n]o? "
  read use_device;
  if [ ! "$use_device" = "y" ]; then
   return 1;
  fi
  return 0;
 fi
}

checkp_dialog()
{
 if [ ! -r $1 ]; then
  dialog --title "デバイスが見つかりませんでした" --yesno "'$1'というデバイス\
名は見つかりませんでした。このデバイス名は正しいですか" 7 72
  return $?;
 fi
}

# 'probe()' borrowed from LILO QuickInst.
probe()
{
 [ ! -z "`dd if=$1 bs=1 count=1 2>/dev/null | tr '\0' x`" ]
 return
}

# liloconfig-color?
if [ "`basename $0`" = "liloconfig-color" ]; then
 COLOR=on
fi
# Figure out if we're installing from the hard drive
if [ -r $TMP/SeTT_PX ]; then
 T_PX="`cat $TMP/SeTT_PX`"
else
 if [ "$T_PX" = "" -a ! "$1" = "" ]; then
  T_PX=$1
 else
  T_PX=/
 fi
fi
HDR="no" # this means the header section of /etc/lilo.conf has not yet
         # been configured
LNX="no" # this means no Linux partition has been defined as bootable
         # through LILO. Both of these must change to "yes" before LILO will
         # install from this script.
# Determine the root partition (such as /dev/hda2)
ROOT_DEVICE=$2
if [ "$ROOT_DEVICE" = "" ]; then
 if [ -r $TMP/SeTrootdev ]; then
  ROOT_DEVICE="`cat $TMP/SeTrootdev`"
 else
  ROOT_DEVICE="`mount | cut -b-10 | sed -n "1 p"`"
 fi
fi
# use color menus, otherwise tty
if [ -r $TMP/SeTcolor -o "$COLOR" = "on" ]; then
 # OK, now let's see if we should automate things:
 dialog --title "LILOのインストール" --menu \
"LILO(Linux Loader)はいくつかのOSを起動できるブートローダです。 \
ここでは、LILOからLinuxを(見つかればDOSやWindows、OS/2も)起動す \
るように簡単な設定を行います。詳しい人向けにはエキスパート用 \
のオプションを指定すれば、より細かな調整が可能です。LILO を \
誤ってインストールすればパーティションを破壊してしまう可能性 \
もありますので、第三の(安全な)選択、すなわち「今はLILOをイン \
ストールしない」という選択も可能です。その場合、後で'liloconfig'コ \
マンドを実行して再設定することもできます。どうしましょう？" \
20 72 3 \
"simple" "LILOを自動インストール" \
"expert" "経験者向けの設定メニュー" \
"skip" "今はLILOをインストールしない" 2> $TMP/reply
 if [ $? = 1 -o $? = 255 ]; then
  exit
 fi
 REPLY="`cat $TMP/reply`"
 rm -f $TMP/reply
 if [ "$REPLY" = "skip" ]; then
  exit
 elif [ "$REPLY" = "simple" ]; then
  # Do simple LILO setup
  simplelilo
  exit
 fi
 # drop through to last option: (use the expert menus)
 while [ 0 ]; do
  dialog --title "LILOインストールの経験者向けメニュー" --menu \
"このメニューではLILOの設定ファイルであるlilo.confを \
直接作成します。LILOをインストールする場合、まず最初に、起動可能な \
パーティションを登録するためのヘッダーファイルを作る必要があります。 \
LILOをインストールする際は、まず Begin を選んで、ヘッダーファイルを \
作成してください。既に/etc/lilo.confが存在する場合、それを使って \
再インストールすることも可能です。何か間違えた場合は、 \
再度'BEGIN'を選べば、最初からやり直すことも可能です。" 24 76 9 \
"Begin" "新しくLILOのヘッダを作って設定の開始" \
"Linux" "LILOの設定ファイルにLinux用パーティションの追加" \
"OS/2" "OS/2のパーティションを追加" \
"DOS" "DOSのパーティションを追加" \
"Install" "LILOのインストール" \
"Recycle" "既存のlilo.confを使ってLILOの再インストール" \
"Skip" "LILOのインストールを中止してメニューを終了" \
"View" "現在の/etc/lilo.confを表示" \
"Help" "Linux LoaderのHELPファイルを表示" 2> $TMP/reply
  if [ $? = 1 -o $? = 255 ]; then
   REPLY="Skip"
  else
   REPLY="`cat $TMP/reply`"
  fi
  rm -r $TMP/reply
  if [ "$REPLY" = "Begin" ]; then
   dialog --title "append= 行の追加" --inputbox \
"起動時に特別のカーネルパラメータをわたす必要がある \
場合、ここで指定してください。 \
ほとんどのシステムではカーネルパラメータは無くてもかまいません。 \
不要な場合はENTERを押して進んでください。" 14 72 2> $TMP/reply
   if [ $? = 1 -o $? = 255 ]; then
    HDR="no"
    continue;
   else
    APPEND="`cat $TMP/reply`"
   fi
   dialog --title "LILOのインストール先の選択" --menu \
"LILOは最初のHDDのMBRやLinuxパーティションの先頭部分(そのパーティ \
ションはfdiskで起動可能にしておく必要があります)、あるいはフォー \
マット済のFDなど、さまざまな場所にインストールできます。OS/2のブー \
トマネージャを使っている場合などはRootを選んでLinuxパーティションの \
先頭にLILOをインストールし、ブートマネージャからそのパーティションを \
起動するようにしてください。LILOのインストール先はどこにしますか？" 17 74 3 \
"MBR" "最初のHDDの先頭部分(Master Boot Record)" \
"Root" "Linuxパーティションの先頭(スーパーブロック)" \
"Floppy" "フォーマット済のフロッピーディスク" 2> $TMP/reply
   if [ $? = 1 -o $? = 255 ]; then
    HDR="no"
    continue;
   else
    LNX="no"
    TG="`cat $TMP/reply`"
   fi
   rm -r $TMP/reply
   if [ "$TG" = "MBR" ]; then
    if grep hda /proc/partitions 1>/dev/null 2>/dev/null ; then
     LILO_TARGET="/dev/hda"
    elif grep sda /proc/partitions 1>/dev/null 2>/dev/null ; then
     LILO_TARGET="/dev/sda"
    else
     dialog --title "MBR の手動指定" --inputbox \
"LILOが MBR をインストールする HDD を見つけられませんでした。 \
申しわけありませんがMBRのHDDを手動で指定してください(ex: /dev/sda)。" \
10 72 2> $TMP/MBRreply
     if [ $? = 1 -o $? = 255 ]; then
      LILO_TARGET="/dev/null"
      continue;
     else
      LILO_TARGET="`cat $TMP/MBRreply`"
     fi
    fi
   elif [ "$TG" = "Root" ]; then
    # Here, we use the partition superblock for OS/2 Boot Manager
    LILO_TARGET=`echo $ROOT_DEVICE`
   elif [ "$TG" = "Floppy" ]; then
    LILO_TARGET="/dev/fd0"
   else
    HDR="no"
    continue;
   fi
   dialog --title "LILOの待ち時間の指定" --menu \
"起動時に左SHIFTを押せばプロンプトが出ますが、それまで何秒の間待ち \
時間を設けますか？指定した時間が過ぎれば、LILOは自動的に最初のOSを \
起動します。" 13 72 4 \
"None" "待ち時間をおかず、すぐに最初のOSを起動" \
"5" "5秒間待機" \
"30" "30秒間待機" \
"Forever" "自動的にOSを起動せず待ちつづける" 2> $TMP/reply
   if [ $? = 1 -o $? = 255 ]; then
    HDR="no"
    continue;
   else
    DELAY="`cat $TMP/reply`"
   fi
   rm -r $TMP/reply
   if [ "$DELAY" = "None" ]; then
    DELAY="# delay = 5"
   elif [ "$DELAY" = "5" ]; then
    DELAY="delay = 50"
   elif [ "$DELAY" = "30" ]; then
    DELAY="delay = 300"
   elif [ "$DELAY" = "Forever" ]; then
    DELAY="prompt"
   else
    HDR="no"
    continue;
   fi
   if [ "$APPEND" = "" ]; then
    cat << EOF > $TMP/lilo.conf
# LILO configuration file
# generated by 'liloconfig'
#
# Start LILO global section
boot = $LILO_TARGET
#compact        # faster, but won't work on all systems.
$DELAY
vga = normal    # force sane state
lba32
# ramdisk = 0     # paranoia setting
# add some funcy staff :-)
map = /boot/map-bmp
install = /boot/boot-bmp.b
bitmap = /boot/inside.bmp
bmp-colors = 14,11,,15,9,0
bmp-table = 21,287p,2,4,175p
bmp-timer = 73,29,12,8,0
# End LILO global section
EOF
    HDR="yes"
   else
    cat << EOF > $TMP/lilo.conf
# LILO configuration file
# generated by 'liloconfig'
#
# Start LILO global section
append = "vga16 unicon=eucjp vt.default_utf8=0 panic_output=7 $APPEND"
boot = $LILO_TARGET
#compact        # faster, but won't work on all systems.
$DELAY
vga = normal    # force sane state
lba32
# ramdisk = 0     # paranoia setting
# add some funcy staff :-)
map = /boot/map-bmp
install = /boot/boot-bmp.b
bitmap = /boot/inside.bmp
bmp-colors = 14,11,,15,9,0
bmp-table = 21,287p,2,4,175p
bmp-timer = 73,29,12,8,0
# End LILO global section
EOF
    HDR="yes"
   fi
  elif [ "$REPLY" = "Linux" ]; then
   if [ "$HDR" = "yes" ]; then
    echo "このようなLinux用のパーティションが見つかりました:" > $TMP/tmpmsg
    echo >> $TMP/tmpmsg
    echo "   Device Boot  Begin   Start    End  Blocks   Id  System" \
>> $TMP/tmpmsg
    $PROBE -l | grep Linux | grep 83 >> $TMP/tmpmsg
    echo >> $TMP/tmpmsg
    echo "どのパーティションをLILOから起動しますか？" >> $TMP/tmpmsg
    dialog --title "LINUXパーティションの選択" --inputbox \
"`cat $TMP/tmpmsg`" 20 74 2> $TMP/reply
    if [ $? = 1 -o $? = 255 ]; then
     rm $TMP/tmpmsg
     continue
    fi
    rm $TMP/tmpmsg
    LINUX_PART="`cat $TMP/reply`"
    checkp_dialog $LINUX_PART
    if [ ! $? = 0 ]; then
     continue;
    fi
    dialog --title "パーティション名の選択" --inputbox \
"このパーティションに短い名前を付ける必要があります。LILOのプロン \
プトが出てる際に、その名前を使って起動するパーティションを選択で \
きます。単に'Linux'としておくのもわるくありません。 \
名前は一つの単語のみです。" 11 70 2> $TMP/reply
    if [ $? = 1 -o $? = 255 ]; then
     continue
    fi
    LABEL="`cat $TMP/reply`"
    cat << EOF >> $TMP/lilo.conf
# Linux bootable partition config begins
image = /boot/vmlinuz
  root = $LINUX_PART
  label = $LABEL
EOF
    if [ -n $UNICON ] ; then
     cat << EOF >> $TMP/lilo.conf
  append = "vga16 unicon=eucjp vt.default_utf8=0 panic_output=7 $APPEND"
EOF
    fi
    cat << EOF >> $TMP/lilo.conf
  read-only # Non-UMSDOS filesystems should be mounted read-only for checking
# Linux bootable partition config ends
EOF
   else
    dialog --title "Linuxパーティションを追加できません" --msgbox \
"新しくLILOのヘッダを作らないとパーティションを追加できません。" 6 70
    continue
   fi
   LNX="yes"
  elif [ "$REPLY" = "OS/2" ]; then
   if [ "$HDR" = "yes" ]; then
    echo "以下のような OS/2 パーティションがありました。\
このメニューから、これらの" > $TMP/tmpmsg
    echo "パーティションを起動可能にできます。" >> $TMP/tmpmsg
    echo >> $TMP/tmpmsg
    echo "   Device Boot  Begin   Start    End  Blocks   Id  System" \
>> $TMP/tmpmsg
    $PROBE -l | grep HPFS >> $TMP/tmpmsg
    echo >> $TMP/tmpmsg
    echo "どのパーティションをLILOから起動しますか？" >> $TMP/tmpmsg
    dialog --title "OS/2 パーティションの選択" --inputbox \
"`cat $TMP/tmpmsg`" 20 74 2> $TMP/reply
    if [ $? = 1 -o $? = 255 ]; then
     rm $TMP/tmpmsg
     continue
    fi
    rm $TMP/tmpmsg
    OS_2_PART="`cat $TMP/reply`"
    checkp_dialog $OS_2_PART
    if [ ! $? = 0 ]; then
     continue;
    fi
    dialog --title "パーテイション名の指定" --inputbox \
"このパーティションに短い名前を付ける必要があります。LILOのプロン \
プトが出てる際に、その名前を使って起動するパーティションを選択で \
きます。単に'OS/2'としておくのもわるくありません。 \
名前は一つの単語のみです。" 12 70 2> $TMP/reply
    if [ $? = 1 -o $? = 255 ]; then
     continue
    fi
    LABEL="`cat $TMP/reply`"
    TABLE="`echo $OS_2_PART | cut -b1-8`"
    if [ "`echo $TABLE | cut -b6-8`" = "hda" ]; then
     cat << EOF >> $TMP/lilo.conf
# OS/2 bootable partition config begins
other = $OS_2_PART
  label = $LABEL
  table = $TABLE
# OS/2 bootable partition config ends
EOF
    else
     cat << EOF >> $TMP/lilo.conf
# OS/2 bootable partition config begins
other = $OS_2_PART
  label = $LABEL
  table = $TABLE
  loader = /boot/os2_d.b
  map-drive = 0x80
    to = 0x81
  map-drive = 0x81
    to = 0x80
# OS/2 bootable partition config ends
EOF
    fi
   else
    dialog --title "OS/2パーティションを追加できません" --msgbox \
"新しいLILOのヘッダを作らないとOS/2パーティションを追加できません。" 6 60
    continue
   fi
   LNX="yes"
  elif [ "$REPLY" = "DOS" ]; then
   if [ "$HDR" = "yes" ]; then
    echo "以下のようなDOS/Win(らしき)パーティションがあります。\
このメニューから、 " > $TMP/tmpmsg
    echo "これらのパーティションを起動可能にできます。" >> $TMP/tmpmsg
    echo >> $TMP/tmpmsg
    echo "   Device Boot  Begin   Start    End  Blocks   Id  System" \
>> $TMP/tmpmsg
    $PROBE -l | grep DOS >> $TMP/tmpmsg
    $PROBE -l | grep Win >> $TMP/tmpmsg
    echo >> $TMP/tmpmsg
    echo "Which one would you like LILO to boot?" >> $TMP/tmpmsg
    dialog --title "DOSパーティションの選択" --inputbox \
"`cat $TMP/tmpmsg`" 20 74 2> $TMP/reply
    if [ $? = 1 -o $? = 255 ]; then
     rm $TMP/tmpmsg
     continue
    fi
    rm $TMP/tmpmsg
    DOSPART="`cat $TMP/reply`"
    checkp_dialog $DOSPART
    if [ ! $? = 0 ]; then
     continue;
    fi
    dialog --title "パーティション名の指定" --inputbox \
"このパーティションに短い名前を付ける必要があります。LILOのプロン \
プトが出てる間に、その名前を使って起動するパーティションを選択で \
きます。単に'DOS'としておくのもわるくありません。 \
名前は一つの単語のみです。" 11 70 2> $TMP/reply
    if [ $? = 1 -o $? = 255 ]; then
     continue
    fi
    LABEL="`cat $TMP/reply`"
    unset USE_LOADER
    TABLE="`echo $DOSPART | cut -b1-8`"
    if [ "`echo $TABLE | cut -b6-8`" = "hda" ]; then
     USE_LOADER="no"
    fi
    if [ "`echo $TABLE | cut -b6-8`" = "sda" ]; then
     if probe /dev/hda; then
      USE_LOADER="yes"
     else
      USE_LOADER="no"
     fi
    fi
    if [ "$USE_LOADER" = "no" ]; then
     cat << EOF >> $TMP/lilo.conf
# DOS bootable partition config begins
other = $DOSPART
  label = $LABEL
  table = $TABLE
# DOS bootable partition config ends
EOF
    else
     cat << EOF >> $TMP/lilo.conf
# DOS bootable partition config begins
other = $DOSPART
  label = $LABEL
  map-drive = 0x80
    to = 0x81
  map-drive = 0x81
    to = 0x80
  table = $TABLE
# DOS bootable partition config ends
EOF
    fi
   else
    dialog --title "DOSパーティションを追加できませんでした" --msgbox \
"新しくLILOのヘッダ\
ファイルを作らないとDOSパーティションを追加できません。" 6 60
    continue
   fi
   LNX="yes"
  elif [ "$REPLY" = "Install" -o "$REPLY" = "Recycle" ]; then
   if [ "$REPLY" = "Recycle" -a -r $T_PX/etc/lilo.conf ]; then
    LNX="yes"
   fi
   if [ "$LNX" = "no" ]; then
    dialog --title "LILOインストールの失敗" --msgbox \
"LILOをインストールできませんでした。もし新しいヘッダファイルを \
作ってなかったり、少なくとも一つの起動可能パーティションをヘッダ \
ファイルに登録していない場合は、LILOをインストールする前にまずそ \
れらの設定をしておかなければいけません。もし既存の設定ファイルを \
使ってインストールしようとしているなら、その設定ファイルが見つか \
らないので、新しく作成してみてください。" 10 72
    continue
   else
    if [ "$REPLY" = "Install" ]; then
     if [ -r $TMP/lilo.conf ]; then
      if [ -r $T_PX/etc/lilo.conf ]; then
       mv $T_PX/etc/lilo.conf $T_PX/etc/lilo.conf.bak
      fi
      cp $TMP/lilo.conf $T_PX/etc/lilo.conf
      chmod 644 $T_PX/etc/lilo.conf
     fi
    fi
    dialog --infobox "\nInstalling the Linux Loader..." 5 40
    if [ "$T_PX" = "/" ]; then
     lilo 1> /dev/null 2> /dev/null
    else
     lilo -r $T_PX -m /boot/map -C /etc/lilo.conf 1> /dev/null 2> /dev/null
    fi
   fi
   rm -f $TMP/tmpmsg $TMP/reply
   break
  elif [ "$REPLY" = "Skip" ]; then
   rm -f $TMP/tmpmsg $TMP/reply
   break
  elif [ "$REPLY" = "View" ]; then
   if [ -r $TMP/lilo.conf ]; then
    dialog --title "新しい/etc/lilo.conf" --textbox "$TMP/lilo.conf" 22 70
   else
    if [ -r $ROOT/etc/lilo.conf ]; then
     dialog --title "古い/etc/lilo.conf" --textbox "$ROOT/etc/lilo.conf" 22 70
    elif [ "$T_PX" = "/" -a -r /etc/lilo.conf ]; then
     dialog --title "古い/etc/lilo.conf" --textbox "/etc/lilo.conf" 22 70
    else
     dialog --title "設定ファイルが見つかりません" --msgbox \
"申しわけありませんが、表示可能なLILOの設定ファイルが見つかりません。" 6 60
    fi
   fi
  elif [ "$REPLY" = "Help" ]; then
   dialog --title "LILO INSTALLATION HELP" --textbox \
"$T_PX/usr/log/setup/text.lilohelp" 22 68
  fi
 done
else # don't use color!
 while [ 0 ]; do
  cat << EOF

LILOのインストール

LILO(Linux Loader)はいくつかのOSを起動できるブートローダです。ここでは、
LILOからLinuxを(見つかればDOSやWindows、OS/2も)起動するようにごく単純
な設定を行います。詳しい人向けにはエキスパート用のオプションを指定すれ
ば、より細かな調整が可能です。残念ながらLILOを誤ってインストールすると
パーティションを破壊してしまうかも知れませんので、第三の(安全な)選択、
すなわち「今はLILOをインストールしない」という選択も可能です。その場合、
後で'liloconfig'コマンドを実行して再設定することも可能です。どうしましょ
う？

1 -- 新しく LILO のヘッダを用意して設定を始める
2 -- LILO の設定ファイルにLinuxのパーティションを追加
3 -- LILO の設定ファイルに OS/2のパーティションを追加
4 -- LILO の設定ファイルに DOS のパーティションを追加
5 -- LILO をインストール
6 -- 既存の lilo.conf を使って LILO をインストール
7 -- LILO のインストールをスキップしてメニューを終了
8 -- 現在の /etc/lilo.conf を表示
9 -- LILOのヘルプファイルを見る

EOF
echo -n "どうしますか？(1 - 9) "
  read REPLY;
  echo
  if [ "$REPLY" = "1" ]; then
   cat << EOF
OPTIONAL append="" LINE

64M以上のメモリを積んでいる場合など、起動時に特別のカーネルパラメータ
を渡す必要があるシステムがあります。いくつかのSCSIデバイスやIBMのいく
つかのマザーボードの場合、hd=cyl,hds.secsオプションが必要かも知れませ
ん。インストール用FDから起動する際にパラメータが必要だった場合、ここで
も同じパラメータを指定すればいいでしょう。

ほとんどのシステムではカーネルパラメータは無くてもかまいません。不要な場
合はENTERを押して進んでください。

EOF
   echo -n "Enter extra parameters==> "
   read APPEND;
   echo
   cat << EOF
LILOのインストール先の設定

LILOはいくつかの場所にインストールすることができます:
 1. 最初のハードディスク(/dev/hdaか/dev/sda)のMBR
 2. Linux のパーティションの先頭(DOSやLinuxのfdiskでそのパーティション
    を起動可能にするかOS/2のブートマネージャを使って起動してください)
 3. フォーマット済のフロッピーディスク

2 か 3 を選べば安全ですが、2 の場合は後で少し作業が必要になります
(fdiskを使ってそのパーティションを起動可能にする)。どれを選びますか？

EOF
   echo -n "Please pick a target location (1 - 3): "
   read TG;
   echo
   if [ "$TG" = "1" ]; then
    if grep hda /proc/partitions 1>/dev/null 2>/dev/null ; then
     LILO_TARGET="/dev/hda"
    elif grep sda /proc/partitions 1>/dev/null 2>/dev/null ; then
     LILO_TARGET="/dev/sda"
    else
     cat << EOF
MBR の手動指定

LILOが MBR をインストールする HDD を見つけられませんでした。
申しわけありませんがMBRのHDDを手動で指定してください(ex: /dev/sda)。

EOF
     echo -n "Enter setup HDD==> "
     read LILO_TARGET;
     echo
    fi
   elif [ "$TG" = "2" ]; then
    # Here, we use the partition superblock for OS/2 Boot Manager
    LILO_TARGET=`echo $ROOT_DEVICE`
   elif [ "$TG" = "3" ]; then
    LILO_TARGET="/dev/fd0"
   else
    HDR="no"
    continue;
   fi
   cat << EOF
LILOの待ち時間の指定

起動時に左SHIFTを押せばプロンプトが出ますが、それまで何秒の間待ち
時間を設けますか？指定した時間が過ぎれば、LILOは自動的に最初のOS
を起動します。

1 -- 待ち時間をおかず、すぐに最初のOSを起動
2 -- 5秒間待機
3 -- 30秒間待機
4 -- OSを自動起動せず待ちつづける

EOF
   echo -n "どうしましょう？(1 - 4) "
   read DELAY;
   echo
   if [ "$DELAY" = "1" ]; then
    DELAY="# delay = 5"
   elif [ "$DELAY" = "2" ]; then
    DELAY="delay = 50"
   elif [ "$DELAY" = "3" ]; then
    DELAY="delay = 300"
   elif [ "$DELAY" = "4" ]; then
    DELAY="prompt"
   else
    HDR="no"
    continue;
   fi
   if [ "$APPEND" = "" ]; then
    cat << EOF > $TMP/lilo.conf
# LILO configuration file
# generated by 'liloconfig'
#
# Start LILO global section
boot = $LILO_TARGET
#compact        # faster, but won't work on all systems.
$DELAY
vga = normal    # force sane state
lba32
# ramdisk = 0     # paranoia setting
# add some funcy staff :-)
map = /boot/map-bmp
install = /boot/boot-bmp.b
bitmap = /boot/inside.bmp
bmp-colors = 14,11,,15,9,0
bmp-table = 21,287p,2,4,175p
bmp-timer = 73,29,12,8,0
# End LILO global section
EOF
    HDR="yes"
   else
    cat << EOF > $TMP/lilo.conf
# LILO configuration file
# generated by 'liloconfig'
#
# Start LILO global section
append = "vga16 unicon=eucjp vt.default_utf8=0 panic_output=7 $APPEND"
boot = $LILO_TARGET
#compact        # faster, but won't work on all systems.
$DELAY
vga = normal    # force sane state
lba32
# ramdisk = 0     # paranoia setting
# add some funcy staff :-)
map = /boot/map-bmp
install = /boot/boot-bmp.b
bitmap = /boot/inside.bmp
bmp-colors = 14,11,,15,9,0
bmp-table = 21,287p,2,4,175p
bmp-timer = 73,29,12,8,0
# End LILO global section
EOF
    HDR="yes"
   fi
  elif [ "$REPLY" = "2" ]; then
   if [ "$HDR" = "yes" ]; then
    while [ 0 ]; do
     cat << EOF
SELECT LINUX PARTITION

以下のような Linux パーティションが見つかりました:

   Device Boot  Begin   Start    End  Blocks   Id  System
`fdisk -l | grep Linux | grep 83`

EOF
     echo -n "どのパーティションをLILOから起動可能にしますか？ "
     read LINUX_PART;
     checkp_text $LINUX_PART
     if [ $? = 0 ]; then
      break;
     fi
    done
    echo
    cat << EOF
uniconの使用

uniconを使うにはカーネル起動時に与えるカーネルパラメータとして
vga16 unicon=eucjp を指定します。
EOF
     read -p "uniconを使用しますか？(y/n) " UNICON
     UNICON="`test "x$UNICON" == "xy" && echo "vga16 unicon=eucjp"`"
     echo
    cat << EOF
パーティション名の選択

このパーティションに短い名前を付ける必要があります。LILOのプロンプトが
出てる際に、その名前を使って起動するパーティションを選択できます。単に'Linux'
としておくのもわるくありません。

名前は単語一つのみです。

EOF
    echo -n "Enter name: "
    read LABEL;
    cat << EOF >> $TMP/lilo.conf
# Linux bootable partition config begins
image = /boot/vmlinuz
  root = $LINUX_PART
  label = $LABEL
EOF
    if [ -n $UNICON ] ; then
     cat << EOF >> $TMP/lilo.conf
  append = "vga16 unicon=eucjp vt.default_utf8=0 panic_output=7 $APPEND"
EOF
    fi
    cat << EOF >> $TMP/lilo.conf
  read-only # Non-UMSDOS filesystems should be mounted read-only for checking
# Linux bootable partition config ends
EOF
   else
    cat << EOF
LINUX用のパーティションを追加できません

新しく LILO のヘッダファイルを作らなければ、パーティションを追加できま
せん。

EOF
    echo -n "Press ENTER to continue."
    read JUNK;
    echo
    continue
   fi
   LNX="yes"
  elif [ "$REPLY" = "3" ]; then
   if [ "$HDR" = "yes" ]; then
    while [ 0 ]; do
     cat << EOF
OS/2 用パーティションの選択

これらは多分 OS/2 のパーティションです。このメニューでインストールすれ
ば、OS/2 のパーティションとして取り扱うことができます。

   Device Boot  Begin   Start    End  Blocks   Id  System
`fdisk -l | grep DOS`
`fdisk -l | grep HPFS`

EOF
     echo -n "どのパーティションをLILOから起動しますか？ "
     read OS_2_PART;
     checkp_text $OS_2_PART
     if [ $? = 0 ]; then
      break;
     fi
    done
    echo
    cat << EOF
パーティション名の選択

このパーティションに短い名前を付ける必要があります。LILOのプロンプトが
出てる際に、その名前を使って起動するパーティションを選択できます。単に
'OS/2'としておくのもわるくありません。

名前は単語一つのみです。

EOF
    echo -n "名前の入力: "
    read LABEL;
    echo
    TABLE="`echo $OS_2_PART | cut -b1-8`"
    if [ "`echo $TABLE | cut -b6-8`" = "hda" ]; then
     cat << EOF >> $TMP/lilo.conf
# OS/2 bootable partition config begins
other = $OS_2_PART
  label = $LABEL
  table = $TABLE
# OS/2 bootable partition config ends
EOF
    else
     cat << EOF >> $TMP/lilo.conf
# OS/2 bootable partition config begins
other = $OS_2_PART
  label = $LABEL
  table = $TABLE
  loader = /boot/os2_d.b
  map-drive = 0x80
    to = 0x81
  map-drive = 0x81
    to = 0x80
# OS/2 bootable partition config ends
EOF
    fi
   else
    cat << EOF
OS/2 パーティションを追加できません。

新しくLILOのヘッダを作らないと OS/2 のパーティションは追加できません。

EOF
    echo -n "Press ENTER to continue."
    read JUNK;
    echo
    continue
   fi
   LNX="yes"
  elif [ "$REPLY" = "4" ]; then
   if [ "$HDR" = "yes" ]; then
    while [ 0 ]; do
     cat << EOF
DOS パーティションの選択

これらは多分 DOS のパーティションです。このメニューからインストールす
れば DOS パーティションとして利用できます。

   Device Boot  Begin   Start    End  Blocks   Id  System"
`fdisk -l | grep DOS`

EOF
     echo -n "Which one would you like LILO to boot? "
     read DOSPART;
     checkp_text $DOSPART
     if [ $? = 0 ]; then
      break;
     fi
    done
    cat << EOF

パーティション名の登録

このパーティションに短い名前を付ける必要があります。LILOのプロンプトが
出てる際に、その名前を使って起動するパーティションを選択できます。単に
'DOS'としておくのもわるくありません。

名前は単語一つのみです。

EOF
    echo -n "名前の入力: "
    read LABEL;
    echo
    TABLE="`echo $DOSPART | cut -b1-8`"
    unset USE_LOADER
    if [ "`echo $TABLE | cut -b6-8`" = "hda" ]; then
     USE_LOADER="no"
    fi
    if [ "`echo $TABLE | cut -b6-8`" = "sda" ]; then
     if probe /dev/hda; then
      USE_LOADER="yes"
     else
      USE_LOADER="no"
     fi
    fi
    if [ "$USE_LOADER" = "no" ]; then
     cat << EOF >> $TMP/lilo.conf
# DOS bootable partition config begins
other = $DOSPART
  label = $LABEL
  table = $TABLE
# DOS bootable partition config ends
EOF
    else
     cat << EOF >> $TMP/lilo.conf
# DOS bootable partition config begins
other = $DOSPART
  label = $LABEL
  map-drive = 0x80
    to = 0x81
  map-drive = 0x81
    to = 0x80
  table = $TABLE
# DOS bootable partition config ends
EOF
    fi
   else
    cat << EOF
DOS パーティションを追加できません。

新しく LILO のヘッダファイルを作らないとパーティションを追加できません。

EOF
    echo -n "Press ENTER to continue."
    read JUNK;
    echo
    continue
   fi
   LNX="yes"
  elif [ "$REPLY" = "5" -o "$REPLY" = "6" ]; then
   if [ "$REPLY" = "6" -a -r $T_PX/etc/lilo.conf ]; then
    LNX="yes"
   fi
   if [ "$LNX" = "no" ]; then
    cat << EOF
LILOインストール失敗

LILOをインストールできませんでした。もし新しいヘッダファイルを作ってな
かったり、少なくとも一つの起動可能パーティションをヘッダファイルに登録
していない場合は、LILOをインストールする前にまずそれらの設定をしておか
なければいけません。もし既存の設定ファイルを使ってインストールしようと
しているなら、その設定ファイルが見つからないので、新しく作成してみてく
ださい。

EOF
    echo -n "Press ENTER to continue."
    read JUNK;
    echo
    continue
   else
    if [ "$REPLY" = "5" ]; then
     if [ -r $TMP/lilo.conf ]; then
      if [ -r $T_PX/etc/lilo.conf ]; then
       mv $T_PX/etc/lilo.conf $T_PX/etc/lilo.conf.bak
      fi
      cp $TMP/lilo.conf $T_PX/etc/lilo.conf
      chmod 644 $T_PX/etc/lilo.conf
     fi
    fi
    echo
    echo "Installing the Linux Loader..."
    if [ "$T_PX" = "/" ]; then
     lilo
    else
     lilo -r $T_PX -m /boot/map -C /etc/lilo.conf
    fi
   fi
   rm -f $TMP/tmpmsg $TMP/reply
   break
  elif [ "$REPLY" = "7" ]; then
   rm -f $TMP/tmpmsg $TMP/reply
   break
  elif [ "$REPLY" = "8" ]; then
   if [ -r $TMP/lilo.conf ]; then
    if [ -r /bin/more ]; then
     cat $TMP/lilo.conf | more
    else
     cat $TMP/lilo.conf
    fi
    echo -n "Press ENTER to continue..."
    read JUNK;
    echo
   else
    if [ -r $ROOT/etc/lilo.conf ]; then
     if [ -r /bin/more ]; then
      cat $ROOT/etc/lilo.conf | more
     else
      cat $ROOT/etc/lilo.conf
     fi
     echo -n "Press ENTER to continue..."
     read JUNK;
     echo
    elif [ "$T_PX" = "/" -a -r /etc/lilo.conf ]; then
     if [ -r /bin/more ]; then
      cat /etc/lilo.conf | more
     else
      cat /etc/lilo.conf
     fi
     echo -n "Press ENTER to continue..."
     read JUNK;
     echo
    else
     cat << EOF

設定ファイルが見つかりません

申しわけありませんが、表示可能な LILO の設定ファイルは見あたりませんで
した。

EOF
     echo -n "Press ENTER to continue..."
     read JUNK;
     echo
    fi
   fi
  elif [ "$REPLY" = "9" ]; then
   if [ -r /bin/more ]; then
    cat $T_PX/usr/log/setup/text.lilohelp | more
   else
    cat $T_PX/usr/log/setup/text.lilohelp
    echo -n "Sorry... there's no pager on this disk. Press ENTER to continue."
    read JUNK;
    echo
   fi
  fi
 done
 echo
fi # are we using color?
