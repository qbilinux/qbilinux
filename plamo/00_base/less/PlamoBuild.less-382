#!/bin/sh

######################################################################
url="ftp://ftp.jp.freebsd.org/pub/FreeBSD/ports/distfiles/less-382.tar.gz
    ftp://ftp.jp.freebsd.org/pub/FreeBSD/ports/distfiles/less-382-iso258.patch.gz
    ftp://ftp.jp.freebsd.org/pub/FreeBSD/ports/distfiles/less-382-iso258-259.patch.gz
    ftp://ftp.jp.freebsd.org/pub/FreeBSD/ports/distfiles/less-382-iso259-260.patch.gz
    ftp://ftp.jp.freebsd.org/pub/FreeBSD/ports/distfiles/less-382-iso260-261.patch.gz
    ftp://ftp.jp.freebsd.org/pub/FreeBSD/ports/distfiles/less-382-iso261-262.patch.gz
    ftp://ftp.jp.freebsd.org/pub/FreeBSD/ports/distfiles/less-382-iso262.ext03.patch.gz
    ftp://plamo.linet.gr.jp/pub/Plamo-src.new/plamo/00_base/less/less-382-def_priority.patch.gz"
pkgbase=less
vers=382
arch=`uname -m`
build=P4
src=$pkgbase-$vers
OPT_CONFIG=""
DOCS="COPYING INSTALL LICENSE NEWS README"
######################################################################

fscheck() {
  PANGRAM="The quick brown fox jumps over the lazy dog."
  echo -n "Checking for the filesystem ... "
  mkdir pangram ; ( cd pangram ; touch $PANGRAM )
  mv pangram pangram~ ; mkdir pangram ; touch -r pangram~ pangram
  tar cpf pangram.tar pangram ; rmdir pangram ; mv pangram~ pangram
  for i in $PANGRAM ; do tar rpf pangram.tar pangram/$i ; done
  touch -t `date '+%m%d0900'` pangram.tar ; gzip pangram.tar
  touch pangram.tar.gz ; mv pangram.tar.gz pangram1.tgz
  tar cpf pangram.tar pangram
  touch -t `date '+%m%d0900'` pangram.tar ; gzip pangram.tar
  touch pangram.tar.gz ; mv pangram.tar.gz pangram2.tgz
  if cmp -s pangram1.tgz pangram2.tgz ; then
    echo "OK"
    rm -rf pangram pangram1.tgz pangram2.tgz
  else
    echo "NG"
    cat <<- "EOF"
	Hmm, packaging may not be done properly on this filesystem.
	Would you please try again on a default filesystem, thanks!
	
	Happy packaging!!
	
	Quitting...
	EOF
    exit
  fi
}

install2() {
  install -d ${2%/*} ; install -m 644 $1 $2
}

strip_bindir() {
  echo "compressing in $1"
  if [ -d $1 ] ; then (
    shopt -s nullglob
    cd $1
    for i in * ; do
      echo "$i"
      if [ -h $i ] ; then continue ; fi
      if [ -n "`file $i | grep "not stripped"`" ] ; then
         echo "stripping -p $i"
         strip -p $i
      fi
    done
  ) fi
}

strip_libdir() {
  echo "compressing in $1"
  if [ -d $1 ] ; then (
    shopt -s nullglob
    cd $1
    for i in *.so *.so.* *.a ; do
      echo "$i"
      if [ -h $i ] ; then continue ; fi
      if [ -n "`nm -a $i | grep " a "`" ] ; then
        if [ $i != ${i%.a} ] ; then
          echo -n "ranlib and "
          touch -r $i $i.mt ; ranlib $i ; touch -r $i.mt $i ; rm $i.mt
        fi
        echo "stripping -gp $i"
        strip -gp $i
      fi
    done
  ) fi
}

gzip_dir() {
  echo "compressing in $1"
  if [ -d $1 ] ; then (
    cd $1
    files=`ls -f --indicator-style=none | sed '/^\.\{1,2\}$/d'`
    for i in $files ; do
      echo "$i"
      if [ ! -f $i -a ! -h $i -o $i != ${i%.gz} ] ; then continue ; fi
      lnks=`ls -l $i | awk '{print $2}'`
      if [ $lnks -gt 1 ] ; then
        inum=`ls -i $i | awk '{print $1}'`
        for j in `find . -maxdepth 1 -inum $inum` ; do
          if [ ${j#./} == $i ] ; then
            gzip -f $i
          else
            rm -f ${j#./} ; ln $i.gz ${j#./}.gz
          fi
        done
      elif [ -h $i ] ; then
        target=`readlink $i` ; rm -f $i ; ln -s $target.gz $i.gz
      else
        gzip $i
      fi
    done
    for i in $files ; do mv ${i%.gz}.gz $C ; done
    for i in $files ; do mv $C/${i%.gz}.gz . ; done
  ) fi
}

gzip_one() {
  gzip $1 ; mv $1.gz $C ; mv $C/${1##*/}.gz ${1%/*}
}

compress() {
  for i in {$P,$P/usr}/{sbin,bin} ; do strip_bindir $i ; done
  for i in {$P,$P/usr}/$libdir ; do strip_libdir $i ; done
  if [ -f $infodir/dir ] ; then rm -f $infodir/dir ; fi
  gzip_dir $infodir
  for i in `seq 9` n ; do gzip_dir $mandir/man$i ; done
}

prune_symlink() {
  echo "pruning symlink in $1"
  if [ -d $1 ] ; then (
    cd $P
    rm -f /tmp/iNsT-a.$$ ; touch /tmp/iNsT-a.$$
    for i in `find ${1#$P/} -type l` ; do
      target=`readlink $i`
      echo "$i -> $target"
      echo $i$'\n'$target >> /tmp/iNsT-a.$$
    done
    COUNT=1
    LINE=`sed -n "${COUNT}p" /tmp/iNsT-a.$$`
    while [ -n "$LINE" ] ; do
      LINKGOESIN=`dirname $LINE`
      LINKNAMEIS=`basename $LINE`
      COUNT=$(($COUNT + 1))
      LINKPOINTSTO=`sed -n "${COUNT}p" /tmp/iNsT-a.$$`
      if [ ! -d install ] ; then mkdir install ; fi
      cat <<- EOF >> install/doinst.sh
	( cd $LINKGOESIN ; rm -rf $LINKNAMEIS )
	( cd $LINKGOESIN ; ln -sf $LINKPOINTSTO $LINKNAMEIS )
	EOF
      rm -rf $LINE ; touch -t `date '+%m%d0900'` install/doinst.sh $LINE
      COUNT=$(($COUNT + 1))
      LINE=`sed -n "${COUNT}p" /tmp/iNsT-a.$$`
    done
    rm -f /tmp/iNsT-a.$$
  ) fi
}

convert() {
  for i in {$P,$P/usr}/{sbin,bin} ; do prune_symlink $i ; done
  for i in {$P,$P/usr}/$libdir ; do prune_symlink $i ; done
  prune_symlink $infodir
  for i in `seq 9` n ; do prune_symlink $mandir/man$i ; done
}

fscheck
W=`pwd`
for i in `seq 0 $((${#src[@]} - 1))` ; do
  S[$i]=$W/${src[$i]} ; B[$i]=$W/build`test ${#src[@]} -eq 1 || echo $i`
done
P=$W/work ; C=$W/pivot
infodir=$P/usr/share/info
mandir=$P/usr/share/man
docdir=$P/usr/share/doc
myname=`basename $0`
pkg=$pkgbase-$vers-$arch-$build
case $arch in x86_64) libdir=lib64 ;; *) libdir=lib ;; esac
if [ $# -eq 0 ] ; then
  opt_download=1 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  for i in $url ; do
    if [ ! -f ${i##*/} ] ; then wget $i ; fi
  done
  for i in $url ; do
    case ${i##*.} in
    tar) tar xvpf ${i##*/} ;;
    gz) tar xvpzf ${i##*/} ;;
    bz2) tar xvpjf ${i##*/} ;;
    esac
  done
fi
if [ $opt_config -eq 1 ] ; then
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    if [ -d ${B[$i]} ] ; then rm -rf ${B[$i]} ; fi ; cp -a ${S[$i]} ${B[$i]}
  done
  cd $B
  gunzip -c $W/less-382-iso258.patch.gz | patch -Np1 -fT -i -
  gunzip -c $W/less-382-iso258-259.patch.gz | patch -Np1 -i -
  gunzip -c $W/less-382-iso259-260.patch.gz | patch -Np1 -fT -i -
  gunzip -c $W/less-382-iso260-261.patch.gz | patch -Np1 -i -
  gunzip -c $W/less-382-iso261-262.patch.gz | patch -Np1 -i -
  gunzip -c $W/less-382-iso262.ext03.patch.gz | patch -Np1 -fT -i -
  gunzip -c $W/less-382-def_priority.patch.gz | patch -Np1 -i -
  cp -p Makefile.in Makefile.in.orig ; chmod 644 Makefile.in
  sed -i -e '/^\t\${INSTALL_/s@\${bindir@$(DESTDIR)&@g' \
      -e '/^\t\${INSTALL_/s@\${mandir@$(DESTDIR)&@g' \
      -e '/\/mkinstalldirs/s@\${bindir@$(DESTDIR)&@g' \
      -e '/\/mkinstalldirs/s@\${mandir@$(DESTDIR)&@g' Makefile.in
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    cd ${B[$i]}
    if [ -f Makefile ] ; then
      make clean
    fi
    if [ -f config.log ] ; then
      rm -rf config.cache config.log
    fi
    if [ -x configure ] ; then
      ./configure --prefix=/usr --libdir='${exec_prefix}'/$libdir \
          --infodir='${prefix}'/share/info \
          --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]}
    fi
  done
fi
if [ $opt_build -eq 1 ] ; then
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    cd ${B[$i]}
    if [ -f Makefile ] ; then
      make
    fi
  done
fi
if [ $opt_package -eq 1 ] ; then
  if [ `id -u` -ne 0 ] ; then
    read -p "Do you want to package as root? [y/N] " ans
    if [ "x$ans" == "xY" -o "x$ans" == "xy" ] ; then
      cd $W ; /bin/su -c "$0 package" ; exit
    fi
  fi
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  if [ -d $C ] ; then rm -rf $C ; fi ; mkdir -p $C
  touch $W/i.st ; sleep 1
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    cd ${B[$i]}
    if [ -f Makefile ] ; then
      make install DESTDIR=$P
    fi
  done
  uudecode <<- "EOF" | gunzip > $P/usr/share/man/man1/lessecho.1
	begin-base64 644 /dev/stdout
	H4sIAAAAAAAAA4VUXWvbQBB8169Y9JTQWE1SUtpSSpzE1IbUNjmnUJI8nKWVfKD76H1g699375y4
	Ko3al+M47czODLsqVlO4nTA2uZ4u4Azy72id0ArefTh/I5w+v/j4CU7fA0MD56enF3lWsCnMx98m
	WYvOYbnR8DgC3BmuKpDoebnhlpeeaFIp+zFfLNmMZcUVvCCyYgb5w0jvnuBhVKbTqHhW6ZTpRaU7
	pjt/glq0CEVR7AXkNxN2fTdbrmaLeR7pDtTCAQdjdWO5BL/hHpyQpu0gfnUgPH23TZCo6EY+nSfh
	3FaggzfBF9lV8MBVd6iCUivPhRKqAWd4iUTiAFXZaocVCAU/g/boiiRskSSxbAwuSMltB7oGbTxF
	mnCCcKEi3BpbvSXMahmTeaQwMmawFLWgBvkuB6+phhwgwfG5CRzC7SHLYWTS+A+oUX2o+l/TE+CU
	niITHps/iKpholc1DDPJ193ww2z1atXrXX/XDrfB4dDQldzstUKt7YHM9eD1sN9B+LAY3iNLI8vb
	tjel3OIzf0qxKrIV9amw5qH1cagSRqu264H+ntpI80KQdohNJjC+ZYs8rfLR2XF6Ht+vpos7akHE
	kqvAWzC8QdiS+q0V3tNcrDtYbbSkF0ZbhaaGz25/uaxwLbgqtG2+nGTRf8zkJj3C1/n921uhwg5c
	5zxKOFrTskneRW8hbhMRawJYd0wal8uMIf1V1qEBi0bbuLGWnMm9xZhJaEZR/GWjQuxZZL8Ajlv3
	69AEAAA=
	====
	EOF
  cat <<- "EOF" > $P/usr/bin/lesspipe.sh
	#!/bin/sh -
	#
	# To use this filter with less, define LESSOPEN:
	# export LESSOPEN="|/usr/bin/lesspipe.sh %s"
	
	lesspipe() {
	  case "$1" in
	  *.[1-9n]|*.man|*.[1-9n].bz2|*.man.bz2|*.[1-9].gz|*.[1-9]x.gz|*.[1-9].man.gz)
	    case "$1" in
	    *.gz) DECOMPRESSOR="gunzip -c" ;;
	    *.bz2) DECOMPRESSOR="bunzip2 -c" ;;
	    *) DECOMPRESSOR="cat" ;;
	    esac
	    if $DECOMPRESSOR -- "$1" | file - | grep -q "troff" ; then
	      if echo "$1" | grep -q "^/" ; then	# absolute path
	        man -- "$1" | cat -s
	      else
	        man -- "./$1" | cat -s
	      fi
	    else
	      $DECOMPRESSOR -- "$1"
	    fi ;;
	  *.tar|*.tar.*|*.tgz|*.tbz2|*.txz) tar tvvf "$1" ;;
	  *.[zZ]|*.gz) gzip -dc -- "$1" ;;
	  *.xz) xz -dc -- "$1" ;;
	  *.lzma|*.lzm) lzma --dc -- "$1" ;;
	  *.lzo) lzop --dc -- "$1" ;;
	  *.lzh) lha -l "$1" ;;
	  *.bz2) bzip2 -dc -- "$1" ;;
	  *.zip|*.jar|*.od[ts]) zipinfo -- "$1" ;;
	  *.rpm) rpm -qpivl --changelog -- "$1" ;;
	  *.cpi|*.cpio) cpio -itv < "$1" ;;
	  esac
	}
	
	if [ -d "$1" ] ; then
	  ls -flF -- "$1"
	else
	  lesspipe "$1" 2> /dev/null
	fi
	EOF
  chmod 755 $P/usr/bin/lesspipe.sh
  touch $W/i.et
  cd $W
  find $P ! -type l -newer i.st ! -newer i.et \
      -exec touch -t `date '+%m%d0900'` {} \;
  compress
  for i in `seq 0 $((${#DOCS[@]} - 1))` ; do
    for j in ${DOCS[$i]} ; do
      for k in ${S[$i]}/$j ; do
        install2 $k $docdir/${src[$i]}/${k#${S[$i]}/}
        touch -r $k $docdir/${src[$i]}/${k#${S[$i]}/}
        gzip_one $docdir/${src[$i]}/${k#${S[$i]}/}
      done
    done
    if [ $i -eq 0 ] ; then
      install $myname $docdir/$src
      touch -t `date '+%m%d0900'` $docdir/$src/$myname
      gzip_one $docdir/$src/$myname
    else
      ln $docdir/$src/$myname.gz $docdir/${src[$i]}
    fi
    ( cd $docdir ; find ${src[$i]} -type d -exec touch -r $W/{} {} \; )
  done
  cp -p $B/{LICENSE,README.{iso{,.jp},ext.jp}} $docdir/$src
  chmod 644 $docdir/$src/LICENSE
  chown root.root $docdir/$src/{LICENSE,README.{iso{,.jp},ext.jp}}
  nkf -e --in-place $docdir/$src/README.iso.jp
  touch -r $B/README.iso.jp $docdir/$src/README.iso.jp
  rm $docdir/$src/LICENSE.gz
  for i in LICENSE README.{iso{,.jp},ext.jp} ; do
    gzip_one $docdir/$src/$i
  done
  mv $docdir/$src/{README.{iso{,.jp},ext.jp},$myname}.gz $C
  mv $C/{README.{iso{,.jp},ext.jp},$myname}.gz $docdir/$src
  touch -r $S $docdir/$src
  convert
  tar cvpf $pkg.tar -C $P `cd $P ; find usr/bin | tail -n+2`
  tar rvpf $pkg.tar -C $P `cd $P ; find usr/share/man/man1 | tail -n+2`
  tar rvpf $pkg.tar -C $P usr/share/doc/$src
  touch -t `date '+%m%d0900'` $pkg.tar ; xz $pkg.tar ; touch $pkg.tar.xz
  mv $pkg.tar.xz $pkg.txz
  read -p "Do you want to keep work files? [y/N] " ans
  if [ "x$ans" != "xY" -a "x$ans" != "xy" ] ; then rm -rf $P $C i.[se]t ; fi
fi
