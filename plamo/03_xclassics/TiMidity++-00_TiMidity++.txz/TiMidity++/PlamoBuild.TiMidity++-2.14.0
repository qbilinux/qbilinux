#!/bin/sh

######################################################################
url="http://downloads.sourceforge.net/timidity/TiMidity++-2.14.0-140821-1200.tar.bz2
    http://plamo.linet.gr.jp/~tamuki/src/guspat-20000706-required.tar.gz"
pkgbase=TiMidity++
vers=2.14.0
arch=`uname -m`
build=P3
src=$pkgbase-$vers
OPT_CONFIG="--enable-audio=alsa,arts,esd,jack,ao,vorbis,flac,speex
    --enable-dynamic=ncurses,slang,motif,tcltk,emacs,vt100,xaw,xskin,gtk,server,alsaseq
    --enable-network --enable-spectrogram --enable-wrd"
DOCS="README AUTHORS COPYING ChangeLog INSTALL NEWS TODO ChangeLog.[123]
    INSTALL.ja README.ja doc/C/CHANGES.02i doc/C/FAQ
    `echo doc/C/README.{dl,sf,tk,xskin,xaw,alsaseq,m2m,mts,w32}`
    `echo doc/ja_JP.eucJP/README.{dl,sf,tk,xskin,xaw,alsaseq,m2m,mts,w32}`"
######################################################################

fscheck() {
  PANGRAM="The quick brown fox jumps over the lazy dog."
  echo -n "Checking for the filesystem ... "
  mkdir pangram ; ( cd pangram ; touch $PANGRAM )
  mv pangram pangram~ ; mkdir pangram ; touch -r pangram~ pangram
  tar cpf pangram.tar pangram ; rmdir pangram ; mv pangram~ pangram
  for i in $PANGRAM ; do tar rpf pangram.tar pangram/$i ; done
  touch -t `date '+%m%d0900'` pangram.tar ; gzip pangram.tar
  touch pangram.tar.gz ; mv pangram.tar.gz pangram1.tgz
  tar cpf pangram.tar pangram
  touch -t `date '+%m%d0900'` pangram.tar ; gzip pangram.tar
  touch pangram.tar.gz ; mv pangram.tar.gz pangram2.tgz
  if cmp -s pangram1.tgz pangram2.tgz ; then
    echo "OK"
    rm -rf pangram pangram1.tgz pangram2.tgz
  else
    echo "NG"
    cat <<- "EOF"
	Hmm, packaging may not be done properly on this filesystem.
	Would you please try again on a default filesystem, thanks!
	
	Happy packaging!!
	
	Quitting...
	EOF
    exit
  fi
}

install2() {
  install -d ${2%/*} ; install -m 644 $1 $2
}

strip_bindir() {
  echo "compressing in $1"
  if [ -d $1 ] ; then (
    shopt -s nullglob
    cd $1
    for i in * ; do
      echo "$i"
      if [ -h $i ] ; then continue ; fi
      if [ -n "`file $i | grep "not stripped"`" ] ; then
         echo "stripping -p $i"
         strip -p $i
      fi
    done
  ) fi
}

strip_libdir() {
  echo "compressing in $1"
  if [ -d $1 ] ; then (
    shopt -s nullglob
    cd $1
    for i in *.so *.so.* *.a ; do
      echo "$i"
      if [ -h $i ] ; then continue ; fi
      if [ -n "`nm -a $i | grep " a "`" ] ; then
        if [ $i != ${i%.a} ] ; then
          echo -n "ranlib and "
          touch -r $i $i.mt ; ranlib $i ; touch -r $i.mt $i ; rm $i.mt
        fi
        echo "stripping -gp $i"
        strip -gp $i
      fi
    done
  ) fi
}

gzip_dir() {
  echo "compressing in $1"
  if [ -d $1 ] ; then (
    cd $1
    files=`ls -f --indicator-style=none | sed '/^\.\{1,2\}$/d'`
    for i in $files ; do
      echo "$i"
      if [ ! -f $i -a ! -h $i -o $i != ${i%.gz} ] ; then continue ; fi
      lnks=`ls -l $i | awk '{print $2}'`
      if [ $lnks -gt 1 ] ; then
        inum=`ls -i $i | awk '{print $1}'`
        for j in `find . -maxdepth 1 -inum $inum` ; do
          if [ ${j#./} == $i ] ; then
            gzip -f $i
          else
            rm -f ${j#./} ; ln $i.gz ${j#./}.gz
          fi
        done
      elif [ -h $i ] ; then
        target=`readlink $i` ; rm -f $i ; ln -s $target.gz $i.gz
      else
        gzip $i
      fi
    done
    for i in $files ; do mv ${i%.gz}.gz $C ; done
    for i in $files ; do mv $C/${i%.gz}.gz . ; done
  ) fi
}

gzip_one() {
  gzip $1 ; mv $1.gz $C ; mv $C/${1##*/}.gz ${1%/*}
}

compress() {
  for i in {$P,$P/usr}/{sbin,bin} ; do strip_bindir $i ; done
  for i in {$P,$P/usr}/$libdir ; do strip_libdir $i ; done
  if [ -f $infodir/dir ] ; then rm -f $infodir/dir ; fi
  gzip_dir $infodir
  for i in `seq 9` n ; do gzip_dir $mandir/man$i ; done
}

prune_symlink() {
  echo "pruning symlink in $1"
  if [ -d $1 ] ; then (
    cd $P
    rm -f /tmp/iNsT-a.$$ ; touch /tmp/iNsT-a.$$
    for i in `find ${1#$P/} -type l` ; do
      target=`readlink $i`
      echo "$i -> $target"
      echo $i$'\n'$target >> /tmp/iNsT-a.$$
    done
    COUNT=1
    LINE=`sed -n "${COUNT}p" /tmp/iNsT-a.$$`
    while [ -n "$LINE" ] ; do
      LINKGOESIN=`dirname $LINE`
      LINKNAMEIS=`basename $LINE`
      COUNT=$(($COUNT + 1))
      LINKPOINTSTO=`sed -n "${COUNT}p" /tmp/iNsT-a.$$`
      if [ ! -d install ] ; then mkdir install ; fi
      cat <<- EOF >> install/doinst.sh
	( cd $LINKGOESIN ; rm -rf $LINKNAMEIS )
	( cd $LINKGOESIN ; ln -sf $LINKPOINTSTO $LINKNAMEIS )
	EOF
      rm -rf $LINE ; touch -t `date '+%m%d0900'` install/doinst.sh $LINE
      COUNT=$(($COUNT + 1))
      LINE=`sed -n "${COUNT}p" /tmp/iNsT-a.$$`
    done
    rm -f /tmp/iNsT-a.$$
  ) fi
}

convert() {
  for i in {$P,$P/usr}/{sbin,bin} ; do prune_symlink $i ; done
  for i in {$P,$P/usr}/$libdir ; do prune_symlink $i ; done
  prune_symlink $infodir
  for i in `seq 9` n ; do prune_symlink $mandir/man$i ; done
}

fscheck
W=`pwd`
for i in `seq 0 $((${#src[@]} - 1))` ; do
  S[$i]=$W/${src[$i]} ; B[$i]=$W/build`test ${#src[@]} -eq 1 || echo $i`
done
P=$W/work ; C=$W/pivot
infodir=$P/usr/share/info
mandir=$P/usr/share/man
docdir=$P/usr/share/doc
myname=`basename $0`
pkg=$pkgbase-$vers-$arch-$build
case $arch in i686) libdir=lib ;; x86_64) libdir=lib64 ;; esac
if [ $# -eq 0 ] ; then
  opt_download=1 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  for i in $url ; do
    if [ ! -f ${i##*/} ] ; then wget $i ; fi
  done
  for i in $url ; do
    case ${i##*.} in
    tar) tar xvpf ${i##*/} ;;
    gz) tar xvpzf ${i##*/} ;;
    bz2) tar xvpjf ${i##*/} ;;
    esac
  done
fi
if [ $opt_config -eq 1 ] ; then
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    if [ -d ${B[$i]} ] ; then rm -rf ${B[$i]} ; fi ; cp -a ${S[$i]} ${B[$i]}
  done
  cd $B
  cp -p timidity/timidity.h{,.orig}
  sed '/MAX_CHANNELS/s@32@80@g' timidity/timidity.h.orig > timidity/timidity.h
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    cd ${B[$i]}
    if [ -f Makefile ] ; then
      make clean
    fi
    if [ -f config.log ] ; then
      rm -rf config.cache config.log
    fi
    if [ -x configure ] ; then
      ./configure --prefix=/usr --libdir='${exec_prefix}'/$libdir \
          --infodir='${prefix}'/share/info \
          --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]} \
          --with-module-dir=/usr/$libdir/timidity
    fi
  done
fi
if [ $opt_build -eq 1 ] ; then
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    cd ${B[$i]}
    if [ -f Makefile ] ; then
      make CFLAGS="-fno-omit-frame-pointer"
    fi
  done
fi
if [ $opt_package -eq 1 ] ; then
  if [ `id -u` -ne 0 ] ; then
    read -p "Do you want to package as root? [y/N] " ans
    if [ "x$ans" == "xY" -o "x$ans" == "xy" ] ; then
      cd $W ; /bin/su -c "$0 package" ; exit
    fi
  fi
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  if [ -d $C ] ; then rm -rf $C ; fi ; mkdir -p $C
  touch $W/i.st ; sleep 1
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    cd ${B[$i]}
    if [ -f Makefile ] ; then
      make install DESTDIR=$P
    fi
  done
  appdefdir=$P/usr/$libdir/X11/app-defaults
  install2 interface/TiMidity.ad $appdefdir/TiMidity
  sed 's@${prefix}@/usr@g' $appdefdir/TiMidity > $appdefdir/TiMidity~
  mv $appdefdir/TiMidity~ $appdefdir/TiMidity
  jappdefdir=$P/usr/$libdir/X11/ja_JP.eucJP/app-defaults
  install2 interface/TiMidity-uj.ad $jappdefdir/TiMidity
  sed 's@${prefix}@/usr@g' $jappdefdir/TiMidity > $jappdefdir/TiMidity~
  mv $jappdefdir/TiMidity~ $jappdefdir/TiMidity
  jmandir=$mandir/ja_JP.eucJP
  install2 doc/ja_JP.eucJP/timidity.1 $jmandir/man1/timidity.1
  install2 doc/ja_JP.eucJP/timidity.cfg.5 $jmandir/man5/timidity.cfg.5
  touch $W/i.et
  cd $W
  find $P ! -type l -newer i.st ! -newer i.et \
      -exec touch -t `date '+%m%d0900'` {} \;
  compress
  strip_libdir $P/usr/$libdir/timidity
  touch -t `date '+%m%d0900'` $P/usr/$libdir/timidity
  gzip_dir $jmandir/man1
  gzip_dir $jmandir/man5
  shrtmdydir=$P/usr/share/timidity
  cp -a timidity $P/usr/share
  chown -R root.root $shrtmdydir
  cp -p $shrtmdydir/timidity.cfg $shrtmdydir/timidity.cfg.orig
  sed 's@/usr/local@/usr@g' $shrtmdydir/timidity.cfg.orig \
      > $shrtmdydir/timidity.cfg
  touch -t 200104260900 $shrtmdydir/timidity.cfg
  mv $shrtmdydir/{timidity.cfg.orig,LSPATCH,NoteFreqTable,inst,timidity.cfg} $C
  mv $C/{timidity.cfg.orig,LSPATCH,NoteFreqTable,inst,timidity.cfg} $shrtmdydir
  touch -r timidity $shrtmdydir
  for i in `seq 0 $((${#DOCS[@]} - 1))` ; do
    for j in ${DOCS[$i]} ; do
      for k in ${S[$i]}/$j ; do
        install2 $k $docdir/${src[$i]}/${k#${S[$i]}/}
        touch -r $k $docdir/${src[$i]}/${k#${S[$i]}/}
        gzip_one $docdir/${src[$i]}/${k#${S[$i]}/}
      done
    done
    if [ $i -eq 0 ] ; then
      install $myname $docdir/$src
      touch -t `date '+%m%d0900'` $docdir/$src/$myname
      gzip_one $docdir/$src/$myname
    else
      ln $docdir/$src/$myname.gz $docdir/${src[$i]}
    fi
    ( cd $docdir ; find ${src[$i]} -type d -exec touch -r $W/{} {} \; )
  done
  convert
  tar cvpf $pkg.tar -C $P usr/bin/timidity
  tar rvpf $pkg.tar -C $P usr/$libdir/timidity
  tar rvpf $pkg.tar -C $P usr/share/emacs/site-lisp/timidity.el
  tar rvpf $pkg.tar -C $P usr/$libdir/X11/app-defaults/TiMidity
  tar rvpf $pkg.tar -C $P usr/$libdir/X11/ja_JP.eucJP/app-defaults/TiMidity
  tar rvpf $pkg.tar -C $P usr/share/man/man1/timidity.1.gz
  tar rvpf $pkg.tar -C $P usr/share/man/man5/timidity.cfg.5.gz
  tar rvpf $pkg.tar -C $P usr/share/man/ja_JP.eucJP/man1/timidity.1.gz
  tar rvpf $pkg.tar -C $P usr/share/man/ja_JP.eucJP/man5/timidity.cfg.5.gz
  tar rvpf $pkg.tar -C $P usr/share/timidity
  tar rvpf $pkg.tar -C $P usr/share/doc/$src
  touch -t `date '+%m%d0900'` $pkg.tar ; xz $pkg.tar ; touch $pkg.tar.xz
  mv $pkg.tar.xz $pkg.txz
  read -p "Do you want to keep work files? [y/N] " ans
  if [ "x$ans" != "xY" -a "x$ans" != "xy" ] ; then rm -rf $P $C i.[se]t ; fi
fi
