#!/bin/sh
##############################################################
pkgbase="runc"
vers=1.0.0_rc92
url="https://github.com/opencontainers/runc/archive/v${vers/_/-}.tar.gz"
srcfile=runc-${vers/_/-}.tar.gz
commitid=
GITHASH=${GITHASH:-ff819c7e9184c13b7c2607fe6c30ae19403a7aff}
apply_arch="x86_64 aarch64"
arch=`uname -m`
build=1
src=runc-${vers/_/-}
OPT_CONFIG=''
DOCS='CONTRIBUTING.md LICENSE MAINTAINERS MAINTAINERS_GUIDE.md NOTICE PRINCIPLES.md README.md SECURITY.md VERSION'
patchfiles=''
compress=txz
SRC_URL=${SRC_URL:-"https://qbilinux.org/pub/source/"}
SRC_DIR=${SRC_DIR:-"/home/archives/source/"}
##############################################################


source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}


do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    sed -i '/^COMMIT/d' Makefile
}

do_build() {
    cd ${B[$1]}
    export LDFLAGS='-Wl,--as-needed'
    make BUILDTAGS="seccomp" COMMIT=${GITHASH}
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    export LDFLAGS='-Wl,--as-needed'
    make install BINDIR=$P/usr/bin
    make install-bash PREFIX=$P/usr
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
