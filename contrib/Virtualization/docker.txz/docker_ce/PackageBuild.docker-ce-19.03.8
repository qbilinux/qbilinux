#!/bin/sh
##############################################################
pkgbase="docker_ce"
vers=19.03.8
url="https://github.com/docker/docker-ce/archive/v19.03.8.tar.gz"
srcfile=docker-ce-19.03.8.tar.gz
commitid=
GITHASH=${GITHASH:-afacb8b}
apply_arch="x86_64 aarch64"
arch=`uname -m`
build=2
src=docker-ce-${vers}
OPT_CONFIG=''
DOCS='CHANGELOG.md README.md'
patchfiles=''
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################


source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}


do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    mkdir -p build/src/github.com/docker
    ( cd build/src/github.com/docker
      ln -s ${B[$1]}/components/engine docker
      ln -s ${B[$1]}/components/cli cli
    )
}

do_build() {
    cd ${B[$1]}
    
    # Build daemon.
    cd components/engine
    DOCKER_GITCOMMIT=$GITHASH \
		    DOCKER_BUILDTAGS="seccomp" \
		    VERSION=$(cat ../../VERSION) \
		    GOPATH=${B[$1]}/build \
		    ./hack/make.sh dynbinary
    cd -

    # Build CLI.
    cd components/cli
    DISABLE_WARN_OUTSIDE_CONTAINER=1 \
				  make dynbinary \
				  GITCOMMIT=$GITHASH \
				  VERSION=$(cat ../../VERSION) \
				  GOPATH=${B[$1]}/build
    cd -
}

do_install() {
    cd ${B[$1]}

    # daemon.
    install -D -m 0755 components/engine/bundles/dynbinary-daemon/dockerd-$vers \
	    $P/usr/bin/dockerd

    # Build CLI.
    if [ $arch = "x86_64" ]; then
	install -D -m 0755 components/cli/build/docker-linux-amd64 $P/usr/bin/docker
    elif [ $arch = "aarch64" ]; then
	install -D -m 0755 components/cli/build/docker-linux-arm64 $P/usr/bin/docker
    fi

    # Integrate required components.
    ln -s runc $P/usr/bin/docker-runc
    ln -s containerd $P/usr/bin/docker-containerd
    ln -s containerd-shim $P/usr/bin/docker-containerd-shim
    ln -s ctr $P/usr/bin/docker-containerd-ctr
    ln -s tini-static $P/usr/bin/docker-init

    # Completion.
    ( cd components/cli/contrib/completion
      install -D -m 0644 bash/docker $P/usr/share/bash-completion/completions/docker
      install -D -m 0644 zsh/_docker $P/usr/share/zsh/site-functions/_docker
      install -D -m 0644 fish/docker.fish $P/usr/share/fish/vendor_completions.d/docker.fish
    )

    install -D -m 0644 $W/config/docker.default $P/etc/default/docker.new
    install -D -m 0644 $W/config/docker.logrotate $P/etc/logrotate.d/docker.new
    install -D -m 0644 $W/config/rc.docker $P/etc/rc.d/rc.docker.new

    # Install udev rules.
    install -D -m 0644 components/engine/contrib/udev/80-docker.rules \
	    $P/lib/udev/rules.d/80-docker.rules

    mkdir -p $P/install
    cat $W/doinst.sh > $P/install/doinst.sh
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
