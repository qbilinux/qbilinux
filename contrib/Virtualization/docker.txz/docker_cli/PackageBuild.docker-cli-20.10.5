#!/bin/sh
##############################################################
pkgbase="docker_cli"
vers=20.10.5
url="https://github.com/docker/cli/archive/v${vers}/cli-${vers}.tar.gz"
commitid=
GITHASH=${GITHASH:-55c4c88}
apply_arch="x86_64 aarch64"
arch=`uname -m`
build=1
src=cli-${vers}
OPT_CONFIG=''
DOCS='AUTHORS CONTRIBUTING.md LICENSE MAINTAINERS NOTICE README.md TESTING.md VERSION'
patchfiles=''
compress=txz
SRC_URL=${SRC_URL:-"https://qbilinux.org/pub/source/"}
SRC_DIR=${SRC_DIR:-"/home/archives/source/"}
##############################################################


source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}


do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    mkdir build
    mv vendor build/src
    ln -s ${S[$1]} build/src/github.com/docker/cli
}

do_build() {
    cd ${B[$1]}
    
    # Build CLI.
    DISABLE_WARN_OUTSIDE_CONTAINER=1 \
				  make dynbinary \
				  GITCOMMIT=$GITHASH \
				  VERSION=${vers} \
				  GOPATH=${B[$1]}/build
}

do_install() {
    cd ${B[$1]}

    # Build CLI.
    if [ $arch = "x86_64" ]; then
	install -D -m 0755 build/docker-linux-amd64 $P/usr/bin/docker
    elif [ $arch = "aarch64" ]; then
	install -D -m 0755 build/docker-linux-arm64 $P/usr/bin/docker
    fi

    # Completion.
    ( cd contrib/completion
      install -D -m 0644 bash/docker $P/usr/share/bash-completion/completions/docker
      install -D -m 0644 zsh/_docker $P/usr/share/zsh/site-functions/_docker
      install -D -m 0644 fish/docker.fish $P/usr/share/fish/vendor_completions.d/docker.fish
    )
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
