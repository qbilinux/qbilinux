#!/bin/sh
##############################################################
pkgbase="libnetwork"
vers=fa125a3512ee0f6187721c88582bf8c4378bd4d7
url="https://github.com/moby/libnetwork/archive/${vers}.tar.gz"
srcfile=libnetwork-${vers}.tar.gz
commitid=
apply_arch="x86_64 aarch64"
arch=`uname -m`
build=1
src=libnetwork-${vers}
OPT_CONFIG=''
DOCS='CHANGELOG.md LICENSE MAINTAINERS README.md'
patchfiles=''
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################


source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}


do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    mkdir build
    mv vendor build/src
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    export LDFLAGS='-Wl,--as-needed'
    GOPATH=`pwd`/build \
	  go build -o `pwd`/pkg/docker-proxy ./cmd/proxy
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    mkdir -p $P/usr/bin/
    cp pkg/docker-proxy $P/usr/bin/

    # add extra func
    # mkdir -p $P2/hoge
    # cp hoge.txt $P2/hoge
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
