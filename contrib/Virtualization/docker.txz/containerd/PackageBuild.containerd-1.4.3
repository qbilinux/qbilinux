#!/bin/sh
##############################################################
pkgbase="containerd"
vers=1.4.3
url="https://github.com/containerd/containerd/archive/v${vers}.tar.gz"
srcfile=containerd-${vers}.tar.gz
commitid=
GITHASH=${GITHASH:-7ad184331fa3e55e52b890ea95e65ba581ae3429}
apply_arch="x86_64 aarch64"
arch=`uname -m`
build=1
src=containerd-${vers}
OPT_CONFIG=''
DOCS='LICENSE README.md RELEASES.md install.go install_opts.go releases'
patchfiles=''
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################


source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}


do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    sed -i \
	-e "s/git describe --match.*$/echo ${VERSION})/" \
	-e "s/git rev-parse HEAD.*$/echo ${GITHASH})/" \
	-e 's/-s -w //' \
	Makefile
}

do_build() {
    cd ${B[$1]}
    export LDFLAGS='-Wl,--as-needed'
    mkdir build
    mv vendor build/src
    ln -sf ${B[$1]} build/src/github.com/containerd/containerd
    make \
	BUILDTAGS="seccomp" \
	GIT_COMMIT=$GITHASH \
	GOPATH=${B[$1]}/build
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    export LDFLAGS='-Wl,--as-needed'

    install -D -m 0755 bin/containerd $P/usr/bin/containerd
    install -D -m 0755 bin/containerd-shim $P/usr/bin/containerd-shim
    install -D -m 0755 bin/containerd-shim-runc-v1 $P/usr/bin/containerd-shim-runc-v1
    install -D -m 0755 bin/containerd-stress $P/usr/bin/containerd-stress
    install -D -m 0755 bin/ctr $P/usr/bin/ctr
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
