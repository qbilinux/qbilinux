#!/bin/sh 
##############################################################
pkgbase=lxc
vers=4.0.3
url="https://linuxcontainers.org/downloads/lxc/lxc-${vers}.tar.gz"
verify=
commitid=
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=lxc-${vers}
OPT_CONFIG='--with-runtime-path=/var/run --disable-api-docs'
DOCS='AUTHORS COPYING ChangeLog INSTALL MAINTAINERS NEWS README'
patchfiles=""
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

  # install the script for mouting cgroupfs
  #install -m 644 $W/cgroups-mount $P/etc/rc.d/init.d
  #( cd $P/etc/rc.d/init.d ; mv lxc zzz_lxc )
  #( cd $P/etc/rc.d/init.d ; mv lxc-net zz_lxc-net )

  # sysconfig
  echo '#USE_LXC_BRIDGE="true"' > $P/etc/sysconfig/lxc-net

  # convert manual to EUC-JP
  #sed -i "s@\(/usr/share/doc/\)lxc@\1$src@g" \
  #    $mandir/{,ja/}man5/lxc.container.conf.5 $mandir/{,ja/}man7/lxc.7
  #re="\w\{3\} \w\{3\} \w\{1,2\} \w\{2\}:\w\{2\}:\w\{2\} \w\{3\} \w\{4\}"
  #dt=`echo $(LANG=C date '+%a %b %e 09:00:00 %Z %G')`
  #find $mandir -type f -exec sed -i "/^\.TH/s@$re@$dt@g" {} \;
  #install -d $mandir/ja_JP.eucJP/man{1,5,7}
  #for i in `cd $mandir/ja ; find . -type f` ; do
  #  nkf -We $mandir/ja/$i > $mandir/ja_JP.eucJP/$i
  #done
  #find $mandir/ja_JP.eucJP -type f -exec sed -i "s@UTF-8@EUC-JP@g" {} \;

  # install API docs
  install -d $docdir/$src
  cp -a doc/api $docdir/$src/api

  # README.plamo
  install -m 644 $W/README.plamo $docdir/$src

  # 
  mv $docdir/lxc/examples $docdir/$src
  rmdir $docdir/lxc

  mkdir -p $P/install
  cat <<EOF >> $P/install/initpkg
if [ ! -d /var/lib/misc ]; then
  mkdir -p /var/lib/misc
fi
EOF
  mkdir -p $docdir/$src
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
