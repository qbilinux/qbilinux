#!/bin/sh

######################################################################
url="http://libvirt.org/sources/libvirt-1.2.2.tar.gz
    http://libvirt.org/sources/python/libvirt-python-1.2.2.tar.gz"
pkgbase=libvirt
vers=1.2.2
arch=`uname -m | sed 's/i.86/i586/'`
build=P2
src[0]=$pkgbase-$vers
src[1]=libvirt-python-1.2.2
OPT_CONFIG[0]="--with-capng --without-hal --with-udev
    --with-html-subdir=libvirt/html --with-lxc --with-init-script=redhat
    --with-qemu-user=libvirt-qemu --with-qemu-group=kvm --with-macvtap"
OPT_CONFIG[1]=""
DOCS[0]="INSTALL COPYING.LESSER AUTHORS ChangeLog COPYING ABOUT-NLS
    ChangeLog-old NEWS README TODO"
DOCS[1]="COPYING.LESSER AUTHORS ChangeLog COPYING NEWS README"
######################################################################

fscheck() {
  PANGRAM="The quick brown fox jumps over the lazy dog."
  echo -n "Checking for the filesystem ... "
  mkdir pangram ; ( cd pangram ; touch $PANGRAM )
  mv pangram pangram~ ; mkdir pangram ; touch -r pangram~ pangram
  tar cpf pangram.tar pangram ; rmdir pangram ; mv pangram~ pangram
  for i in $PANGRAM ; do tar rpf pangram.tar pangram/$i ; done
  touch -t `date '+%m%d0900'` pangram.tar ; gzip pangram.tar
  touch pangram.tar.gz ; mv pangram.tar.gz pangram1.tgz
  tar cpf pangram.tar pangram
  touch -t `date '+%m%d0900'` pangram.tar ; gzip pangram.tar
  touch pangram.tar.gz ; mv pangram.tar.gz pangram2.tgz
  if cmp -s pangram1.tgz pangram2.tgz ; then
    echo "OK"
    rm -rf pangram pangram1.tgz pangram2.tgz
  else
    echo "NG"
    cat <<- "EOF"
	Hmm, packaging may not be done properly on this filesystem.
	Would you please try again on a default filesystem, thanks!
	
	Happy packaging!!
	
	Quitting...
	EOF
    exit
  fi
}

install2() {
  install -d ${2%/*} ; install -m 644 $1 $2
}

strip_bindir() {
  echo "compressing in $1"
  if [ -d $1 ] ; then (
    shopt -s nullglob
    cd $1
    for i in * ; do
      echo "$i"
      if [ -h $i ] ; then continue ; fi
      if [ -n "`file $i | grep "not stripped"`" ] ; then
         echo "stripping -p $i"
         strip -p $i
      fi
    done
  ) fi
}

strip_libdir() {
  echo "compressing in $1"
  if [ -d $1 ] ; then (
    shopt -s nullglob
    cd $1
    for i in *.so *.so.* *.a ; do
      echo "$i"
      if [ -h $i ] ; then continue ; fi
      if [ -n "`nm -a $i | grep " a "`" ] ; then
        if [ $i != ${i%.a} ] ; then
          echo -n "ranlib and "
          touch -r $i $i.mt ; ranlib $i ; touch -r $i.mt $i ; rm $i.mt
        fi
        echo "stripping -gp $i"
        strip -gp $i
      fi
    done
  ) fi
}

gzip_dir() {
  echo "compressing in $1"
  if [ -d $1 ] ; then (
    cd $1
    files=`ls -f --indicator-style=none | sed '/^\.\{1,2\}$/d'`
    for i in $files ; do
      echo "$i"
      if [ ! -f $i -a ! -h $i -o $i != ${i%.gz} ] ; then continue ; fi
      lnks=`ls -l $i | awk '{print $2}'`
      if [ $lnks -gt 1 ] ; then
        inum=`ls -i $i | awk '{print $1}'`
        for j in `find . -maxdepth 1 -inum $inum` ; do
          if [ ${j#./} == $i ] ; then
            gzip -f $i
          else
            rm -f ${j#./} ; ln $i.gz ${j#./}.gz
          fi
        done
      elif [ -h $i ] ; then
        target=`readlink $i` ; rm -f $i ; ln -s $target.gz $i.gz
      else
        gzip $i
      fi
    done
    for i in $files ; do mv ${i%.gz}.gz $C ; done
    for i in $files ; do mv $C/${i%.gz}.gz . ; done
  ) fi
}

gzip_one() {
  gzip $1 ; mv $1.gz $C ; mv $C/${1##*/}.gz ${1%/*}
}

compress() {
  for i in {$P,$P/usr}/{sbin,bin} ; do strip_bindir $i ; done
  for i in {$P,$P/usr}/$libdir ; do strip_libdir $i ; done
  if [ -f $infodir/dir ] ; then rm -f $infodir/dir ; fi
  gzip_dir $infodir
  for i in `seq 9` n ; do gzip_dir $mandir/man$i ; done
}

prune_symlink() {
  echo "pruning symlink in $1"
  if [ -d $1 ] ; then (
    cd $P
    rm -f /tmp/iNsT-a.$$ ; touch /tmp/iNsT-a.$$
    for i in `find ${1#$P/} -type l` ; do
      target=`readlink $i`
      echo "$i -> $target"
      echo $i$'\n'$target >> /tmp/iNsT-a.$$
    done
    COUNT=1
    LINE=`sed -n "${COUNT}p" /tmp/iNsT-a.$$`
    while [ -n "$LINE" ] ; do
      LINKGOESIN=`dirname $LINE`
      LINKNAMEIS=`basename $LINE`
      COUNT=$(($COUNT + 1))
      LINKPOINTSTO=`sed -n "${COUNT}p" /tmp/iNsT-a.$$`
      if [ ! -d install ] ; then mkdir install ; fi
      cat <<- EOF >> install/doinst.sh
	( cd $LINKGOESIN ; rm -rf $LINKNAMEIS )
	( cd $LINKGOESIN ; ln -sf $LINKPOINTSTO $LINKNAMEIS )
	EOF
      rm -rf $LINE ; touch -t `date '+%m%d0900'` install/doinst.sh $LINE
      COUNT=$(($COUNT + 1))
      LINE=`sed -n "${COUNT}p" /tmp/iNsT-a.$$`
    done
    rm -f /tmp/iNsT-a.$$
  ) fi
}

convert() {
  for i in {$P,$P/usr}/{sbin,bin} ; do prune_symlink $i ; done
  for i in {$P,$P/usr}/$libdir ; do prune_symlink $i ; done
  prune_symlink $infodir
  for i in `seq 9` n ; do prune_symlink $mandir/man$i ; done
}

fscheck
W=`pwd`
for i in `seq 0 $((${#src[@]} - 1))` ; do
  S[$i]=$W/${src[$i]} ; B[$i]=$W/build`test ${#src[@]} -eq 1 || echo $i`
done
P=$W/work ; C=$W/pivot
infodir=$P/usr/share/info
mandir=$P/usr/share/man
docdir=$P/usr/share/doc
myname=`basename $0`
pkg=$pkgbase-$vers-$arch-$build
case $arch in i586) libdir=lib ;; x86_64) libdir=lib64 ;; esac
if [ $# -eq 0 ] ; then
  opt_download=1 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  for i in $url ; do
    if [ ! -f ${i##*/} ] ; then wget $i ; fi
  done
  for i in $url ; do
    case ${i##*.} in
    tar) tar xvpf ${i##*/} ;;
    gz) tar xvpzf ${i##*/} ;;
    bz2) tar xvpjf ${i##*/} ;;
    esac
  done
fi
if [ $opt_config -eq 1 ] ; then
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    if [ -d ${B[$i]} ] ; then rm -rf ${B[$i]} ; fi ; cp -a ${S[$i]} ${B[$i]}
  done
  cd ${B[0]}
  cp -p daemon/libvirtd.conf{,.orig}
  cat <<- "EOF" | patch daemon/libvirtd.conf
	81c81
	< #unix_sock_group = "libvirt"
	---
	> unix_sock_group = "libvirt"
	98c98
	< #unix_sock_rw_perms = "0770"
	---
	> unix_sock_rw_perms = "0770"
	129c129
	< #auth_unix_ro = "none"
	---
	> auth_unix_ro = "none"
	138c138
	< #auth_unix_rw = "none"
	---
	> auth_unix_rw = "none"
	EOF
  cp -p daemon/libvirtd.init.in{,.orig}
  cat <<- "EOF" | patch daemon/libvirtd.init.in
	37c37
	< . @sysconfdir@/rc.d/init.d/functions
	---
	> #. @sysconfdir@/rc.d/init.d/functions
	71c71
	<     KRB5_KTNAME=$KRB5_KTNAME daemon --pidfile $PIDFILE --check $SERVICE $PROCESS --daemon $LIBVIRTD_CONFIG_ARGS $LIBVIRTD_ARGS
	---
	>     LANG=C KRB5_KTNAME=$KRB5_KTNAME $SERVICE --daemon $LIBVIRTD_CONFIG_ARGS $LIBVIRTD_ARGS
	80c80
	<     killproc -p $PIDFILE $PROCESS
	---
	>     kill `cat $PIDFILE`
	85a86
	>         rm -f $PIDFILE
	99c100
	<     killproc -p $PIDFILE $PROCESS -HUP
	---
	>     kill -HUP `cat $PIDFILE`
	111c112
	<         status -p $PIDFILE $PROCESS
	---
	>         pgrep $SERVICE
	EOF
  cp -p src/locking/virtlockd.init.in{,.orig}
  cat <<- "EOF" | patch src/locking/virtlockd.init.in
	28c28
	< . @sysconfdir@/rc.d/init.d/functions
	---
	> #. @sysconfdir@/rc.d/init.d/functions
	32c32
	< PIDFILE=@localstatedir@/run/$SERVICE.pid
	---
	> PIDFILE=@localstatedir@/run/$PROCESS.pid
	42c42
	<     daemon --pidfile $PIDFILE --check $SERVICE $PROCESS --daemon $VIRTLOCKD_ARGS
	---
	>     $SERVICE --pid-file $PIDFILE --daemon $VIRTLOCKED_ARGS
	51c51
	<     killproc -p $PIDFILE $PROCESS
	---
	>     kill `cat $PIDFILE`
	68c68
	<     killproc -p $PIDFILE $PROCESS -USR1
	---
	>     kill -USR1 `cat $PIDFILE`
	EOF
  cp -p src/qemu/qemu.conf{,.orig}
  sed 's@#group = "root"@group = "kvm"@g' src/qemu/qemu.conf.orig \
      > src/qemu/qemu.conf
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    cd ${B[$i]}
    if [ -f Makefile ] ; then
      make clean
    fi
    if [ -f config.log ] ; then
      rm -rf config.cache config.log
    fi
    if [ -x configure ] ; then
      ./configure --prefix=/usr --libdir='${exec_prefix}'/$libdir \
          --infodir='${prefix}'/share/info \
          --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]}
    fi
  done
fi
if [ $opt_build -eq 1 ] ; then
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    cd ${B[$i]}
    if [ -f Makefile ] ; then
      make
    fi
  done
  cd ${B[1]}
  python setup.py build
fi
if [ $opt_package -eq 1 ] ; then
  if [ `id -u` -ne 0 ] ; then
    read -p "Do you want to package as root? [y/N] " ans
    if [ "x$ans" == "xY" -o "x$ans" == "xy" ] ; then
      cd $W ; /bin/su -c "$0 package" ; exit
    fi
  fi
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  if [ -d $C ] ; then rm -rf $C ; fi ; mkdir -p $C
  touch $W/i.st ; sleep 1
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    cd ${B[$i]}
    if [ -f Makefile ] ; then
      make install DESTDIR=$P
    fi
  done
  cd ${B[1]}
  python setup.py install --root=$P
  touch $W/i.et
  cd $W
  find $P ! -type l -newer i.st ! -newer i.et \
      -exec touch -t `date '+%m%d0900'` {} \;
  compress
  strip_bindir $P/usr/libexec
  strip_libdir $P/usr/$libdir/libvirt/lock-driver
  strip_libdir $P/usr/$libdir/libvirt/connection-driver
  strip_libdir $P/usr/$libdir/python*/site-packages
  touch -t `date '+%m%d0900'` $P/usr/$libdir/libvirt/{lock,connection}-driver
  for i in `seq 0 $((${#DOCS[@]} - 1))` ; do
    for j in ${DOCS[$i]} ; do
      for k in ${S[$i]}/$j ; do
        install2 $k $docdir/${src[$i]}/${k#${S[$i]}/}
        touch -r $k $docdir/${src[$i]}/${k#${S[$i]}/}
        gzip_one $docdir/${src[$i]}/${k#${S[$i]}/}
      done
    done
    if [ $i -eq 0 ] ; then
      install $myname $docdir/$src
      touch -t `date '+%m%d0900'` $docdir/$src/$myname
      gzip_one $docdir/$src/$myname
    else
      ln $docdir/$src/$myname.gz $docdir/${src[$i]}
    fi
    ( cd $docdir ; find ${src[$i]} -type d -exec touch -r $W/{} {} \; )
  done
  mv $docdir/$pkgbase/html $docdir/$src
  mv $docdir/$src/{html,{COPYING,ABOUT-NLS,ChangeLog-old}.gz} $C
  mv $docdir/$src/{NEWS,README,TODO,$myname}.gz $C
  mv $C/{html,{COPYING,ABOUT-NLS,ChangeLog-old}.gz} $docdir/$src
  mv $C/{NEWS,README,TODO,$myname}.gz $docdir/$src
  touch -r $S $docdir/$src
  convert
  prune_symlink $P/etc/libvirt/qemu/networks/autostart
  touch -t `date '+%m%d0900'` $P/etc/libvirt/qemu/networks/autostart
  tar cvpf $pkg.tar -C $P `cd $P ; find usr/bin | tail -n+2`
  tar rvpf $pkg.tar -C $P `cd $P ; find usr/sbin | tail -n+2`
  tar rvpf $pkg.tar -C $P `cd $P ; find usr/libexec | tail -n+2`
  tar rvpf $pkg.tar -C $P usr/$libdir/pkgconfig/libvirt.pc
  tar rvpf $pkg.tar -C $P `cd $P ; find usr/$libdir -maxdepth 1 -name libvirt*`
  tar rvpf $pkg.tar -C $P `cd $P ; find usr/$libdir/python*/site-packages | tail -n+2`
  tar rvpf $pkg.tar -C $P usr/include/libvirt
  tar rvpf $pkg.tar -C $P usr/share/augeas
  tar rvpf $pkg.tar -C $P usr/share/libvirt
  tar rvpf $pkg.tar -C $P `cd $P ; find usr/share/polkit-1/actions | tail -n+2`
  tar rvpf $pkg.tar -C $P usr/share/gtk-doc/html/libvirt
  tar rvpf $pkg.tar -C $P `cd $P ; find usr/share/locale -name libvirt.mo`
  tar rvpf $pkg.tar -C $P `cd $P ; find usr/lib/sysctl.d | tail -n+2`
  tar rvpf $pkg.tar -C $P etc/libvirt
  tar rvpf $pkg.tar -C $P `cd $P ; find etc/sysconfig | tail -n+2`
  tar rvpf $pkg.tar -C $P `cd $P ; find etc/rc.d/init.d | tail -n+2`
  tar rvpf $pkg.tar -C $P `cd $P ; find etc/sasl2 | tail -n+2`
  tar rvpf $pkg.tar -C $P `cd $P ; find etc/logrotate.d | tail -n+2`
  tar rvpf $pkg.tar -C $P var/lib/libvirt
  tar rvpf $pkg.tar -C $P var/run/libvirt
  tar rvpf $pkg.tar -C $P var/cache/libvirt
  tar rvpf $pkg.tar -C $P var/log/libvirt
  tar rvpf $pkg.tar -C $P `cd $P ; find usr/share/man/man1 | tail -n+2`
  tar rvpf $pkg.tar -C $P `cd $P ; find usr/share/man/man8 | tail -n+2`
  tar rvpf $pkg.tar -C $P usr/share/doc/$src
  tar rvpf $pkg.tar -C $P install/doinst.sh
  touch -t `date '+%m%d0900'` $pkg.tar ; xz $pkg.tar ; touch $pkg.tar.xz
  mv $pkg.tar.xz $pkg.txz
  read -p "Do you want to keep work files? [y/N] " ans
  if [ "x$ans" != "xY" -a "x$ans" != "xy" ] ; then rm -rf $P $C i.[se]t ; fi
fi
