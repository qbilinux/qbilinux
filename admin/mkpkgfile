#!/bin/bash
export LANG=en_US.UTF-8
arch=`uname -m`

seek_dir () {
    DIR=${1%/*}
    SCN=${1##*/}
    CAT=${DIR%/*}
    BASE=${DIR##*/}
    #echo $DIR
    #echo $SCN
    #echo $CAT
    #echo $BASE

    echo "pushd $DIR"
    pushd $DIR

    # check log file
    if [ $opt_check -eq 1 ] ; then
	echo "###### $DIR"
	if [ -f 00.make.log ] ; then
	    grep Error 00.make.log 
	else
	    echo "not make.log file"
	fi

	if [ -f 00.package.log ] ; then
	    grep Error 00.package.log 
	else
	    echo "not package.log file"
	fi
	
    # check Packagebuild script and make log.
    else
    
	if [ $opt_force -eq 0 ] ; then
	    pkgname=`./$SCN pkgname`
	    for i in $pkgname ; do
		if [ -f $i ] ; then
		    echo "*** skip: Exists package file already. If you want to build, use -f option."
		    popd
		    exit 1
		fi
	    done
	fi

	# backup log file
	if [ -f 01.make.log ] ; then
	    mv 01.make.log 02.make.log
	fi
	if [ -f 01.package.log ] ; then
	    mv 01.package.log 02.package.log
	fi
	if [ -f 00.make.log ] ; then
	    mv 00.make.log 01.make.log
	fi
	if [ -f 00.package.log ] ; then
	    mv 00.package.log 01.package.log
	fi

	# move old package
	if [ $opt_move -eq 1 ] ; then
	    if [ -f old ] ; then
		rm -f old
	    fi
	    if [ ! -d old ] ; then
		mkdir old
	    fi

	    pkg=`ls -1 *.desc`
	    for i in $pkg ; do
		pkgname=${i%.desc}
		if [ -f ${pkgname}-*-${arch}-*.txz ] ; then
		    mv -f ${pkgname}-*-${arch}-*.txz old
		fi
		if [ -f ${pkgname}-*-noarch-*.txz ] ; then
		    mv -f ${pkgname}-*-noarch-*.txz old
		fi
	    done
	fi
	    
	# only package
	if [ $opt_package -eq 1 ] ; then
	    touch 00.make.log
	    sudo sh ./$SCN package |& tee 00.package.log

	else
	    # delete work and build directory
	    if [ $opt_notrm -eq 0 ] ; then
		sudo rm -rf build/$arch work/$arch
	    fi
	    
	    # execute
	    if [ $opt_download -eq 1 ] ; then
		rm -rf source
		sh ./$SCN download prepare config build |& tee 00.make.log
	    else
		sh ./$SCN prepare config build |& tee 00.make.log
	    fi
	    sudo sh ./$SCN package |& tee 00.package.log
	fi

	# make diff file.
	if [ -f 01.make.log ] ; then
	    diff -c 00.make.log 01.make.log > 00.make.log.01.diff
	fi
	if [ -f 02.make.log ] ; then
	    diff -c 00.make.log 02.make.log > 00.make.log.02.diff
	fi
	if [ -f 01.package.log ] ; then
	    diff -c 00.package.log 01.package.log > 00.package.log.01.diff
	fi
	if [ -f 02.package.log ] ; then
	    diff -c 00.package.log 02.package.log > 00.package.log.02.diff
	fi

	# install package
	if [ $opt_install -eq 1 ] || [ $opt_update -eq 1 ] ; then
	    pkg=`ls -1 *.desc`
	    for i in $pkg ; do
		pkgname=${i%.desc}
		if [ $opt_install -eq 1 ] ; then
		    # move package file
		    if [ -f /var/log/packages/${pkgname} ] ; then
			ext=`date +%Y%m%d%H%M%S`
			sudo mv /var/log/packages/${pkgname} /var/log/packages/${pkgname}_${ext}
		    fi
		    # install
		    sudo installpkg ${pkgname}-*-*-*.txz
		elif [ $opt_update -eq 1 ] ; then
		    # update
		    sudo updatepkg -f ${pkgname}-*-*-*.txz
		fi
	    done
	fi
    fi

    popd
}

usage_exit() {
    echo "usage: $0 [-f] [-c] [-i] [-u] [-d] [-m] [-n] [-p] buildscript"
    echo "\t-d : download."
    echo "\t-f : force build."
    echo "\t-c : error check."
    echo "\t-i : install."
    echo "\t-u : update."
    echo "\t-p : package only."
    echo "\t-m : move old pkg file to old directory."
    echo "\t-n : not delete work/build dir before build."
    exit 1
}

opt_download=0
opt_force=0
opt_check=0
opt_install=0
opt_update=0
opt_notrm=0
opt_move=0
opt_package=0
while getopts fcidunmhp OPT
do
    case $OPT in
	"d" ) opt_download=1 ;;
	"f" ) opt_force=1 ;;
	"c" ) opt_check=1 ;;
	"i" ) opt_install=1 ;;
	"u" ) opt_update=1 ;;
	"n" ) opt_notrm=1 ;;
	"m" ) opt_move=1 ;;
	"p" ) opt_package=1 ;;
	"h" ) usage_exit ;;
    esac
done

# cur option
shift `expr $OPTIND - 1`

seek_dir $1 ;
