#!/bin/sh -x

######################################################################
vers=6.2
url="ftp://plamo.linet.gr.jp/pub/Plamo-src/plamo/99_test/installer/installer-plamoinitrd.targz
    ftp://plamo.linet.gr.jp/pub/Plamo-src/plamo/99_test/installer/plamo_isolinux.tar.gz
    ftp://plamo.linet.gr.jp/pub/Plamo-src/plamo/99_test/installer/rpi_firmware.tar.gz"
pkglist="busybox-1.25.1
	dialog-1.3-20171209
	coreutils-8.28
	gzip-1.8
	bzip2-1.0.6
	xz-5.2.3
	tar-1.26
	unicon-tools-0.0.0.20050707
	kbd-2.0.4
	udev-175
	ncurses-6.1
	util-linux-2.28
	e2fsprogs-1.43.6
	btrfs-progs-v4.14
	dosfstools-3.0.26
	ntfs-3g_ntfsprogs-2016.2.22
	mdadm-3.2.3
	LVM2.2.02.90"
verify=
digest=
branch=
commitid=
pkgbase=installer
arch=`uname -m`
build=P1
src=""
patchfiles=""
OPT_CONFIG=""
DOCS=""
template=20170713
tmplurl=ftp://plamo.linet.gr.jp/pub/Plamo-src/admin
######################################################################

if [ -f functions ] ; then
  source ./functions
elif [ ! -f /usr/share/plamo/functions ] ; then
  wget ftp://plamo.linet.gr.jp/pub/Plamo-src/admin/functions
  source ./functions
else
  source /usr/share/plamo/functions
fi

#fscheck
prepare "$@"
infodir=$P/share/info
mandir=$P/share/man
docdir=.
if [ $opt_download -eq 1 ] ; then
    download_sources
fi
if [ $opt_package -eq 1 ] ; then
  root_priv
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  if [ -d $C ] ; then rm -rf $C ; fi ; mkdir -p $C
  for i in $pkglist ; do
      sh PakcageBuild.${i} download config build
      sudo sh PakcageBuild.${i} package
  done
  touch $W/i.st ; sleep 1
  rm $P/linuxrc
  ln -s bin/busybox $P/init
  touch $P/$libdir/*.a
  touch $P/$libdir/pkgconfig/*.pc
  touch $P/etc/lvm/lvm.conf
  touch $mandir/man[58]/*
  touch $W/i.et
  cd $W
  find $P -newer i.st ! -newer i.et -exec touch -ht `date '+%m%d0900'` {} \;
  compress
  find $mandir -type l -exec touch -ht `date '+%m%d0900'` {} \;
  strip_bindir $P/libexec
  strip_bindir $P/lib/udev
  strip_libdir $P/$libdir/device-mapper
  gzip_dir $mandir/de/man8
  touch -t `date '+%m%d0900'` $P/{bin,sbin,libexec,lib/udev} \
      $P/$libdir/device-mapper $infodir $mandir/{man[134578],de/man8}
  tar xvpzf installer-plamoinitrd.targz -C $P
  case $arch in i686) a=x86 ;; armv7l) a=armv7_hf ;; *) a=$arch ;; esac
  if [ -f ../plamo/00_base/kernel/kernel-*.txz ] ; then
    cp -p ../plamo/00_base/kernel/kernel-*.txz .
  else
    wget https://circle2.org/pub/Plamo-nora-current/$a/plamo/00_base/kernel-*.txz
  fi
  if [ $arch == i686 -o $arch == x86_64 ] ; then
    media=DVD
    K=$media/isolinux
  else
    media=SD
    K=$media
  fi
  mkdir -p $K
  if [ $media == DVD ] ; then
    cp -p /usr/share/syslinux/isolinux.bin $K
    cp -p /usr/share/syslinux/{ldlinux,menu,vesamenu,lib{util,com32}}.c32 $K
    cp -p plamo_isolinux/{isolinux.cfg,sample.msg,plamo61.lss} $K
    chown root.root $K/{isolinux.cfg,sample.msg,plamo61.lss}
    mkdir -p $media/EFI/BOOT
    if [ $arch == i686 ] ; then
      grub-mkimage -p '' -o $media/EFI/BOOT/BOOTIA32.EFI -O i386-efi fat \
          part_msdos iso9660 gzio all_video gfxterm font terminal normal \
          linux echo test search configfile cpuid minicmd
      wget -P $media/EFI/BOOT \
          ftp://plamo.linet.gr.jp/pub/Plamo-src/plamo/99_test/installer/BOOTX64.EFI
    else
      wget -P $media/EFI/BOOT \
          ftp://plamo.linet.gr.jp/pub/Plamo-src/plamo/99_test/installer/BOOTIA32.EFI
      grub-mkimage -p '' -o $media/EFI/BOOT/BOOTX64.EFI -O x86_64-efi fat \
          part_msdos iso9660 gzio all_video gfxterm font terminal normal \
          linux echo test search configfile cpuid minicmd
    fi
    cat <<- "EOF" > $media/EFI/BOOT/GRUB.CFG
	menuentry "UEFI Plamo Linux install from DVD" {
	  linux (cd0)/isolinux/vmlinuz root=/dev/ram0 rw nomodeset vga16 unicon=eucjp vt.default_utf8=0 kbd=usbkbd
	  initrd (cd0)/isolinux/initrd.gz
	}
	menuentry "UEFI Plamo Linux install from USB DVD" {
	  linux (hd0)/isolinux/vmlinuz root=/dev/ram0 rw nomodeset vga16 unicon=eucjp vt.default_utf8=0 kbd=usbkbd
	  initrd (hd0)/isolinux/initrd.gz
	}
	menuentry "UEFI Plamo Linux install from USB memory" {
	  linux (hd0,msdos1)/isolinux/vmlinuz root=/dev/ram0 rw nomodeset vga16 unicon=eucjp vt.default_utf8=0 kbd=usbkbd
	  initrd (hd0,msdos1)/isolinux/initrd.gz
	}
	menuentry "UEFI Plamo Linux install on VirtualBox" {
	  linux (hd1)/isolinux/vmlinuz root=/dev/ram0 rw nomodeset vga16 unicon=eucjp vt.default_utf8=0 kbd=usbkbd
	  initrd (hd1)/isolinux/initrd.gz
	}
	EOF
    find $media/EFI -exec touch -t `date '+%m%d0900'` {} \;
    mkdir efiboot
    fallocate -l 1440K $K/efiboot.img
    /sbin/mkfs -t vfat $K/efiboot.img
    mount -o loop $K/efiboot.img efiboot
    mkdir -p efiboot/EFI/BOOT
    cp -p $media/EFI/BOOT/BOOT{IA32,X64}.EFI efiboot/EFI/BOOT
    cat <<- "EOF" > efiboot/EFI/BOOT/GRUB.CFG
	menuentry "Plamo Linux install from DVD" {
	  linux (cd0)/isolinux/vmlinuz root=/dev/ram0 rw unicon=eucjp vt.default_utf8=0
	  initrd (cd0)/isolinux/initrd.gz
	}
	EOF
    find efiboot/EFI -exec touch -t `date '+%m%d0900'` {} \;
    umount efiboot
    touch -t `date '+%m%d0900'` $K/efiboot.img
  else
    img=plamo-${vers}_${a}_`date '+%y%m%d'`_sd.img
    size=896 ; fallocate -l ${size}M $img
    cat <<- EOF | sfdisk $img
	8192,$(((size - 4) * 2048)),c,*
	EOF
    loop=`losetup -f`
    losetup -P $loop $img
    /sbin/mkfs -t vfat ${loop}p1
    mount ${loop}p1 $media
    cp -R --preserve=timestamps rpi_firmware/. $K
  fi
  ln -sfn $W/$K $P/boot
  tar xvpJf kernel-*.txz -C $P
  ln -sfn /mnt/boot $P/boot
  touch -hr $P/{cdrom,boot}
  touch -t `date '+%m%d0900'` $P/lib{,/modules}
  rm -rf $P/{usr,install}
  if [ $media == DVD ] ; then
    ln -f $K/config{-*,}
    ln -f $K/vmlinuz{-*,}
    ln -f $K/System.map{-*,}
  fi
  ( cd $P ; find . | tail -n+2 | cpio -o -H newc | gzip -n ) > $K/initrd.gz
  touch -t `date '+%m%d0900'` $K{,/initrd.gz}
  for i in plamo contrib Change.Log{,-2011} \
      README.{1ST,EUC,SJIS,GPT} README_GPT.pdf allpkgs.pickle ; do
    if [ $media == DVD ] ; then
      ln -s /mnt/work/Plamo-6.x/$a/$i $media
    else
      cp -R --preserve=timestamps /mnt/work/Plamo-6.x/$a/$i $media
    fi
  done
  src=$media ; setup_docdir
  touch -t `date '+%m%d0900'` $media
  false && convert_links
  if [ $media == DVD ] ; then
      xorrisofs -o plamo-nora-${vers}_${a}_`date '+%y%m%d'`_dvd.iso \
		-isohybrid-mbr /usr/share/syslinux/isohdpfx.bin \
		-c isolinux/boot.cat \
		-b isolinux/isolinux.bin \
		-no-emul-boot \
		-boot-load-size 4 \
		-boot-info-table \
		-eltorito-alt-boot \
		-e isolinux/efiboot.img \
		-no-emul-boot \
		-isohybrid-gpt-basdat \
		-append_partition 2 0xef $media/isolinux/efiboot.img \
		$media
    # mkisofs -v -f -J -r -b isolinux/isolinux.bin -c isolinux/boot.cat \
    #     -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot \
    #     -eltorito-platform efi -eltorito-boot isolinux/efiboot.img \
    #     -m old -m texlive_texmf[34]-*.txz \
    #     -V plamo-$vers-$a -o plamo-${vers}_${a}_`date '+%y%m%d'`_dvd.iso $media
  else
    umount $media
    losetup -d $loop
  fi
  cleanup
fi
