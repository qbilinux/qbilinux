#!/bin/sh -x

######################################################################
vers=2016.2.22
url="https://tuxera.com/opensource/ntfs-3g_ntfsprogs-${vers}.tgz
    https://github.com/PhantomX/slackbuilds/raw/master/ntfs-3g/patches/ntfs-3g_ntfsprogs-2011.10.9-RC-ntfsck-unsupported-return-0.patch
    ftp://plamo.linet.gr.jp/pub/Plamo-src/plamo/99_test/installer/ntfs-3g_ntfsprogs-2016.2.22-libtool.patch"
verify=
digest=
branch=
commitid=
pkgbase=installer
arch=`uname -m`
build=P1
src=ntfs-3g_ntfsprogs-${vers}
patchfiles="ntfs-3g_ntfsprogs-2011.10.9-RC-ntfsck-unsupported-return-0.patch
    ntfs-3g_ntfsprogs-2016.2.22-libtool.patch"
OPT_CONFIG="--enable-really-static"
DOCS=""
template=20170713
tmplurl=ftp://plamo.linet.gr.jp/pub/Plamo-src/admin
######################################################################

if [ -f functions ] ; then
  source ./functions
elif [ ! -f /usr/share/plamo/functions ] ; then
  wget ftp://plamo.linet.gr.jp/pub/Plamo-src/admin/functions
  source ./functions
else
  source /usr/share/plamo/functions
fi

#fscheck
prepare "$@"
infodir=$P/share/info
mandir=$P/share/man
docdir=.
if [ $opt_download -eq 1 ] ; then
  download_sources
fi
if [ $opt_config -eq 1 ] ; then
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    if [ -d ${B[$i]} ] ; then rm -rf ${B[$i]} ; fi ; cp -a ${S[$i]} ${B[$i]}
  done
  apply_patches
  cd ${B[$i]}
  cp -p ntfsprogs/Makefile.in{,.orig}
  sed -i '/LN_S/s@$(sbindir)/@@g' ntfsprogs/Makefile.in
  cp -p src/Makefile.in{,.orig}
  sed -i '/LN_S/s@$(rootbindir)@../bin@g' src/Makefile.in
  for i in `seq 0 $((${#B[@]} - 1))` ; do
  echo "***** config ******"
  echo $i
    cd ${B[$i]}
    if [ -x configure ] ; then
      ./configure --prefix= --sysconfdir=/etc --localstatedir=/var \
          --libdir='${exec_prefix}'/$libdir --infodir='${prefix}'/share/info \
          --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]} \
          `[ $i -eq 9 ] && echo --with-rootdir=/$libdir` \
          `[ $i -eq 17 ] && echo --with-usrlibdir=/$libdir`
    fi
  done
fi
if [ $opt_build -eq 1 ] ; then
  for i in `seq 0 $((${#B[@]} - 1))` ; do
  echo "***** build ******"
  echo $i
    cd ${B[$i]}
    if [ -f [Mm]akefile ] ; then
      make
    fi
  done
fi
if [ $opt_package -eq 1 ] ; then
  root_priv
  if [ -d $C ] ; then rm -rf $C ; fi ; mkdir -p $C
  touch $W/i.st ; sleep 1
  for i in `seq 0 $((${#B[@]} - 1))` ; do
  echo "***** package ******"
  echo $i
    cd ${B[$i]}
    if [ -f [Mm]akefile ] ; then
      make install DESTDIR=$P
    fi
  done
fi
