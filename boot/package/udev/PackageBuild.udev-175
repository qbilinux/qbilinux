#!/bin/sh

######################################################################
pkgbase=udev
vers=175
url="http://ftp.kernel.org/pub/linux/utils/kernel/hotplug/udev-${vers}.tar.bz2"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=2
src=$pkgbase-$vers
OPT_CONFIG="--libexecdir=/lib/udev --sysconfdir=/etc
    --disable-introspection --enable-rule_generator --disable-keymap"
DOCS="README INSTALL ChangeLog NEWS
    TODO COPYING"
patchfiles='fix_uint_error.patch glibc.patch'
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
    cp -f /usr/src/qbilinux/{config.guess,config.sub} build-aux
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir='${exec_prefix}'/$libdir \
		--infodir='${prefix}'/share/info \
		--mandir='${prefix}'/share/man ${OPT_CONFIG[$i]} \
		--with-rootlibdir=/$libdir
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    install -d $P/sbin
    mv $P/lib/udev/udevd $P/sbin
    ln -s /sbin/udevd $P/lib/udev
    mv $P/usr/sbin/udevadm $P/sbin
    ln -s /sbin/udevadm $P/usr/sbin
    mv $P/usr/$libdir/{lib{udev,gudev-1.0}.{so,la},pkgconfig} $C
    mv $C/{lib{udev,gudev-1.0}.{so,la},pkgconfig} $P/usr/$libdir
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
