#!/bin/sh -x

######################################################################
vers=2.28
url="http://www.kernel.org/pub/linux/utils/util-linux/v${vers}/util-linux-${vers}.tar.xz"
verify=
digest=
branch=
commitid=
pkgbase=installer
arch=`uname -m`
build=P1
src=util-linux-${vers}
patchfiles=""
OPT_CONFIG="--disable-mount --disable-losetup --disable-mountpoint
    --disable-unshare --disable-nsenter --disable-setpriv --disable-eject
    --disable-cramfs --disable-bfs --disable-minix --disable-fdformat
    --disable-hwclock --disable-cal --disable-logger --disable-switch_root
    --disable-pivot_root --disable-kill --disable-last --disable-mesg
    --disable-login --disable-sulogin --disable-su --disable-more
    --disable-schedutils --disable-wall --enable-write --disable-pylibmount
    --without-user --without-python"
DOCS=""
template=20170713
tmplurl=ftp://plamo.linet.gr.jp/pub/Plamo-src/admin
######################################################################

if [ -f functions ] ; then
  source ./functions
elif [ ! -f /usr/share/plamo/functions ] ; then
  wget ftp://plamo.linet.gr.jp/pub/Plamo-src/admin/functions
  source ./functions
else
  source /usr/share/plamo/functions
fi

#fscheck
prepare "$@"
infodir=$P/share/info
mandir=$P/share/man
docdir=.
if [ $opt_download -eq 1 ] ; then
  download_sources
fi
if [ $opt_config -eq 1 ] ; then
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    if [ -d ${B[$i]} ] ; then rm -rf ${B[$i]} ; fi ; cp -a ${S[$i]} ${B[$i]}
  done
  apply_patches
  cd ${B[$i]}
  cp -p configure{,.orig}
  cat <<- "EOF" | patch configure
	21751a21752
	> build_blkid=no
	21794a21796
	> build_findfs=no
	23202a23205
	> build_fstrim=no
	23266a23270
	> build_swapon=no
	23887a23892
	> build_mkswap=no
	24073a24079
	> build_getopt=no
	24097a24104
	> build_blockdev=no
	24627a24635
	> build_flock=no
	24890a24899
	> build_renice=no
	24913a24923
	> build_setsid=no
	24936a24947
	> build_readprofile=no
	24979a24991
	> build_dmesg=no
	25135a25148
	> build_blkdiscard=no
	25221a25235
	> build_rtcwake=no
	25264a25279
	> build_setarch=no
	25307a25323
	> build_script=no
	25357a25374
	> build_scriptreplay=no
	25472a25490
	> build_hexdump=no
	25495a25514
	> build_rev=no
	EOF
  for i in `seq 0 $((${#B[@]} - 1))` ; do
  echo "***** config ******"
  echo $i
    cd ${B[$i]}
    if [ -x configure ] ; then
      ./configure --prefix= --sysconfdir=/etc --localstatedir=/var \
          --libdir='${exec_prefix}'/$libdir --infodir='${prefix}'/share/info \
          --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]} \
          `[ $i -eq 9 ] && echo --with-rootdir=/$libdir` \
          `[ $i -eq 17 ] && echo --with-usrlibdir=/$libdir`
    fi
  done
fi
if [ $opt_build -eq 1 ] ; then
  for i in `seq 0 $((${#B[@]} - 1))` ; do
  echo "***** build ******"
  echo $i
    cd ${B[$i]}
    if [ -f [Mm]akefile ] ; then
      make LDFLAGS="-lncursesw -ldl -all-static" \
          REALTIME_LIBS="-lrt -lpthread"
    fi
  done
fi
if [ $opt_package -eq 1 ] ; then
  root_priv
  if [ -d $C ] ; then rm -rf $C ; fi ; mkdir -p $C
  touch $W/i.st ; sleep 1
  for i in `seq 0 $((${#B[@]} - 1))` ; do
  echo "***** package ******"
  echo $i
    cd ${B[$i]}
    if [ -f [Mm]akefile ] ; then
      make -i install DESTDIR=$P
    fi
  done
fi
