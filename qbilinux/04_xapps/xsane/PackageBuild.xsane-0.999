#!/bin/sh
##############################################################
pkgbase=xsane
vers=0.999
url="http://www.xsane.org/download/xsane-${vers}.tar.gz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=T2
src=xsane-${vers}
OPT_CONFIG=''
DOCS='ICM.TODO xsane-WIN32-README.txt xsane-WIN32-compilation.txt xsane-WIN32-compilation.txt.old xsane.AUTHOR xsane.COPYING xsane.INSTALL xsane.NEWS xsane.TODO'
patchfiles='xsane-0.995-xdg-open.patch xsane-0.995-close-fds.patch xsane-0.996-no-eula.patch xsane-0.997-off-root-build.patch xsane-0.999-no-file-selected.patch xsane-0.997-ipv6.patch xsane-0.998-preview-selection.patch xsane-0.998-libpng.patch xsane-0.998-wmclass.patch xsane-0.998-desktop-file.patch xsane-0.999-man-page.patch xsane-0.999-pdf-no-high-bpp.patch xsane-0.999-lcms2.patch xsane-0.999-coverity.patch xsane-0.999-snprintf-update.patch xsane-0.999-signal-handling.patch xsane-0.999-7-autoconf.patch'
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    if [ -x ./configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi
    mkdir -p $P/usr/${libdir}/gimp/2.0/plug-ins
    ( cd $P/usr/${libdir}/gimp/2.0/plug-ins ; ln -sf /usr/bin/xsane xsane )
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
