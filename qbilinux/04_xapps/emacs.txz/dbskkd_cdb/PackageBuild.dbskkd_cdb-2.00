#!/bin/sh

######################################################################
url="https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/dbskkd-cdb/dbskkd-cdb-2.00.tar.gz
    http://openlab.ring.gr.jp/skk/dic/SKK-JISYO.L.gz
    http://openlab.ring.gr.jp/skk/dic/SKK-JISYO.jinmei.gz
    http://openlab.ring.gr.jp/skk/dic/SKK-JISYO.fullname.gz
    http://openlab.ring.gr.jp/skk/dic/SKK-JISYO.geo.gz
    http://openlab.ring.gr.jp/skk/dic/SKK-JISYO.propernoun.gz
    http://openlab.ring.gr.jp/skk/dic/SKK-JISYO.station.gz"
pkgbase=dbskkd_cdb
vers=2.00
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=T2
src=dbskkd-cdb-$vers
OPT_CONFIG=""
DOCS="READMEJP LICENSE example-inetd.txt CHANGES
    skk-server-protocol.txt README example-daemontools.txt"
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
    gunzip -c $W/SKK-JISYO.L.gz > SKK-JISYO.L
    gunzip -c $W/SKK-JISYO.jinmei.gz > SKK-JISYO.jinmei
    gunzip -c $W/SKK-JISYO.fullname.gz > SKK-JISYO.fullname
    gunzip -c $W/SKK-JISYO.geo.gz > SKK-JISYO.geo
    gunzip -c $W/SKK-JISYO.propernoun.gz > SKK-JISYO.propernoun
    gunzip -c $W/SKK-JISYO.station.gz > SKK-JISYO.station
    skkdic-expr2 SKK-JISYO.L + SKK-JISYO.jinmei + SKK-JISYO.fullname \
		 + SKK-JISYO.geo + SKK-JISYO.propernoun + SKK-JISYO.station \
	| skkdic-sort > SKK-JISYO.H
    cp -p makeskkcdb.sh makeskkcdb.sh.orig
    sed 's@/usr/local/share/skk/@@g' makeskkcdb.sh.orig \
	| sed 's@SKK-JISYO.L@SKK-JISYO.H@g' > makeskkcdb.sh
    ./makeskkcdb.sh
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    if [ $arch = "x86_64" -o $arch = "aarch64" ]; then
	cp -p Makefile Makefile.orig
	sed 's@/local@@g' Makefile.orig | sed 's@lib/@lib64/@g' \
	    | sed 's@^INSTALLDIR = @&$(DESTDIR)@g' > Makefile
    else
	cp -p Makefile Makefile.orig
	sed 's@/local@@g' Makefile.orig \
	    | sed 's@^INSTALLDIR = @&$(DESTDIR)@g' > Makefile
    fi
    cat <<- "EOF" | patch Makefile
	25a26
	> 	mkdir -p $(INSTALLDIR)
	EOF
    cp -p dbskkd-cdb.c dbskkd-cdb.c.orig
    sed 's@/local@@g' dbskkd-cdb.c.orig | sed 's@SKK-JISYO.L@SKK-JISYO.H@g' \
					      > dbskkd-cdb.c
    if [ -x ./configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi
    install -d $P/usr/share/skk
    install -m 644 SKK-JISYO.H.cdb $P/usr/share/skk
    cp -p $W/SKK-JISYO.*.gz $P/usr/share/skk
    chown root.root $P/usr/share/skk/SKK-JISYO.*.gz
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
