#!/bin/sh
unset LS_BLOCK_SIZE
export LANG=C
##############################################################
pkgbase=firefox
vers=65.0
url="https://archive.mozilla.org/pub/firefox/releases/${vers}/source/firefox-${vers}.source.tar.xz"
#verify=$url.asc
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=firefox-${vers}
DOCS='LICENSE README.txt other-licenses'
patchfiles='firefox.desktop.patch'
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
    hg -v clone http://hg.mozilla.org/releases/l10n/mozilla-release/ja/
    ( cd ja ; hg update default )
    if [ ! -d ../l10n ]; then
      mkdir ../l10n
    else
      rm -rf ../l10n/*
    fi
    mv ja ../l10n/
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    # configure script misdetects the preprocessor without an optimization level
    sed -i '/ac_cpp=/s/$CPPFLAGS/& -O2/' configure

    cat > mozconfig <<EOF
## Project
. ${B[$i]}/browser/config/mozconfig

#mk_add_options MOZ_MAKE_FLAGS="-j10"
ac_add_options --enable-strip
ac_add_options --disable-install-strip
#ac_add_options --disable-optimize

ac_add_options --disable-debug
ac_add_options --disable-rust-debug
ac_add_options --disable-debug-symbols

ac_add_options --enable-default-toolkit=cairo-gtk3

## Directory
ac_add_options --prefix=/usr
ac_add_options --libdir=/usr/${libdir}

## System Library
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
# jpeg-turbo
ac_add_options --with-system-jpeg
ac_add_options --with-system-zlib
ac_add_options --with-system-bz2
# libpng-1.6
#ac_add_options --with-system-png
#ac_add_options --with-system-libevent
# libvpx-1.3 is too old
#ac_add_options --with-system-libvpx
#ac_add_options --enable-system-hunspell
ac_add_options --enable-system-sqlite
ac_add_options --enable-system-ffi
ac_add_options --enable-system-pixman

## Features
ac_add_options --enable-startup-notification
#ac_add_options --enable-gio
#ac_add_options --enable-webm
#ac_add_options --disable-dbus
ac_add_options --disable-necko-wifi
#ac_add_options --enable-canvas
ac_add_options --enable-pulseaudio
# disable feature
#ac_add_options --disable-gnomevfs
#ac_add_options --disable-gnomeui
ac_add_options --disable-crashreporter
ac_add_options --disable-updater
ac_add_options --disable-tests

## Branding
ac_add_options --with-branding=browser/branding/unofficial

## Japanese
#ac_add_options --with-l10n-base=${B[$i]}/../l10n
#ac_add_options --enable-ui-locale=ja

EOF

}

do_build() {
    cd ${B[$1]}
    export BINDGEN_CFLAGS=$(pkg-config --cflags nspr pixman-1)
    ./mach build
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    for mk in `find . -name "[Mm]akefile" ` ; do
	sed -i -e 's|GCONFTOOL = /usr/bin/gconftool-2|GCONFTOOL = echo|' $mk
    done
    DESTDIR=$P ./mach install
    install -v -m755 -d $P/usr/${libdir}/mozilla/plugins
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
}

do_package() {
    mv $docdir/$src $docdir/$pkgbase-$vers
    install $W/build/firefox.desktop $P/usr/share/applications/
    mkdir -p $P/install
    cat << EOF >> $P/install/initpkg
ln -sf /usr/${libdir}/$pkgbase-$vers /usr/${libdir}/$pkgbase
EOF
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
