#!/bin/sh

# Setup ppp

PPPDIR="/etc/ppp"
TMPDIR="/tmp/.pppsetup.$$"

check_uid () {
	if [ "$UID" != "0" ]; then
		dialog --title "ERROR" \
			--msgbox "\nroot 権限でないと実行できません。\n" 7 70
		exit 1
	fi
}

check_ppp () {
	if [ ! -d "$PPPDIR" ]; then
		dialog --title "ERROR" \
			--msgbox "\nPPP がインストールされていません。\n" 7 70
		exit 1
	fi
}

check_addr () {
	local RET=0 PIECE REST="$1." IDX=4

	while [ $IDX -ne 0 ]; do
		PIECE="${REST%%.*}"
		REST="${REST#*.}"
		if [ $((PIECE)) = "$PIECE" ]; then
			if [ $PIECE -lt 0 -o $PIECE -gt 255 ]; then
				RET=2   # illegal field
			fi
		else
			RET=2     # illegal field
		fi
		IDX=$((IDX - 1))
	done
	if [ -n "$REST" ]; then
		RET=1       # too many fields
	fi
	if [ $RET -ne 0 ]; then
		dialog --title "ERROR" --msgbox "`cat <<-EOF

				入力された値($1)は、IPアドレスではありません。

				ここでは、192.168.1.1 のように、4個の0〜255の数値を指定する必要が
				あります。設定内容を確認の上、もう一度入力し直してください。
 
			EOF`" 10 70
	fi
	return $RET
}

check_planet () {
	if [ -L "/etc/rc.d/rc.inet1" ]; then
		test "`ls -l '/etc/rc.d/rc.inet1' | sed 's/.*-> *//'`" = "rc.inet1.planet"
	else
		test -x "/etc/rc.d/rc.ifctl"
	fi
}

make_dir () {
	if [ ! -d "$2" ]; then
		mkdir -p "$2"
		chown 0.0 "$2"
		chmod $1 "$2"
	fi
}

make_file () {
	if [ ! -r "$2" ]; then
		touch "$2"
		chown 0.0 "$2"
		chmod $1 "$2"
	fi
}

init_pppdir () {
	make_dir 755 $PPPDIR/chat
	make_dir 755 $PPPDIR/peers
	make_dir 755 $PPPDIR/resolv
	make_file 600 $PPPDIR/pap-secrets
	make_file 600 $PPPDIR/chap-secrets
}

make_adv_vars () {
	ADV_VARS="HIDDEN DEBUG PPPDOPTS LINKNAME"
	if [ "$PPPTYPE" = "Dialup" ]; then
		ADV_VARS="$ADV_VARS MODEMINIT DIALTYPE AUTHTYPE"
		if [ "$1" != "CHAP/PAP" ]; then
			ADV_VARS="$ADV_VARS STARTCMD"
		fi
	fi
	ADV_VARS="$ADV_VARS DOMAIN DNS"
}

make_vars () {
	VARS="COMMENT DEVICE"
	if [ "$PPPTYPE" = "Dialup" ]; then
		VARS="$VARS TELNO"
	fi
	VARS="$VARS USERID PASSWD"

	make_adv_vars all
}

set_default () {
	COMMENT=
	PPPTYPE="Dialup"
	DEVICE=
	TELNO=
	USERID=
	PASSWD=
}

set_adv_default () {
	HIDDEN="Off"
	DEBUG="Off"

	if [ "$PPPTYPE" = "PPPoE" ]; then
		PPPDOPTS=
	else
		PPPDOPTS="modem crtscts"
	fi

	LINKNAME="common"
	MODEMINIT="E1"
	DIALTYPE="Tone"
	AUTHTYPE="CHAP/PAP"
	STARTCMD=
	DOMAIN=
	DNS=
}

read_config () {
	local SCRIPT ARGS

	CONFIG="$1"

	SCRIPT="`sed -e "/^#:/!d" -e "s/^#://" < $PPPDIR/peers/$CONFIG`"
	# decide PPPTYPE value first
	set_default
	eval "$SCRIPT"
	set_adv_default
	eval "$SCRIPT"

	USERID_ORIG="$USERID"

	if [ "$AUTHTYPE" = "Login" ]; then
		eval "ARGS=(`grep \"^assword:\" $PPPDIR/chat/$CONFIG`)"
		PASSWD="${ARGS[1]}"
	else
		eval "ARGS=(`grep \"^'$USERID' '$CONFIG'\" $PPPDIR/pap-secrets`)"
		PASSWD="${ARGS[2]}"
	fi
}

write_config () {
	local ONLYDEBUG DEBUGOPT ONLYPPPOE DEVICEOPT ONLYDIAL DIALOPT
	local LINKNAMEOPT="${LINKNAME:+linkname \"$LINKNAME\"}"
	local UNLESSDNS="${DNS:+#}"

	init_pppdir

	if [ "$DEBUG" = "On" ]; then
		ONLYDEBUG=
		DEBUGOPT="-v "
	else
		ONLYDEBUG="#"
		DEBUGOPT=
	fi


	if [ "$PPPTYPE" = "PPPoE" ]; then
		ONLYPPPOE=
		DEVICEOPT="nic-$DEVICE"
		ONLYDIAL="#"
	else
		ONLYPPPOE="#"
		DEVICEOPT="$DEVICE"
		ONLYDIAL=

		case "$DIALTYPE" in
		Tone)
			DIALOPT="T"
			;;
		Pulse)
			DIALOPT="P"
			;;
		*)
			DIALOPT=
			;;
		esac

		cat <<-EOF > $PPPDIR/chat/$CONFIG
			TIMEOUT         3
			ABORT           BUSY
			ABORT           'NO ANSWER'
			ABORT           'RINGING\r\n\r\nRINGING'
			''              AT&F
			OK-AT-OK        AT$MODEMINIT
			TIMEOUT         60
			OK              ATD$DIALOPT$TELNO
			CONNECT         '\d\c'
		EOF

		if [ "$AUTHTYPE" = "Login" ]; then
			cat <<-EOF >> $PPPDIR/chat/$CONFIG
				ogin:--ogin:    '$USERID'
				assword:        '$PASSWD'
				''              '\d\c'
			EOF
			if [ -n "$STARTCMD" ]; then
				echo "''              '$STARTCMD'" >> $PPPDIR/chat/$CONFIG
			fi
			chmod 600 $PPPDIR/chat/$CONFIG
		else
			chmod 644 $PPPDIR/chat/$CONFIG
		fi
	fi

	cat <<-EOF > $PPPDIR/peers/$CONFIG
		# Generated by pppsetup
		# Please do not delete any of the comments!
		#
		#:COMMENT="$COMMENT"
		#:PPPTYPE="$PPPTYPE"
		#:DEVICE="$DEVICE"
		#:TELNO="$TELNO"
		#:USERID="$USERID"
		#:HIDDEN="$HIDDEN"
		#:DEBUG="$DEBUG"
		#:PPPDOPTS="$PPPDOPTS"
		#:LINKNAME="$LINKNAME"
		#:MODEMINIT="$MODEMINIT"
		#:DIALTYPE="$DIALTYPE"
		#:AUTHTYPE="$AUTHTYPE"
		#:STARTCMD="$STARTCMD"
		#:DOMAIN="$DOMAIN"
		#:DNS="$DNS"
		${ONLYDEBUG}debug
		${ONLYPPPOE}plugin rp-pppoe.so
		$DEVICEOPT
		${ONLYDIAL}115200
		noipdefault
		defaultroute
		${UNLESSDNS}usepeerdns
		${ONLYDIAL}connect "/usr/sbin/chat $DEBUGOPT-f $PPPDIR/chat/$CONFIG"
		noauth
		name "$USERID"
		remotename "$CONFIG"
		ipparam "$CONFIG"
		$LINKNAMEOPT
		$PPPDOPTS
	EOF

	chmod 644 $PPPDIR/peers/$CONFIG

	if [ "$AUTHTYPE" = "CHAP/PAP" ]; then
		for f in $PPPDIR/pap-secrets $PPPDIR/chap-secrets; do
			grep -v "^'$USERID_ORIG' '$CONFIG'" < $f > $f.N
			echo "'$USERID' '$CONFIG' '$PASSWD'" >> $f.N
			mv -f $f.N $f
			chmod 600 $f
		done
	fi

	if [ -n "$DOMAIN" ]; then
		echo "search $DOMAIN" > $PPPDIR/resolv/$CONFIG
	else
		echo -n > $PPPDIR/resolv/$CONFIG
	fi
	for s in $DNS; do
		echo "nameserver $s" >> $PPPDIR/resolv/$CONFIG
	done
}

delete_config () {
	read_config "$1"

	rm -f $PPPDIR/peers/$CONFIG $PPPDIR/chat/$CONFIG $PPPDIR/resolv/$CONFIG

	for f in $PPPDIR/pap-secrets $PPPDIR/chap-secrets; do
		grep -v "^'$USERID_ORIG' '$CONFIG'" < $f > $f.N
		mv -f $f.N $f
		chmod 600 $f
	done
}

config_comment () {
	local _COMMENT

	_COMMENT=$(dialog --title "接続の説明" --inputbox "`cat <<-EOF

			この接続設定の簡単な説明があれば入力してください。

			接続の説明:
		EOF`" 11 72 3>&1 1>&2 2>&3) || return 1
	COMMENT_NEW=${_COMMENT}
	MODIFIED_NEW="yes"
}

config_device () {
	local _DEVICE

	while [ 0 ]; do
		if [ "$PPPTYPE" = "PPPoE" ]; then
			_DEVICE=$(dialog --title "デバイス [PPPoE]" --menu "`cat <<-EOF

					接続に使うイーサネットデバイスを選択してください。
 
				EOF`" 14 72 5 \
				"eth0"  "1つめの標準イーサネットデバイス" \
				"eth1"  "2つめの標準イーサネットデバイス" \
				"wlan0" "一部の無線LANデバイス" \
				"ath0"  "Atheros系無線LANデバイス" \
				"Other" "その他" 3>&1 1>&2 2>&3) || return 1
		else
			_DEVICE=$(dialog --title "デバイス [Dialup]" --menu "`cat <<-EOF

					接続に使うシリアルデバイスを選択してください。
 
				EOF`" 17 72 8 \
				"/dev/modem"       "標準または PCMCIA接続のシリアルデバイス" \
				"/dev/ttyS0"       "1つめの標準シリアルデバイス" \
				"/dev/ttyS1"       "2つめの標準シリアルデバイス" \
				"/dev/usb/ttyACM0" "USB接続のモデム" \
				"/dev/usb/ttyUSB0" "USB接続のシリアルデバイス" \
				"/dev/ttyLT0"      "Lucent系 Winモデム" \
				"/dev/ttySL0"      "SmartLink系 Winモデム" \
				"Other"            "その他" 3>&1 1>&2 2>&3) || return 1
		fi

		if [ "$_DEVICE" = "Other" ]; then
			_DEVICE=$(dialog --title "デバイス" --inputbox "`cat <<-EOF

					接続に使うデバイスの名前を入力してください。

					デバイス名:
				EOF`" 11 72 3>&1 1>&2 2>&3) || continue
			if [ -z "$_DEVICE" ]; then
				continue
			fi
		fi

		if [ "$PPPTYPE" = "PPPoE" ]; then
			if /sbin/ifconfig "$_DEVICE" > /dev/null 2>&1; then
				break
			fi

			dialog --title "ERROR" --msgbox "`cat <<-EOF

					$_DEVICE というイーサネットデバイスは存在しません。

					ドライバがモジュール化されている場合は、modprobeコマンドなどでド
					ライバをロードして、イーサネットデバイスをを認識させておく必要が
					あります。

					設定対象およびドライバを確認の上、もう一度選択し直してください。
 
				EOF`" 13 70
		else
			case "$_DEVICE" in
			/dev/*)
				if [ -r "$_DEVICE" ]; then
					break
				fi
				;;
			esac

			dialog --title "ERROR" --msgbox "`cat <<-EOF

					$_DEVICE というデバイスファイルは存在しません。

					あらかじめ、デバイスファイルを mknod で作っておくか、デバイスファ
					イルへのシンボリックリンクを張っておくかする必要があります。

					設定対象を確認の上、もう一度選択し直してください。
 
				EOF`" 12 70
		fi
	done
	DEVICE_NEW="$_DEVICE"
	MODIFIED_NEW="yes"
}

config_telno () {
	local _TELNO=

	while [ -z "$_TELNO" ]; do
		_TELNO=$(dialog --title "電話番号" --inputbox "`cat <<-EOF

				PPP の接続先電話番号を入力してください。

				電話番号:
			EOF`" 11 72 3>&1 1>&2 2>&3) || return 1
	done
	TELNO_NEW="$_TELNO"
	MODIFIED_NEW="yes"
}

config_userid () {
	local _USERID=

	while [ -z "$_USERID" ]; do
		_USERID=$(dialog --title "ユーザID" --inputbox "`cat <<-EOF

				PPP の接続で用いるユーザID を指定してください。

				ユーザID:
			EOF`" 11 72 3>&1 1>&2 2>&3) || return 1
	done
	USERID_NEW="$_USERID"
	MODIFIED_NEW="yes"
}

config_passwd () {
	local _PASSWD=

	while [ -z "$_PASSWD" ]; do
		_PASSWD=$(dialog --title "パスワード" --inputbox "`cat <<-EOF

				PPP の接続で用いるパスワードを指定してください。

				パスワード ($USERID_NEW):
			EOF`" 11 72 3>&1 1>&2 2>&3) || return 1
	done
	PASSWD_NEW="$_PASSWD"
	MODIFIED_NEW="yes"
}

config_hidden () {
	local _HIDDEN

	_HIDDEN=$(dialog --title "隠しエントリ" --menu "`cat <<-EOF

			この接続を隠しエントリにしますか? 隠しエントリにすると、pon -i や
			pon -ix 等での接続選択メニューで提示されなくなります。

			PPPoE で自動的に接続される場合等は、隠しエントリにした方がいいか
			もしれません。
 
		EOF`" 15 72 2 \
		"Off" "隠しエントリにしない" \
		"On"  "隠しエントリにする" 3>&1 1>&2 2>&3) || return 1
	HIDDEN_NEW="$_HIDDEN"
	MODIFIED_NEW="yes"
}

config_debug () {
	local _DEBUG

	_DEBUG=$(dialog --title "デバッグモード" --menu "`cat <<-EOF

			デバッグモードを有効にしますか? デバッグモードでは、システムログ
			(/var/log/messages 等)に多くの情報が記録されます。

			うまく接続できない場合等は有効にしてみると、より多くの情報が得ら
			れるため、解析しやすくなります。
 
		EOF`" 15 72 2 \
		"Off" "デバッグモード無効" \
		"On"  "デバッグモード有効" 3>&1 1>&2 2>&3) || return 1
	DEBUG_NEW="$_DEBUG"
	MODIFIED_NEW="yes"
}

config_pppdopts () {
	local _PPPDOPTS

	_PPPDOPTS=$(dialog --title "pppd オプション" --inputbox "`cat <<-EOF

			pppd に対する追加オプションがあれば入力してください。

			シリアルポートのモデム制御線を使用するかどうかを指示する "modem",
			"local"、および、フロー制御方法を指示する "crtscts", "nocrtscts",
			"xonxoff"、また、PPP のヘッダ圧縮を無効にする "novj" や、MRU およ
			び MTU を指示する "mru", "mtu" 等、pppd では多くのオプションを指
			定することができます。詳細は pppd のマニュアルを参照してください。

			必要ない場合は、[Enter] を押してください。

			モデム初期化コマンド:
		EOF`" 19 72 3>&1 1>&2 2>&3) || return 1
	PPPDOPTS_NEW="$_PPPDOPTS"
	MODIFIED_NEW="yes"
}

config_linkname () {
	local _LINKNAME

	_LINKNAME=$(dialog --title "論理リンク名" --inputbox "`cat <<-EOF

			この接続に対する論理リンク名を入力してください。

			論理リンク名は、pppd の起動時に "/var/run/ppp-(論理リンク名).pid"
			の名前で、PIDファイルを作成するために用いられます。PPP モニタ等の
			ツールからロックファイルを監視する場合に、これを指定しておくと便
			利です(従来、/var/lock 以下に作られるシリアルデバイスのロックファ
			イルを指定することが多かったのですが、これでは、設定によってシリ
			アルデバイスが変わる場合に破綻します)。なお、これはロックファイル
			ではありませんので、排他制御には用いられません。

			必要ない場合は、[Enter] を押してください。

			論理リンク名:
		EOF`" 21 72 3>&1 1>&2 2>&3) || return 1
	LINKNAME_NEW="$_LINKNAME"
	MODIFIED_NEW="yes"
}

config_modeminit () {
	local _MODEMINIT

	_MODEMINIT=$(dialog --title "モデム初期化コマンド" --inputbox "`cat <<-EOF

			モデム初期化コマンドがあれば入力してください。先頭の "AT" は不要
			です。

			必要ない場合は、[Enter] を押してください。

			モデム初期化コマンド:
		EOF`" 14 72 3>&1 1>&2 2>&3) || return 1
	MODEMINIT_NEW="$_MODEMINIT"
	MODIFIED_NEW="yes"
}

config_dialtype () {
	local _DIALTYPE

	_DIALTYPE=$(dialog --title "ダイアル方法" --menu "`cat <<-EOF

			ダイアル方法を選択してください。通常は Tone で構いません。
 
		EOF`" 12 72 3 \
		"Tone"  "トーン(プッシュ)回線" \
		"Pulse" "パルス(ダイアル)回線" \
		"ISDN"  "ISDN回線" 3>&1 1>&2 2>&3) || return 1
	DIALTYPE_NEW="$_DIALTYPE"
	MODIFIED_NEW="yes"
}

config_authtype () {
	local _AUTHTYPE

	_AUTHTYPE=$(dialog --title "認証方法" --menu "`cat <<-EOF

			PPP接続時の認証方法を選択してください。通常は CHAP/PAP で構いませ
			んが、古い ISP では、ログイン認証を用いている場合があります。

			なお、CHAP と PAP は、接続時に適当な方を選択します。
 
		EOF`" 14 72 2 \
		"CHAP/PAP" "CHAP認証 または PAP認証 (自動選択)" \
		"Login"    "ログイン認証" 3>&1 1>&2 2>&3) || return 1
	AUTHTYPE_NEW="$_AUTHTYPE"

	if [ "$AUTHTYPE_NEW" = "Login" ]; then
		dialog --title "NOTICE" --msgbox "`cat <<-EOF

				ログイン認証が選択されましたので、パスワードは直接 chatスクリプト
				($PPPDIR/chat/$CONFIG) に書き込まれます。

				この chatスクリプトは、スーパーユーザ以外では読めないように設定さ
				れます。このため、pppd を root に setuid していても、一般ユーザの
				権限で接続することはできません。

				この接続は、sudo 等を用いて直接 root 権限で実行する必要があります。
				chatスクリプトを root に setuid することは危険ですので、絶対に避
				けてください。
 
			EOF`" 16 70
	fi

	MODIFIED_NEW="yes"
}

config_startcmd () {
	local _STARTCMD

	_STARTCMD=$(dialog --title "初期実行コマンド" --inputbox "`cat <<-EOF

			ダイアルアップログイン後に、リモートマシン上で実行するコマンドが
			あれば入力してください。例えば、接続先が単なるシェルログインサー
			ビスである場合、ログイン後に PPP デーモンを起動する必要があります。

			必要ない場合は、[Enter] を押してください。

			初期実行コマンド:
		EOF`" 15 72 3>&1 1>&2 2>&3) || return 1
	STARTCMD_NEW="$_STARTCMD"
	MODIFIED_NEW="yes"
}

config_domain () {
	local _DOMAIN

	_DOMAIN=$(dialog --title "ドメイン名" --inputbox "`cat <<-EOF

			PPP接続時に参照するドメイン名を、ISP 等から指示されている場合は、
			それを指定してください。

			ドメイン名を指定しない場合は、[Enter] を押してください。

			ドメイン名:
		EOF`" 14 72 3>&1 1>&2 2>&3) || return 1
	DOMAIN_NEW="$_DOMAIN"
	MODIFIED_NEW="yes"
}

config_dns () {
	local INDEX=1 NS _DNS=

	while [ 0 ]; do
		case $INDEX in
		1)
			NS=$(dialog --title "ネームサーバ(1)" --inputbox "`cat <<-EOF

					1番目のネームサーバの IPアドレスを指定してください。

					PPP接続時にネームサーバの情報を動的に取得する場合は、[Enter] を押
					してください。

					ネームサーバ(1)の IPアドレス:
				EOF`" 14 72 3>&1 1>&2 2>&3) || return 1
			;;
		2)
			NS=$(dialog --title "ネームサーバ(2)" --inputbox "`cat <<-EOF

					2番目のネームサーバの IPアドレスを指定してください。

					(設定済のネームサーバ: $_DNS)

					これ以上ネームサーバが無い場合は、[Enter] を押してください。

					ネームサーバ(2)の IPアドレス:
				EOF`" 15 72 3>&1 1>&2 2>&3) || return 1
			;;
		*)
			break
			;;
		esac
		if [ -z "$NS" ]; then
			break
		fi
		if check_addr "$NS"; then
			_DNS="$_DNS${_DNS:+ }$NS"
			INDEX=`expr $INDEX + 1`
		fi
	done
	DNS_NEW="$_DNS"
	MODIFIED_NEW="yes"
}

advanced_menu () {
	local ARGS ENTRIES SELECT _ADV_VARS="$ADV_VARS" MODIFIED_NEW="$MODIFIED"

	for v in $ADV_VARS; do
		vv="${v}_NEW"
		local "$vv"="${!v}"
	done

	while [ 0 ]; do
		ARGS=()
		make_adv_vars "$AUTHTYPE_NEW"
		for v in $ADV_VARS; do
			ARGS[${#ARGS[@]}]="$v"
			vv="${v}_NEW"
			ARGS[${#ARGS[@]}]="${!vv}"
		done
		ADV_VARS="$_ADV_VARS"
		ENTRIES=`expr ${#ARGS[@]} / 2`

		SELECT=$(dialog --title "詳細設定: $CONFIG [$PPPTYPE]" --menu "`cat <<-EOF

				設定を変更したい項目を選択してください。

				現在の設定対象: $CONFIG [$PPPTYPE]
 
			EOF`" `expr $ENTRIES + 13` 72 `expr $ENTRIES + 2` \
			"${ARGS[@]}" \
			"---"  "---" \
			"Exit" "戻る" 3>&1 1>&2 2>&3) || return 1

		case "$SELECT" in
		Exit)
			for v in $ADV_VARS; do
				vv="${v}_NEW"
				eval "$v=\"${!vv}\""
			done
			MODIFIED="$MODIFIED_NEW"

			break
			;;
		---)
			;;
		*)
			eval "config_`echo $SELECT | tr A-Z a-z`"
			;;
		esac
	done
}

advanced_config () {
	local MODIFIED="$MODIFIED_NEW"

	for v in $ADV_VARS; do
		vv="${v}_NEW"
		local "$v"="${!vv}"
	done
	advanced_menu || return 1
	for v in $ADV_VARS; do
		vv="${v}_NEW"
		eval "$vv=\"${!v}\""
	done
	MODIFIED_NEW="$MODIFIED"
}

edit_menu () {
	local ARGS ENTRIES SELECT _PASSWD MODIFIED_NEW="$MODIFIED"

	for v in $VARS $ADV_VARS; do
		vv="${v}_NEW"
		local "$vv"="${!v}"
	done

	while [ 0 ]; do
		_PASSWD="$PASSWD_NEW"
		PASSWD_NEW="********"

		ARGS=()
		for v in $VARS; do
			ARGS[${#ARGS[@]}]="$v"
			vv="${v}_NEW"
			ARGS[${#ARGS[@]}]="${!vv}"
		done
		ENTRIES=`expr ${#ARGS[@]} / 2`

		PASSWD_NEW="$_PASSWD"

		SELECT=$(dialog --title "設定変更: $CONFIG [$PPPTYPE]" --menu "`cat <<-EOF

				設定を変更したい項目を選択してください。

				現在の設定対象: $CONFIG [$PPPTYPE]
 
			EOF`" `expr $ENTRIES + 14` 72 `expr $ENTRIES + 3` \
			"${ARGS[@]}" \
			"---"      "---" \
			"Advanced" "詳細設定" \
			"Exit"     "設定を終了" 3>&1 1>&2 2>&3) || return 1

		case "$SELECT" in
		Advanced)
			advanced_config
			;;
		Exit)
			for v in $VARS $ADV_VARS; do
				vv="${v}_NEW"
				eval "$v=\"${!vv}\""
			done
			MODIFIED="$MODIFIED_NEW"

			break
			;;
		---)
			;;
		*)
			eval "config_`echo $SELECT | tr A-Z a-z`"
			;;
		esac
	done
}

confirm_menu () {
	local TEL LINES SELECT

	while [ -n "$MODIFIED" ]; do
		if [ "$PPPTYPE" = "PPPoE" ]; then
			TEL=
			LINES=19
		else
			TEL="\n  ・電話番号:   $TELNO"
			LINES=20
		fi
		SELECT=$(dialog --title "確認: $CONFIG [PPPoE]" --menu "`cat <<-EOF

				次の内容で接続の設定を保存してもよろしいですか?

				  ・接続名:     $CONFIG [$PPPTYPE]
				  ・接続の説明: $COMMENT
				  ・デバイス:   $DEVICE$TEL
				  ・ユーザID:   $USERID
 
			EOF`" $LINES 72 5 \
			"Save"     "保存して終了" \
			"Quit"     "保存せずに終了" \
			"---"      "---" \
			"Advanced" "詳細設定" \
			"Reedit"   "再編集" 3>&1 1>&2 2>&3) || return 1

		case "$SELECT" in
		Save)
			write_config
			break
			;;
		Quit)
			break
			;;
		Advanced)
			advanced_menu
			;;
		Reedit)
			edit_menu
			;;
		esac
	done
}

config_name () {
	while [ 0 ]; do
		if [ -z "$1" ]; then
			CONFIG=$(dialog --title "新しい接続" --inputbox "`cat <<-EOF

					今から作成する接続名を入力してください。

					標準の接続を作成する場合は、単に [Enter] を押してください。

					接続名[default]:
				EOF`" 13 72 3>&1 1>&2 2>&3) || return 1
			CONFIG="${CONFIG:-default}"
		else
			CONFIG=$(dialog --title "コピー: $1" --inputbox "`cat <<-EOF

					コピー先の接続名を入力してください。

					中止する場合は、単に [Enter] を押してください。

					接続名:
				EOF`" 13 72 3>&1 1>&2 2>&3) || return 1

			if [ -z "$CONFIG" ]; then
				return 1
			fi
		fi

		case "$CONFIG" in
		*/*)
			dialog --title "ERROR" --msgbox "`cat <<-EOF

					接続名に "/" を含めることはできません。

					別の名前で入力し直してください。
 
				EOF`" 9 70

			continue
			;;
		*~|*.orig|*.bak)
			dialog --title "ERROR" --msgbox "`cat <<-EOF

					入力された接続名は、バックアップファイル用に予約されています。

					別の名前で入力し直してください。
 
				EOF`" 9 70

			continue
			;;
		esac

		if [ -r "/etc/ppp/peers/$CONFIG" ]; then
			dialog --title "ERROR" --msgbox "`cat <<-EOF

					$CONFIG という名前の接続はすでに存在します。

					別の名前で入力し直してください。
 
				EOF`" 9 70

			continue
		fi

		mkdir -p "$TMPDIR"
		touch "$TMPDIR/$CONFIG" > /dev/null 2>&1
		if [ ! -f "$TMPDIR/$CONFIG" ]; then
			rm -f "$TMPDIR/$CONFIG" > /dev/null 2>&1
			rmdir "$TMPDIR" > /dev/null 2>&1
			dialog --title "ERROR" --msgbox "`cat <<-EOF

					接続名に、ファイル名として許されていない文字が含まれています。

					別の名前で入力し直してください。
 
				EOF`" 9 70

			continue
		fi
		rm -f "$TMPDIR/$CONFIG" > /dev/null 2>&1
		rmdir "$TMPDIR" > /dev/null 2>&1

		break
	done
}

new_config () {
	config_name || return 1
	config_comment || return 1

	PPPTYPE=$(dialog --title "接続の種類" --menu "`cat <<-EOF

			接続の種類を選択してください。
 
		EOF`" 11 72 2 \
		"Dialup" "ダイアルアップ接続" \
		"PPPoE"  "PPPoE接続" 3>&1 1>&2 2>&3) || return 1

	config_device || return 1

	if [ "$PPPTYPE" = "PPPoE" ]; then
		if check_planet; then
			dialog --title "NOTICE" --msgbox "`cat <<-EOF

					$DEVICE_NEW 上での PPPoE を選択しました。

					netconfig 等で、PPPoE 用の設定を行なっておいてください。自動的に
					PPPoE の接続や切断を行なうように設定した場合は、詳細設定メニュー
					内の「HIDDEN」の設定を有効にすることで、pon -i 等でのメニューの選
					択肢に出ないようにすることも可能です。

					ルータとして使用する場合等、NAT やパケットフィルタリング等の設定
					が必要な場合は、/etc/rc.d/rc.inet1.sub に追加してください。
 
				EOF`" 15 70
		else
			dialog --title "NOTICE" --msgbox "`cat <<-EOF

					$DEVICE_NEW 上での PPPoE を選択しました。

					/etc/rc.d/rc.inet1 で、以下のように設定してください。

					  1:echo 1 > /proc/sys/net/ipv4/ip_forward
					  2:iptables -t nat -A POSTROUTING -o ppp0 -j MASQUERADE
					  3:iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS
					    --clamp-mss-to-pmtu
					  4:ifconfig $DEVICE_NEW up 0.0.0.0
					  5:pon $CONFIG

					ルータとして使用する場合、1〜3行目 (2行目は NAT を使う場合のみ)が
					必要です。パケットフィルタの設定は、3行目の後に追加してください。
					5行目は、起動時に自動的に PPPoE の接続を行なう場合のみ必要です。
					この場合、詳細設定メニュー内の「HIDDEN」の設定を有効にすることで、
					pon -i 等でのメニューの選択肢に出ないようにすることも可能です。
 
				EOF`" 22 70
		fi
	else
		config_telno || return 1
	fi

	config_userid || return 1
	config_passwd || return 1

	make_vars
	for v in $VARS; do
		vv="${v}_NEW"
		eval "$v=\"${!vv}\""
	done
	set_adv_default

	USERID_ORIG="$USERID"
	MODIFIED="yes"

	confirm_menu || return 1
}

select_menu () {
	local SELECT

	SELECT=$(dialog --title "$1" --menu "`cat <<-EOF

			接続 $1 に対する操作を指定してください。
 
		EOF`" 12 72 3 \
		"Edit"   "編集" \
		"Copy"   "コピー" \
		"Delete" "削除" 3>&1 1>&2 2>&3) || return 1

	case "$SELECT" in
	Edit)
		MODIFIED=
		read_config "$1"
		make_vars
		edit_menu || return 1
		confirm_menu || return 1
		;;
	Copy)
		read_config "$1"
		config_name "$1" || return 1
		write_config
		;;
	Delete)
		dialog --title "確認" --yesno "`cat <<-EOF

				接続 $1 の設定を削除してもよろしいですか?
				この操作は取り消すことができません。
 
			EOF`" 8 71 || return 1

		delete_config "$1"
		;;
	esac
}

init_config () {
	dialog --title "PPP の設定" --yesno "`cat <<-EOF

			新しくダイアルアップ接続または PPPoE接続の設定を作成します。

			設定情報は $PPPDIR 以下に保存されます。ここで作成した接続の設定
			名を ponコマンドに指定することで、PPP接続を開始できます。切断する
			場合は poffコマンドを実行してください。

			一般ユーザに PPP接続を許可する場合は、sudo 等を用いて root 権限で
			実行させるか、pppd を root に setuid してグループでの実行権限を調
			整するかしてください。

			設定を開始してもよろしいですか?
 
		EOF`" 17 71 || return 1

	new_config || return 1
}

main_menu () {
	local STARTUP="yes" ARGS CONFIG COMMENT HEADING ENTRIES SELECT

	while [ 0 ]; do
		ARGS=()
		for f in $PPPDIR/peers/*; do
			if [ -f "$f" ]; then
				CONFIG="${f##*/}"
				read_config "$CONFIG"
				if [ "$HIDDEN" = "On" ]; then
					HEADING="-"
				else
					HEADING="+"
				fi
				case "$CONFIG" in
				*~|*.orig|*.bak)
					;;
				default)
					if [ -n "$COMMENT" ]; then
						COMMENT="$COMMENT (標準の接続)"
					else
						COMMENT="標準の接続"
					fi
					ARGS=("${HEADING}default" "$COMMENT" "${ARGS[@]}")
					;;
				*)
					ARGS[${#ARGS[@]}]="${HEADING}$CONFIG"
					ARGS[${#ARGS[@]}]="$COMMENT"
					;;
				esac
			fi
		done
		if [ ${#ARGS[@]} -gt 0 ]; then
			ARGS=("${ARGS[@]}" "---" "---")
		elif [ -n "$STARTUP" ]; then
			init_config || exit
			continue
		fi

		STARTUP=
		ENTRIES=`expr ${#ARGS[@]} / 2`
		if [ $ENTRIES -gt 12 ]; then
			ENTRIES=12
		fi
		SELECT=$(dialog --title "PPP の設定" --menu "`cat <<-EOF

				設定を操作したい接続を選択してください。
				新しい接続の設定を行ないたい場合は、New を選択してください。
 
			EOF`" `expr $ENTRIES + 11` 72 `expr $ENTRIES + 1` \
			"${ARGS[@]}" \
			"New" "新しい接続" 3>&1 1>&2 2>&3) || exit

		case "$SELECT" in
		New)
			new_config
			;;
		---)
			;;
		*)
			select_menu "${SELECT#[-+]}"
			;;
		esac
	done
}

check_uid
check_ppp
main_menu

# Local Variables:
# tab-width: 2
# sh-indentation: 2
# End:
