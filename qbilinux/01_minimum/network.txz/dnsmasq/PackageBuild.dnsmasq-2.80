#!/bin/sh

######################################################################
pkgbase=dnsmasq
vers=2.80
url="http://www.thekelleys.org.uk/dnsmasq/dnsmasq-${vers}.tar.gz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=T1
src=$pkgbase-$vers
OPT_CONFIG=""
DOCS="FAQ COPYING setup.html CHANGELOG COPYING-v3 CHANGELOG.archive
    doc.html"
patchfiles=""
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make all-i18n PREFIX=/usr
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install-i18n DESTDIR=$P PREFIX=/usr
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
  install -d $P/etc
  install -m 644 $B/dnsmasq.conf.example $P/etc/dnsmasq.conf.new
  install -d $P/etc/rc.d/init.d
  cat <<- "EOF" > $P/etc/rc.d/init.d/dnsmasq
	#!/bin/sh
	
	start() {
	  if [ -x /usr/sbin/dnsmasq ] ; then
	    dnsmasq
	  fi
	}
	
	stop() {
	  killall dnsmasq
	}
	
	case "$1" in
	start)
	  start
	  ;;
	stop)
	  stop
	  ;;
	restart)
	  stop
	  sleep 1
	  start
	  ;;
	*)
	  echo $"Usage: $0 {start|stop|restart}"
	  exit 1
	  ;;
	esac
	exit 0
EOF
  chmod 644 $P/etc/rc.d/init.d/dnsmasq
  install -d $P/install
  cat <<- "EOF" > $P/install/doinst.sh
	mv etc/dnsmasq.conf.new /tmp
	if [ -f etc/dnsmasq.conf ] ; then
	  mv /tmp/dnsmasq.conf.new etc/dnsmasq.conf.dist
	else
	  mv /tmp/dnsmasq.conf.new etc/dnsmasq.conf
	fi
EOF
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
