#!/bin/sh

######################################################################
pkgbase=procmail
vers=3.22
url="http://www.ring.gr.jp/archives/net/mail/procmail/procmail-${vers}.tar.gz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=T2
src=$pkgbase-$vers
patchfiles="procmail-3.22-glibc-2.10.patch.gz CVE-2014-3618.patch.gz"
OPT_CONFIG=""
DOCS="Artistic COPYING FAQ FEATURES HISTORY INSTALL KNOWN_BUGS README"
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	case ${patch##*.} in
	    gz) gunzip -c $W/$patch | patch -Np1 -i - ;;
	    bz2) bunzip2 -c $W/$patch | patch -Np1 -i - ;;
	    xz) unxz -c $W/$patch | patch -Np1 -i - ;;
	    *) patch -Np1 -i $W/$patch ;;
	esac
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make LOCKINGTEST=/tmp
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install BASENAME=$P/usr VISIBLE_BASENAME=/usr MANDIR=$P/usr/share/man
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    chgrp mail $P/usr/bin/{procmail,lockfile}
    chmod +s $P/usr/bin/{procmail,lockfile}
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
