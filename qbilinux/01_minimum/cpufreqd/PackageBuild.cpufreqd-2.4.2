#!/bin/sh

######################################################################
pkgbase=cpufreqd
vers=2.4.2
url="http://downloads.sourceforge.net/cpufreqd/cpufreqd-${vers}.tar.bz2"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=$pkgbase-$vers
patchfiles=""
OPT_CONFIG=""
DOCS="COPYING NEWS ChangeLog AUTHORS INSTALL README TODO"
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
    cp $W/config.guess .
    cp $W/config.sub .
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    cp -p src/Makefile.in{,.orig}
    sed -i 's@\<lib\>@$(libdir)@g' src/Makefile.in
    cp -p cpufreqd.conf{,.orig}
    sed -i -e 's@^#\(enable_remote\)@\1@' \
	-e 's@^#\(remote_group\)@\1@' cpufreqd.conf
    if [ -x ./configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    mv $P/etc/cpufreqd.conf $C
    mv $C/cpufreqd.conf $P/etc/cpufreqd.conf.new
    cat <<- "EOF" > $P/etc/cpufreqd.conf.sample
	[General]
	pidfile=/var/run/cpufreqd.pid
	poll_interval=2
	verbosity=4
	enable_remote=1
	remote_group=root
	[/General]
	
	[sensors_plugin]
	sensors_conf=/etc/sensors3.conf
	[/sensors_plugin]
	
	[Profile]
	name=On Demand High
	minfreq=40%
	maxfreq=100%
	policy=ondemand
	[/Profile]
	
	[Profile]
	name=On Demand Low
	minfreq=20%
	maxfreq=80%
	policy=ondemand
	[/Profile]
	
	[Profile]
	name=Performance High
	minfreq=100%
	maxfreq=100%
	policy=performance
	[/Profile]
	
	[Profile]
	name=Performance Low
	minfreq=80%
	maxfreq=80%
	policy=performance
	[/Profile]
	
	[Profile]
	name=Powersave High
	minfreq=70%
	maxfreq=70%
	policy=powersave
	[/Profile]
	
	[Profile]
	name=Powersave Low
	minfreq=30%
	maxfreq=30%
	policy=powersave
	[/Profile]
	
	[Rule]
	name=Default Rule
	sensor=temp1:0-60
	cpu_interval=0-100
	profile=Performance High
	[/Rule]
	
	[Rule]
	name=CPU Too Hot
	sensor=temp1:61-100
	cpu_interval=50-100
	profile=On Demand Low
	[/Rule]
	
	EOF
    install -d $P/etc/rc.d/init.d
    cat <<- "EOF" > $P/etc/rc.d/init.d/cpufreqd
	#!/bin/sh
	
	start() {
	  for i in cpufreq_{conservative,powersave,userspace,ondemand,stats} \
	      freq_table ; do
	    modprobe $i > /dev/null 2>&1
	  done
	  for i in acpi-cpufreq mperf p4-clockmod powernow-k8 speedstep-centrino \
	      speedstep-lib ; do
	    modprobe $i > /dev/null 2>&1
	  done
	  for i in ac battery container pci_slot processor sbshc video acpi_pad \
	      button fan power_meter sbs thermal ; do
	    modprobe $i >/dev/null 2>&1
	  done
	  if [ -x /usr/sbin/cpufreqd ] ; then
	    echo $"Starting cpufreqd..."
	    cpufreqd
	  fi
	}
	
	stop() {
	  if [ -f /var/run/cpufreqd.pid ] ; then
	    echo $"Stopping cpufreqd daemon..."
	    kill `cat /var/run/cpufreqd.pid`
	    rm -f /var/run/cpufreqd.pid
	  fi
	}
	
	case "$1" in
	start)
	  start
	  ;;
	stop)
	  stop
	  ;;
	restart)
	  stop
	  sleep 3
	  start
	  ;;
	*)
	  echo $"Usage: $0 {start|stop|restart}"
	  exit 1
	  ;;
	esac
	exit 0
	EOF
    install -d $P/install
    cat <<- "EOF" > $P/install/doinst.sh
	mv etc/cpufreqd.conf.new /tmp
	if [ -f etc/cpufreqd.conf ] ; then
	  mv /tmp/cpufreqd.conf.new etc/cpufreqd.conf.dist
	else
	  mv /tmp/cpufreqd.conf.new etc/cpufreqd.conf
	fi
	EOF
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
