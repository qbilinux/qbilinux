#!/bin/sh

######################################################################
pkgbase=fortune_mod
vers=1.99.1
url="https://www.jabawok.net/gentoo/distfiles/fortune-mod-${vers}.tar.gz
    http://kambing.ui.ac.id/gentoo-portage/games-misc/fortune-mod/files/01_all_fortune_all-fix.patch"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=T2
src=fortune-mod-$vers
patchfiles=""
OPT_CONFIG=""
DOCS="ChangeLog INDEX INSTALL Notes Offensive README TODO cookie-files"
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
    patch -Np0 -i $W/01_all_fortune_all-fix.patch
    cp -p Makefile Makefile.orig
    sed -i -e '/^FORTDIR=/s@games@bin@g' -e '/^COOKIEDIR=/s@/games@@g' \
	-e '/^LOCALDIR=/s@/games@@g' -e '/^BINDIR=/s@bin@sbin@g' \
	-e '/^FORTMANDIR=/s@man6@man1@g' -e '/^FORTMANEXT=/s@6@1@g' \
	-e '/^REGEXDEFS=/s@BSD@POSIX@g' -e 's@$(FORTDIR)@$(DESTDIR)&@g' \
	-e 's@$(BINDIR)@$(DESTDIR)&@g' -e 's@$(FORTMANDIR)@$(DESTDIR)&@g' \
	-e 's@$(BINMANDIR)@$(DESTDIR)&@g' Makefile
    cat <<- "EOF" | patch Makefile
	180,181c180,181
	< 	cd datfiles && $(MAKE) COOKIEDIR=$(COOKIEDIR) \
	< 		    OCOOKIEDIR=$(OCOOKIEDIR) WCOOKIEDIR=$(WCOOKIEDIR) \
	---
	> 	cd datfiles && $(MAKE) COOKIEDIR=$(DESTDIR)$(COOKIEDIR) \
	> 		    OCOOKIEDIR=$(DESTDIR)$(OCOOKIEDIR) WCOOKIEDIR=$(DESTDIR)$(WCOOKIEDIR) \
	EOF
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
	make fortune/fortune.man
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
