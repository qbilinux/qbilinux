#!/bin/sh

######################################################################
pkgbase=alsa_lib
vers=1.1.6
url="ftp://ftp.alsa-project.org/pub/lib/alsa-lib-${vers}.tar.bz2"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=alsa-lib-$vers
OPT_CONFIG=""
DOCS="INSTALL ChangeLog NOTES TODO COPYING MEMORY-LEAK"
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
	make doc
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    install -d $docdir/alsa-lib
    cp -r doc/doxygen/html $docdir/alsa-lib
}

do_package() {
    mv $docdir/alsa-lib/html $docdir/$src
    mv $docdir/$src/{html,{INSTALL,ChangeLog,NOTES,TODO,COPYING}.gz} $C
    mv $docdir/$src/{MEMORY-LEAK,$myname}.gz $C
    mv $C/{html,{INSTALL,ChangeLog,NOTES,TODO,COPYING}.gz} $docdir/$src
    mv $C/{MEMORY-LEAK,$myname}.gz $docdir/$src

    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
