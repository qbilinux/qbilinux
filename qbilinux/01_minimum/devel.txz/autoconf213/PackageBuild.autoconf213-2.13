#!/bin/sh

######################################################################
pkgbase=autoconf213
vers=2.13
url="http://ftp.gnu.org/gnu/autoconf/autoconf-${vers}.tar.gz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=autoconf-$vers
patchfiles=""
OPT_CONFIG="--program-suffix=-2.13"
DOCS="ChangeLog AUTHORS COPYING ChangeLog.0 ChangeLog.1 INSTALL NEWS
    README TODO"
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
    cp -p Makefile.in{,.orig}
    sed -i -e 's@$(bindir)@$(DESTDIR)&@g' -e 's@$(infodir)@$(DESTDIR)&@g' \
	-e 's@ \($(acdatadir)\)@ $(DESTDIR)\1@g' Makefile.in
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    mv $P/usr/share/info/{autoconf,standards}.info $C
    mv $C/autoconf.info $P/usr/share/info/autoconf-$vers.info
    mv $C/standards.info $P/usr/share/info/standards-$vers.info
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
