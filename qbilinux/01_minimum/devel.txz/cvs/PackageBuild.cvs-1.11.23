#!/bin/sh

######################################################################
pkgbase=cvs
vers=1.11.23
url="http://ftp.gnu.org/non-gnu/cvs/source/stable/${vers}/cvs-${vers}.tar.bz2"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=T3
src=$pkgbase-$vers
patchfiles=""
OPT_CONFIG=""
DOCS="README AUTHORS COPYING COPYING.LIB ChangeLog INSTALL NEWS TODO
    BUGS ChangeLog.zoo DEVEL-CVS FAQ HACKING MINOR-BUGS PROJECTS
    README.VMS TESTS "
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/plamo-nora/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
    sed -i 's/getline /get_line /' lib/getline.{c,h}
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
}

do_package() {
    mkdir $docdir/$src
    cp -a $S/examples $docdir/$src
    rm $docdir/$src/examples/Makefile
    chmod -R o+r $docdir/$src/examples
    chown -R root.root $docdir/$src/examples
    mv $docdir/$src/{examples,$myname.gz} $C
    mv $C/{examples,$myname.gz} $docdir/$src

    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/plamo-nora/PackageBuild.func
