#!/bin/sh
##############################################################
pkgbase="google_go_lang"
vers=1.18
url="https://golang.org/dl/go${vers}.src.tar.gz"
commitid=
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=go
OPT_CONFIG='-DPR_SET_CHILD_SUBREAPER=36 -DPR_GET_CHILD_SUBREAPER=37 -DCMAKE_BUILD_TYPE=Release'
DOCS='AUTHORS CONTRIBUTING.md CONTRIBUTORS LICENSE PATENTS README.md SECURITY.md VERSION'
patchfiles=''
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################


source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}


do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
}

do_build() {
    cd ${B[$1]}
    export LDFLAGS='-Wl,--as-needed'

    unset GOBIN GOPATH GOOS GOARCH
    unset BASH_ENV
    export GOROOT_BOOTSTRAP="/usr"
    export GOROOT="$(pwd)"
    export GOROOT_FINAL="/usr/${libdir}/go-${vers}/go"

    cd src
    LC_ALL=C ./make.bash
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    export LDFLAGS='-Wl,--as-needed'

    unset GOBIN GOPATH GOOS GOARCH
    unset BASH_ENV
    export GOROOT_BOOTSTRAP="/usr"
    export GOROOT="$(pwd)"
    export GOROOT_FINAL="/usr/${libdir}/go-${vers}/go"

    cd src
    $GOROOT/bin/go install -buildmode=shared std
    cd ..

    # add extra func
    mkdir -p $P/usr/bin
    mkdir -p $P/usr/${libdir}/go-${vers}/go
    for i in api bin doc lib misc pkg src ; do
	cp -a $i $P/usr/${libdir}/go-${vers}/go
    done
    chown -R root.root $P/usr/${libdir}/go-${vers}/go
    (cd $P/usr/bin; ln -sf /usr/${libdir}/go-${vers}/go/bin/go .)
    (cd $P/usr/bin; ln -sf /usr/${libdir}/go-${vers}/go/bin/gofmt .)
    mkdir -p $P/etc/profile.d
    cat > $P/etc/profile.d/go.csh << EOF
#!/bin/csh
setenv GOROOT ${GOROOT_FINAL}
setenv PATH \${GOROOT}/bin:\${PATH}
EOF
    cat > $P/etc/profile.d/go.sh << EOF
#!/bin/sh
export GOROOT="${GOROOT_FINAL}"
export PATH="\${GOROOT}/bin:\${PATH}"
EOF

    chmod 0755 $P/etc/profile.d/go.csh
    chmod 0755 $P/etc/profile.d/go.sh
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
