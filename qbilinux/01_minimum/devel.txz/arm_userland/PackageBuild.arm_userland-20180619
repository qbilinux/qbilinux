#!/bin/sh
##############################################################
pkgbase=arm_userland
vers=20180619
url='https://github.com/raspberrypi/userland/archive/2448644657e5fbfd82299416d218396ee1115ece.zip'
commitid=
apply_arch="armv7l aarch64"
arch=`uname -m`
build=1
src=userland-2448644657e5fbfd82299416d218396ee1115ece
OPT_CONFIG=''
DOCS='README.md'
patchfiles=''
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -f $S/CMakeLists.txt ]; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	cmake -DVMCS_INSTALL_PREFIX:PATH=/opt/vc -DLIB_INSTALL_DIR:PATH=/opt/vc/${libdir} -DLIB_SUFFIX=$suffix ${OPT_CONFIG} $S
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    mkdir -p $docdir/$src
    mv $P/usr/src $docdir/$src
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
