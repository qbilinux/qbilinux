#!/bin/sh

######################################################################
url="http://jaist.dl.sourceforge.net/sourceforge/pmidi/pmidi-1.6.0.tar.gz
    https://qbilinux.org/pub/source/pmidi-1.6.0-portfix.patch.gz
    ftp://ftp.suse.com/pub/people/tiwai/aseqview/aseqview-0.2.8.tar.gz
    http://ftp.suse.com/pub/people/tiwai/vkeybd/vkeybd-0.1.17.tar.gz
    https://qbilinux.org/pub/source/vkeybd-0.1.17-awe_voice_h.patch.gz
    http://pkl.net/~node/software/alsa-patch-bay/alsa-patch-bay-1.0.0.tar.gz
    https://qbilinux.org/pub/source/alsa-patch-bay-1.0.0-not_declared.patch.gz"
pkgbase=alsa_apps
vers=1.1
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=3
src[0]=pmidi-1.6.0
src[1]=aseqview-0.2.8
src[2]=vkeybd
src[3]=alsa-patch-bay-1.0.0
OPT_CONFIG[0]=""
OPT_CONFIG[1]=""
OPT_CONFIG[2]=""
OPT_CONFIG[3]=""
DOCS[0]="README AUTHORS COPYING ChangeLog INSTALL NEWS"
DOCS[1]="NEWS README AUTHORS INSTALL ChangeLog COPYING"
DOCS[2]="README ChangeLog"
DOCS[3]="NEWS TODO README THANKS AUTHORS INSTALL ChangeLog COPYING"
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    case $1 in
	0) gunzip -c $W/pmidi-1.6.0-portfix.patch.gz | patch -Np1 -i - ;;
	2)
	    gunzip -c $W/vkeybd-0.1.17-awe_voice_h.patch.gz | patch -Np1 -i -
	    cp -p Makefile Makefile.orig
	    sed 's@/usr/local@/usr@g' Makefile.orig \
		| sed '/TCL_VERSION =/s@8\.4@8.6@g' > Makefile
	    ;;
	3)
	    gunzip -c $W/alsa-patch-bay-1.0.0-not_declared.patch.gz | patch -Np1 -i -
	    cp -p Makefile.in Makefile.in.orig
	    sed 's@$(bindir)/alsa@alsa@g' Makefile.in.orig \
		| sed 's@$(bindir)/jack@$(DESTDIR)$(bindir)/jack@g' > Makefile.in
	    ;;
    esac
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    if [ -x ./configure ] ; then
	if [ $1 -eq 3 ] ; then
            ./configure --prefix=/usr --libdir='${prefix}'/${libdir} \
			--infodir='${prefix}'/share/info \
			--mandir='${prefix}'/share/man --with-fltk-config=${B[$1]}/fltk/bin ${OPT_CONFIG[$i]} \
			CXXFLAGS="-g -O2 -fPIC -Wno-narrowing" CFLAGS="-g -O2 -fPIC -Wno-narrowing"
	else
            ./configure --prefix=/usr --libdir='${prefix}'/${libdir} \
			--infodir='${prefix}'/share/info \
			--mandir='${prefix}'/share/man ${OPT_CONFIG[$i]}
	fi
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi
}

do_package() {
    cp ${B[2]}/vkeybd.man $mandir/man1/vkeybd.1
    cp -p $P/usr/bin/vkeybd $P/usr/share/vkeybd
    cat <<- "EOF" > $P/usr/bin/vkeybd
	#!/bin/sh
	XMODIFIERS="@im=none"
	/usr/share/vkeybd/vkeybd "$@"
	EOF
    cp -p $P/usr/share/vkeybd/vkeybdmap $P/usr/share/vkeybd/vkeybdmap.orig
    uudecode <<- "EOF" | gunzip > $P/usr/share/vkeybd/vkeybdmap
	begin-base64 644 /dev/stdout
	H4sIAAAAAAAAA02PXXKDIBRG313Ft4RwMT9dDhKqNCBWsG2Syd5r+XSmT4eBO+ce+pA6E3Bz92im
	JruyHfFsgOcDh9cfM1TlD6TyCl1p0VZ+4VjZ41TZ4Vw54FI54q3yA4rCCEWjTTEaKGoDFL2Tm326
	QtGeXfQ2hTRCcU0OJg9Q2y5jb9sFl3bzeuPK7PuhQDHgc5/+3qf0/uSgGNdCGDdDGHeEMKxAGHaH
	sOkMYcsCofkCodlDaE4Qmg/QNE/QNEc/LhmadlOgqTfZem/9bJcI3f7/TXDv69S68tX8AoAZ4buz
	AQAA
	====
	EOF
    mv $P/usr/share/vkeybd/vkeybd{,.tcl,.list,map{.orig,-german,}} $C
    mv $C/vkeybd{,.tcl,.list,map{.orig,-german,}} $P/usr/share/vkeybd
    mv $docdir/${src[2]} $C/${src[2]}-0.1.17 ; mv $docdir/${src[3]} $C
    mv $C/${src[2]}-0.1.17 $docdir ; mv $C/${src[3]} $docdir

    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
