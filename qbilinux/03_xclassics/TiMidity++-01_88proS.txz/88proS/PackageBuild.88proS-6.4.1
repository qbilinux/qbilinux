#!/bin/sh

######################################################################
url="http://plamo.linet.gr.jp/~tamuki/src/88pros.zip
    http://plamo.linet.gr.jp/~tamuki/src/guspat-20000706-required.tar.gz
    http://plamo.linet.gr.jp/~tamuki/src/guspat-20000706-optional.tar.gz"
pkgbase=88proS
vers=6.4.1
apply_arch="noarch"
arch=noarch
build=T2
src=$pkgbase-$vers
OPT_CONFIG=""
DOCS="ReadMe-j.txt Drumset-j.txt VupHistory-j.txt"
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func

if [ $opt_download -eq 1 ] ; then
  for i in $url ; do
    if [ ! -f ${i##*/} ] ; then cp ${SRC_DIR}/${i##*/} . ; fi
    if [ ! -f ${i##*/} ] ; then wget ${SRC_URL}/${i##*/} ; fi
    if [ ! -f ${i##*/} ] ; then wget $i ; fi
    if [ ! -f ${SRC_DIR}/${i##*/} ] ; then cp -p ${i##*/} ${SRC_DIR} ; fi
  done
  for i in $url ; do
    case ${i##*/} in
    88pros.zip) (
      mkdir $S ; cd $S
      unzip -o $W/${i##*/}
      touch -t 200302040900 $S
      ) ;;
    guspat-20000706-required.tar.gz)
      tar xvpzf ${i##*/}
      mv timidity timidity~ ; mv timidity~ timidity~~ ; mv timidity~~ timidity~
      ;;
    guspat-20000706-optional.tar.gz)
      tar xvpzf ${i##*/}
      ;;
    esac
  done
fi
if [ $opt_config -eq 1 ] ; then
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    if [ -d ${B[$i]} ] ; then rm -rf ${B[$i]} ; fi ; cp -a ${S[$i]} ${B[$i]}
  done
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    cd ${B[$i]}
    if [ -f Makefile ] ; then
      make clean
    fi
    if [ -f config.log ] ; then
      rm -rf config.cache config.log
    fi
    if [ -x configure ] ; then
      ./configure --prefix=/usr --libdir='${prefix}'/lib64 \
          --infodir='${prefix}'/share/info \
          --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]}
    fi
  done
fi
if [ $opt_build -eq 1 ] ; then
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    cd ${B[$i]}
    if [ -f Makefile ] ; then
      make
    fi
  done
fi
if [ $opt_package -eq 1 ] ; then
  if [ `id -u` -ne 0 ] ; then
    read -p "Do you want to package as root? [y/N] " ans
    if [ "x$ans" == "xY" -o "x$ans" == "xy" ] ; then
      cd $W ; /bin/su -c "$0 package" ; exit
    fi
  fi
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  if [ -d $C ] ; then rm -rf $C ; fi ; mkdir -p $C
  touch $W/i.st ; sleep 1
  for i in `seq 0 $((${#B[@]} - 1))` ; do
    cd ${B[$i]}
    if [ -f Makefile ] ; then
      make install DESTDIR=$P
    fi
  done
  shrtmdydir=$P/usr/share/timidity
  install -d $shrtmdydir
  sed 's@/usr/local@/usr@g' $W/timidity~/timidity.cfg \
      > $shrtmdydir/timidity.cfg.iz
  touch -t 200104260900 $shrtmdydir/timidity.cfg.iz
  for i in {88pro{t,d},altassign8p,tune,adsrmod,timidity}.cfg ; do
    install2 $i $shrtmdydir/$i ; touch -r $i $shrtmdydir/$i
  done
  cp -p $shrtmdydir/timidity.cfg $shrtmdydir/timidity.cfg.orig2
  sed 's@#dir /usr/local@dir /usr@g' $shrtmdydir/timidity.cfg.orig2 \
      | sed 's@dir :inst@#dir :inst@g' > $shrtmdydir/timidity.cfg
  touch -t 200302040900 $shrtmdydir/timidity.cfg
  mv $shrtmdydir/{timidity.cfg.orig2,timidity.cfg} $C
  mv $C/{timidity.cfg.orig2,timidity.cfg} $shrtmdydir
  touch $W/i.et
  cd $W
  find $P ! -type l -newer i.st ! -newer i.et \
      -exec touch -t `date '+%m%d0000'` {} \;
  compress
  install -d $P/guspat/usr/share
  cp -a timidity $P/guspat/usr/share
  chown -R root.root $P/guspat/usr/share/timidity
  for i in `seq 0 $((${#DOCS[@]} - 1))` ; do
    for j in ${DOCS[$i]} ; do
      for k in ${S[$i]}/$j ; do
        install2 $k $docdir/${src[$i]}/${k#${S[$i]}/}
        touch -r $k $docdir/${src[$i]}/${k#${S[$i]}/}
        gzip_one $docdir/${src[$i]}/${k#${S[$i]}/}
      done
    done
    if [ $i -eq 0 ] ; then
      install $myname $docdir/$src
      touch -t `date '+%m%d0000'` $docdir/$src/$myname
      gzip_one $docdir/$src/$myname
    else
      ln $docdir/$src/$myname.gz $docdir/${src[$i]}
    fi
    ( cd $docdir ; find ${src[$i]} -type d -exec touch -r $W/{} {} \; )
  done
  convert
  tar cvpf $pkg.tar -C $P usr/share/timidity/timidity.cfg.iz
  tar rvpf $pkg.tar -C $P/guspat usr/share/timidity
  tar rvpf $pkg.tar -C $P `cd $P ; find usr/share/timidity | tail -n+3`
  tar rvpf $pkg.tar -C $P usr/share/doc/$src
  touch -t `date '+%m%d0000'` $pkg.tar ; xz $pkg.tar ; touch $pkg.tar.xz
  mv $pkg.tar.xz $pkg.txz
fi
