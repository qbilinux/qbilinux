#!/bin/sh

######################################################################
url="ftp://ftp.afterstep.org/archives/Classic/AfterStepClassic-1.1beta2.tar.gz
    http://www.tigr.net/afterstep/download/ascpu/ascpu-1.11.tar.gz
    http://www.tigr.net/afterstep/download/asmem/asmem-1.12.tar.gz
    http://www.tigr.net/afterstep/download/astime/astime-2.8.tar.gz
    http://plamo.linet.gr.jp/~tamuki/src/plamo_stepicons.tar.bz2"
pkgbase=AfterStepClassic
vers=1.1beta2
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src[0]=$pkgbase-$vers
src[1]=ascpu-1.11
src[2]=asmem-1.12
src[3]=astime-2.8
OPT_CONFIG[0]=""
OPT_CONFIG[1]=""
OPT_CONFIG[2]=""
OPT_CONFIG[3]=""
DOCS[0]="CREDITS ChangeLog INSTALL FAQ README README.8bit module-interface.txt"
DOCS[1]="TODO LICENSE README INSTALL CHANGES"
DOCS[2]="LICENSE README INSTALL CHANGES"
DOCS[3]="README LICENSE INSTALL CHANGES"
patchfiles="AfterStepClassic-1.1beta2-linux.patch AfterStepClassic-1.1beta2-fontset.patch AfterStepClassic-1.1beta2-hide.patch AfterStepClassic-1.1beta2-iconanim.patch AfterStepClassic-1.1beta2-min_height.patch AfterStepClassic-1.1beta2-asclock.patch"
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    case $1 in
	0)
	    patch -Np1 -i $W/AfterStepClassic-1.1beta2-linux.patch
	    patch -Np1 -i $W/AfterStepClassic-1.1beta2-fontset.patch
	    patch -Np0 -i $W/AfterStepClassic-1.1beta2-hide.patch
	    patch -Np0 -i $W/AfterStepClassic-1.1beta2-iconanim.patch
	    patch -Np0 -i $W/AfterStepClassic-1.1beta2-min_height.patch
	    patch -Np1 -i $W/AfterStepClassic-1.1beta2-asclock.patch
	    cp -p configure.h configure.h.orig
	    sed "/^#define/s@lib@$libdir@g" configure.h.orig \
		| sed '/^#define/s@bin/X11@bin@g' > configure.h
	    cp -p sample.steprc sample.steprc.orig
	    sed '/^ModulePath/s@:.*@@g' sample.steprc.orig \
		| sed "/^ModulePath/s@lib@$libdir@g" \
		| sed '/^PixmapPath/s@$@:/usr/share/afterstep/icons@g' \
		| sed '/^ModulePath/!s@lib/X11@share@g' > sample.steprc
	    ;;
	*)
	    cp -p autoconf/Makefile.common.in{,.orig}
	    sed '/$(INSTALL/s@[[:graph:]]*$@$(DESTDIR)&@g' \
		autoconf/Makefile.common.in.orig > autoconf/Makefile.common.in
	    ;;
    esac
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    if [ -x ./configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    case $1 in
	0)
	    xmkmf -a
	    for i in afterstep modules/{Audio,Auto,Wharf,Banner,Pager,asclock,Animate} ; do
		cp -p $i/Makefile $i/Makefile.orig
		sed '/MANPATH =/s@man@share/man@g' $i/Makefile.orig > $i/Makefile
	    done
	    ;;
    esac
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	case $i in
	    0) make install install.man DESTDIR=$P ;;
	    *) make install DESTDIR=$P ;;
	esac
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi
}

do_package() {
    cd ${B[0]}
    install -d $P/usr/share/afterstep/{icons,backgrounds,sounds}
    find icons -maxdepth 1 -name "*.xpm" \
	 -exec install -m 644 {} $P/usr/share/afterstep/icons \;
    find backgrounds -name "*.jpg" \
	 -exec install -m 644 {} $P/usr/share/afterstep/backgrounds \;
    find sounds -name "*.au" \
	 -exec install -m 644 {} $P/usr/share/afterstep/sounds \;
    cd $W/source
    # cp -p afterstep/plamo_banner $P/usr/$libdir/X11/afterstep
    # chown -R root.root $P/usr/$libdir/X11/afterstep/plamo_banner
    # if [ $arch == x86_64 ] ; then
    # 	cp -a lib $P
    # 	cp -a usr/lib $P/usr
    # 	chown -R root.root {$P,$P/usr}/lib
    # 	ln -s libc-2.20.so $P/lib/libc.so.6
    # 	ln -s libdl-2.20.so $P/lib/libdl.so.2
    # 	ln -s ld-2.20.so $P/lib/ld-linux.so.2
    # 	ln -s libX11.so.6.3.0 $P/usr/lib/libX11.so.6
    # 	ln -s libxcb.so.1.1.0 $P/usr/lib/libxcb.so.1
    # 	ln -s libXau.so.6.0.0 $P/usr/lib/libXau.so.6
    # 	ln -s libXdmcp.so.6.0.0 $P/usr/lib/libXdmcp.so.6
    # fi
    cp -a pixmaps $P/usr/share
    chown -R root.root $P/usr/share/pixmaps
    cp -a backgrounds $P/usr/share/pixmaps
    chown -R root.root $P/usr/share/pixmaps/backgrounds
    touch -r pixmaps $P/usr/share/pixmaps

    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
