#!/bin/sh

######################################################################
url="http://ftp.gnome.org/pub/gnome/sources/glib/1.2/glib-1.2.10.tar.gz
    http://plamo.linet.gr.jp/~tamuki/src/glib-1.2.10-29.fc9.src.tar.gz
    http://www.linuxfromscratch.org/patches/downloads/glib/glib-1.2.10-config_update-1.patch"
pkgbase=glib_1
vers=1.2.10
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=T2
src=glib-$vers
OPT_CONFIG=""
patchfiles='patch-aa'
compress=txz
DOCS="README AUTHORS COPYING ChangeLog INSTALL NEWS README.win32"
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
  patch -Np1 -i $W/glib-1.2.10-29.fc9.src/glib-1.2.10-isowarning.patch
  patch -Np1 -i $W/glib-1.2.10-29.fc9.src/glib-1.2.10-gcc34.patch
  patch -Np1 -i $W/glib-1.2.10-29.fc9.src/glib-1.2.10-underquoted.patch
  patch -Np1 -i $W/glib-1.2.10-29.fc9.src/glib-1.2.10-no_undefined.patch
  patch -Np1 -i $W/glib-1.2.10-29.fc9.src/glib-1.2.10-multilib.patch
  patch -Np1 -i $W/glib-1.2.10-config_update-1.patch
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
  cp -p /usr/share/libtool/config/config.{guess,sub} .
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
