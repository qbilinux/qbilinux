#!/bin/sh

######################################################################
pkgbase=FreeWnn
vers=1.1.1_a023
url="https://ja.osdn.net/projects/freewnn/downloads/63271/FreeWnn-1.1.1-a023.tar.bz2"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=T3
src=$pkgbase-1.1.1-a023
OPT_CONFIG=""
DOCS="CONTRIBUTORS COPYING.LIB COPYRIGHT COPYRIGHT-j ChangeLog ChangeLog.en
    ChangeLog.old INSTALL INSTALL.en
    `echo olddoc/{00README,README{,.sun},Wnn-{FAQ,READ.ME{,.j}}}`"
patchfiles='egrep-a.patch'
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
    cp -f /usr/src/qbilinux/{config.guess,config.sub} .
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    if [ $arch = "x86_64" -o  $arch = "aarch64" ]; then
	cp -p makerule.mk.in makerule.mk.in.orig
	sed '/^ *WNNWNNDIR =/s@lib@lib64@g' makerule.mk.in.orig > makerule.mk.in
    fi
    if [ -x ./configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make -j1
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    make install.man DESTDIR=$P
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    chown wnn $P/usr/${libdir}/wnn/ja_JP/dic/{pubdic,src,wnncons}
    chown wnn $P/usr/${libdir}/wnn/{zh_{CN,TW},ko_KR}/dic/sys
    install -d $P/etc/rc.d/init.d
    cat <<- "EOF" > $P/etc/rc.d/init.d/wnn.r
	#!/bin/sh
	
	SERVER=/usr/bin/Wnn4/jserver
	KILLER=/usr/bin/Wnn4/wnnkill
	LOCKD=/var/lock/subsys
	
	[ -f $SERVER ] || exit 0
	case "$1" in
	start)
	  echo "Starting Wnn server:"
	  $SERVER
	  [ -d $LOCKD ] && touch $LOCKD/wnn
	  ;;
	stop)
	  echo "Shutting down Wnn server:"
	  $KILLER
	  [ -d $LOCKD ] && rm -f $LOCKD/wnn
	  ;;
	install)
	  echo wnn network
	  ;;
	*)
	  echo "Usage: wnn {start|stop}"
	  exit 1
	  ;;
	esac
	exit 0
	EOF
    chmod 755 $P/etc/rc.d/init.d/wnn.r
    install -d $P/install
    if [ $arch = "x86_64" -o $arch = "aarch64" ]; then
	cat <<- EOF >> $P/install/doinst.sh
	#%% begin initialize $pkg
	( cd /usr/lib64/wnn/ja_JP/dic/pubdic ; /usr/bin/Wnn4/wnntouch * )
	( cd /usr/lib64/wnn/ja_JP/dic/wnncons ; /usr/bin/Wnn4/wnntouch * )
	( cd /usr/lib64/wnn/ja_JP/dic/gerodic ; /usr/bin/Wnn4/wnntouch * )
	#%% end
	EOF
    else
	cat <<- EOF >> $P/install/doinst.sh
	#%% begin initialize $pkg
	( cd /usr/lib/wnn/ja_JP/dic/pubdic ; /usr/bin/Wnn4/wnntouch * )
	( cd /usr/lib/wnn/ja_JP/dic/wnncons ; /usr/bin/Wnn4/wnntouch * )
	( cd /usr/lib/wnn/ja_JP/dic/gerodic ; /usr/bin/Wnn4/wnntouch * )
	#%% end
	EOF
    fi
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
