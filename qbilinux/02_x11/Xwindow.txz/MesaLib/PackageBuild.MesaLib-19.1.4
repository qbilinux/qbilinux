#!/bin/sh
##############################################################
pkgbase=MesaLib
vers=19.1.4
url="ftp://ftp.freedesktop.org/pub/mesa/mesa-${vers}.tar.xz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=2
src=mesa-${vers}
case $arch in
    armv7l | aarch64)
	OPT_CONFIG='-Dshared-llvm=true
	 -Dgles1=true -Dgles2=true 
         -Dosmesa=classic -Dgallium-xa=auto
         -Dgallium-drivers=vc4
	 -Ddri-drivers=swrast
      	 -Dbuildtype=release
         ';;
    *)
	OPT_CONFIG='-Dshared-llvm=true
         -Dgles1=true -Dgles2=true 
         -Dosmesa=gallium -Dgallium-xa=true -Dgbm=true 
      	 -Dbuildtype=release
         ';;
esac
DOCS='docs/*'

# http://www.linuxfromscratch.org/patches/blfs/svn/MesaLib-9.1.6-add_xdemos-1.patch
patchfiles='mesa-19.0.4-add_xdemos-1.patch'

compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x /usr/bin/clang -a -x /usr/bin/clang++ ]; then
	export CC="clang"
	export CXX='clang++'
    else
        export LDFLAGS='-Wl,--as-needed' 
	export CC="gcc"
	export CXX="g++ -std=c++11"
    fi
    if [ -f ${S[$1]}/meson.build ] ; then
      export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
      export LDFLAGS='-Wl,--as-needed' 
      meson --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir=/usr/share/man ${OPT_CONFIG[$1]} ${S[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    ninja
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    DESTDIR=$P ninja install
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    mkdir -p $P/usr/bin
    for i in glxgears glxinfo ; do
	install xdemos/$i $P/usr/bin
    done
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
