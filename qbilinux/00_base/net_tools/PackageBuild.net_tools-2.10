#!/bin/sh

######################################################################
pkgbase=net_tools
vers=2.10
url="http://downloads.sourceforge.net/net-tools/net-tools-${vers}.tar.xz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=2
src=net-tools-$vers
OPT_CONFIG=""
DOCS="ABOUT-NLS COPYING INSTALLING README README.ipv6 TODO"
patchfiles=''
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    yes "" | make config
    cp -p config.h{,.orig}
    cat <<- "EOF" | patch config.h
	22c22
	< #define I18N 0
	---
	> #define I18N 1
	EOF
    cp -p config.make{,.orig}
    cat <<- "EOF" | patch config.make
	1c1
	< # I18N=0
	---
	> I18N=1
	EOF
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make -j1
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
    cc -O2 -o ipmask $W/ipmask.c
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install BASEDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    install -d $P/usr/bin $P/usr/share/man/man8/
    install -s ipmask $P/usr/bin
    cat $W/ipmask.8 | gzip -9c > $P/usr/share/man/man8/ipmask.8.gz
    mv $W/bin/ifconfig $W/sbin/
    mv $W/bin/route $W/sbin/
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
