#!/bin/sh

######################################################################
pkgbase=glibc
vers=2.28
url="http://ftp.gnu.org/gnu/glibc/glibc-${vers}.tar.xz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=$pkgbase-$vers
OPT_CONFIG="--enable-kernel=3.2 --enable-obsolete-rpc --enable-obsolete-nsl"
DOCS="BUGS CONFORMANCE COPYING* ChangeLog* INSTALL LICENSES NEWS
    PROJECTS README"
compress=txz
patchfiles='glibc-2.26-fhs-1.patch'
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}

    case $arch in
    i686)
      cat <<- "EOF" > configparms ;;
	CFLAGS += -march=i486 -mtune=native -O3 -pipe
	EOF
    x86_64)
      cat <<- "EOF" > configparms ;;
	slibdir=/lib64
	CFLAGS += -march=x86-64 -mtune=generic -O3 -pipe
	EOF
    armv7l)
      cat <<- "EOF" > configparms ;;
	CFLAGS += -march=armv7-a -mtune=native -O3 -pipe
	EOF
    aarch64)
      cat <<- "EOF" > configparms ;;
	slibdir=/lib64
	EOF
    esac

    if [ -x ${S[$1]}/configure ] ; then
	${S[$1]}/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var \
		 --libdir='${exec_prefix}'/$libdir --infodir='${prefix}'/share/info \
		 --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]} \
		 --libexecdir=/usr/$libdir/glibc \
		 --build=$arch-pc-linux --target=$arch-pc-linux
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
	ln -s $P/usr/share/locale $P/usr/$libdir
	make localedata/install-locales DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    find $P/usr/$libdir -maxdepth 1 ! -type d -exec rm {} \;
    mv $P/usr/$libdir/{gconv,glibc,audit} $C
    mv $C/{gconv,glibc,audit} $P/usr/$libdir
    ln -sf /usr/share/locale $P/usr/$libdir
    ln -s ja_JP.eucJP $P/usr/share/locale/ja_JP
    mv $P/usr/share/locale/{ja,ja_JP.eucJP}
    ln -s ja_JP.eucJP $P/usr/share/locale/ja
    gunzip $P/usr/share/i18n/charmaps/EUC-JP.gz
    localedef -f $P/usr/share/i18n/charmaps/EUC-JP \
	      -i $P/usr/share/i18n/locales/ja_JP \
	      $P/usr/share/locale/ja_JP.eucJP
    gzip $P/usr/share/i18n/charmaps/EUC-JP
    install -d $P/usr/share/locale/ja_JP.UTF-8
    gunzip $P/usr/share/i18n/charmaps/UTF-8.gz
    localedef -f $P/usr/share/i18n/charmaps/UTF-8 \
	      -i $P/usr/share/i18n/locales/ja_JP \
	      $P/usr/share/locale/ja_JP.UTF-8
    gzip $P/usr/share/i18n/charmaps/UTF-8
    cat <<- EOF > $P/etc/ld.so.conf.new
	/usr/local/$libdir
	/opt/kde/$libdir
	/usr/$libdir/sasl2
	/usr/$libdir/pstoedit
	/usr/heimdal/$libdir
	/usr/$libdir/xulrunner
	/opt/mariadb/$libdir
	/opt/mysql/$libdir
	/opt/pgsql/$libdir
	EOF
    cat <<- "EOF" > $P/etc/nsswitch.conf.new
	# /etc/nsswitch.conf
	#
	# Name Service Switch configuration file.
	#
	
	passwd:		files db nis
	shadow:		files
	group:		files db nis
	
	hosts:		files nisplus nis dns
	networks:	files nisplus
	
	ethers:		files db nisplus
	protocols:	files db nisplus
	rpc:		files db nisplus
	services:	files db nisplus
	autofs:		files
	EOF
    #strip_libdir $P/usr/$libdir/gconv
    #strip_bindir $P/usr/$libdir/glibc/getconf
    #strip_libdir $P/usr/$libdir/audit
    install -d $P/install
    cat <<- EOF >> $P/install/doinst.sh
	#%% begin initialize $pkg
	EOF
    cat <<- "EOF" >> $P/install/doinst.sh
	glibc_config() {
	  mv /etc/$1.conf.new /tmp
	  if [ -f /etc/$1.conf ] ; then
	    mv /tmp/$1.conf.new /etc/$1.conf.dist
	  else
	    mv /tmp/$1.conf.new /etc/$1.conf
	  fi
	}
	
	echo "glibc パッケージの初期化中"
	# 既存の ld.so.conf が無ければ，新しく ld.so.conf.new を
	# ld.so.conf とするが，あればそのままにしておく．
	glibc_config ld.so
	ldconfig
	
	# 既存の nsswitch.conf が無ければ，新しく nsswitch.conf.new を
	# nsswitch.conf とするが，あればそのままにしておく．
	glibc_config nsswitch
	
	echo "glibc タイムゾーン設定中"
	# 既存の localtime があればそのまま，無ければ JST で作る．
	if [ ! -f /etc/localtime ] ; then
	  TIMEZONE="Japan"
	  ln -sf posix/$TIMEZONE /usr/share/zoneinfo/localtime
	  cp -p /usr/share/zoneinfo/localtime /etc/localtime
	fi
	
	echo "glibc パッケージの初期化完了"
	#%% end
	EOF
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
