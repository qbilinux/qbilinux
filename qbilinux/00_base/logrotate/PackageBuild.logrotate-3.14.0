#!/bin/sh

######################################################################
pkgbase=logrotate
vers=3.14.0
url="https://github.com/logrotate/logrotate/releases/download/${vers}/logrotate-${vers}.tar.xz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=$pkgbase-$vers
OPT_CONFIG=""
DOCS="COPYING ChangeLog.md INSTALL README.md"
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    for mk in `find . -name "[Mm]akefile" ` ; do
	sed -i -e 's|GCONFTOOL = /usr/bin/gconftool-2|GCONFTOOL = echo|' $mk
    done
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install MANDIR=/usr/share/man DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
  install -d $P/etc/logrotate.d
  cat <<- "EOF" > $P/etc/logrotate.conf.new
	# /etc/logrotate.conf
	#
	# logrotate is designed to ease administration of systems that generate large
	# numbers of log files.  It allows automatic rotation, compression, removal, and
	# mailing of log files.  Each log file may be handled daily, weekly, monthly, or
	# when it grows too large.
	#
	# logrotate is normally run daily from root's crontab.
	#
	# For more details, see "man logrotate".
	
	# rotate log files weekly:
	weekly
	
	# keep 4 weeks worth of backlogs:
	rotate 4
	
	# create new (empty) log files after rotating old ones:
	create
	
	# uncomment this if you want your log files compressed:
	compress
	
	# some packages install log rotation information in this directory:
	include /etc/logrotate.d
	
	# Rotate /var/log/wtmp:
	/var/log/wtmp {
	    monthly
	    create 0664 root utmp
	    rotate 1
	}
	
	# Note that /var/log/lastlog is not rotated.  This is intentional, and it should
	# not be.  The lastlog file is a database, and is also a sparse file that takes
	# up much less space on the drive than it appears.
	
	# system-specific logs may be also be configured below:
	EOF
  install -d $P/install
  cat <<- "EOF" > $P/install/doinst.sh
	mv etc/logrotate.conf.new /tmp
	if [ -f etc/logrotate.conf ] ; then
	  mv /tmp/logrotate.conf.new etc/logrotate.conf.dist
	else
	  mv /tmp/logrotate.conf.new etc/logrotate.conf
	fi
	EOF
}

do_package() {
    cp -a $S/examples $docdir/$src
    chown -R root.root $docdir/$src/examples
    mv $docdir/$src/{examples,{COPYING,$myname}.gz} $C
    mv $C/{examples,{COPYING,$myname}.gz} $docdir/$src

    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
