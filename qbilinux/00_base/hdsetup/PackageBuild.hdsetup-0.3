#!/bin/sh

######################################################################
pkgbase=hdsetup
vers=0.3
url="https://www.busybox.net/downloads/busybox-1.24.1.tar.bz2
    ftp://ftp.invisible-island.net/dialog/dialog-1.3-20180621.tgz
    http://ftp.gnu.org/gnu/coreutils/coreutils-8.30.tar.xz
    http://ftp.gnu.org/gnu/gzip/gzip-1.9.tar.gz
    http://www.bzip.org/1.0.6/bzip2-1.0.6.tar.gz
    http://tukaani.org/xz/xz-5.2.3.tar.xz
    http://ftp.gnu.org/gnu/tar/tar-1.29.tar.gz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=T1
src[0]=busybox-1.24.1
src[1]=dialog-1.3-20180621
src[2]=coreutils-8.30
src[3]=gzip-1.9
src[4]=bzip2-1.0.6
src[5]=xz-5.2.3
src[6]=tar-1.29
patchfiles[0]=""
patchfiles[1]=""
patchfiles[2]=""
patchfiles[3]="gnulib.patch"
patchfiles[4]=""
patchfiles[5]=""
#patchfiles[6]="tar-1.23-tartime.patch.gz tar-1.23-txz.patch.gz tar-1.26-no-gets.patch.gz"
patchfiles[6]=""
OPT_CONFIG[0]=""
OPT_CONFIG[1]="--bindir=/bin --enable-nls --with-ncursesw --enable-widec"
OPT_CONFIG[2]="--bindir=/bin --enable-no-install-program=install,chroot"
OPT_CONFIG[2]+=",hostid,nice,who,users,pinky,uptime,stty,df,stdbuf,[,base64"
OPT_CONFIG[2]+=",base32,basename,cat,chcon,chgrp,chmod,chown,cksum,comm,cp"
OPT_CONFIG[2]+=",csplit,cut,date,dd,dir,dircolors,dirname,du,echo,env,expand"
OPT_CONFIG[2]+=",expr,factor,false,fmt,fold,groups,head,id,join,kill,link,ln"
OPT_CONFIG[2]+=",logname,md5sum,mkdir,mkfifo,mknod,mktemp,mv,nl,nproc,nohup"
OPT_CONFIG[2]+=",numfmt,od,pathchk,pr,printenv,printf,ptx,pwd,readlink"
OPT_CONFIG[2]+=",realpath,rm,rmdir,runcon,seq,sha1sum,sha224sum,sha256sum"
OPT_CONFIG[2]+=",sha384sum,sha512sum,shred,shuf,sleep,sort,split,stat,sum"
OPT_CONFIG[2]+=",sync,tac,tail,tee,test,timeout,touch,tr,true,truncate,tsort"
OPT_CONFIG[2]+=",tty,uname,unexpand,uniq,unlink,vdir,wc,whoami,yes
    --without-gmp"
OPT_CONFIG[3]="--bindir=/bin"
OPT_CONFIG[4]=""
OPT_CONFIG[5]="--bindir=/bin --disable-xzdec --disable-lzmadec
    --disable-lzmainfo --disable-lzma-links --disable-scripts"
OPT_CONFIG[6]="--bindir=/bin"
DOCS[0]="TODO LICENSE README AUTHORS INSTALL TODO_unicode"
DOCS[1]=""
DOCS[2]=""
DOCS[3]=""
DOCS[4]=""
DOCS[5]=""
DOCS[6]=""
#patchfiles=""
conffiles="busybox-1.24.1-config"
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in ${patchfiles[$i]} ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    if [ $1 == 0 ] ; then cp -p $W/busybox-1.24.1-config .config ; fi
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f [Mm]akefile ] ; then
	case $1 in
	    0) make ;;
	    1) make LIBS="-lncursesw -lm -ldl -static" ;;
	    4) make LDFLAGS="-ldl -static" ;;
	    5) make LIBS="-ldl -all-static" ;;
	    6) make LIBS="-lacl -static" ;;
	    *) make LIBS="-ldl -static" ;;
	esac
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f [Mm]akefile ] ; then
	case $1 in
	    0) make install CONFIG_PREFIX=$P ;;
	    3) make install DESTDIR=$P bin_SCRIPTS=zcat ;;
	    4) make install PREFIX=$P ;;
	    *) make install DESTDIR=$P ;;
	esac
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    rm -r $P/{include,lib,man,usr/include,usr/$libdir,usr/libexec}
    rm -r $P/usr/share/{info,locale,man}
    ln -f $P/bin/xz{,cat}
    rm $P/bin/{\[\[,ash,cttyhack,{e,f}grep,hush,test,install,bunzip2}
    rm $P/bin/{bz{ip2recover,{,e,f}grep,more,less,diff,cmp},unxz}
}

do_package() {
    # extra func
    rm -r $P/usr/share/doc
    install -d $P/sbin
    mv $P/bin $P/sbin/installer
    cp -r $W/sbin $P
    install -d $P/usr/lib/setup
    touch $P/usr/lib/setup/qbilinux-$vers
    # make docdir

    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
