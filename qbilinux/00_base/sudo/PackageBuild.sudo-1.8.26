#!/bin/sh

######################################################################
pkgbase=sudo
vers=1.8.26
url="http://www.sudo.ws/sudo/dist/sudo-${vers}.tar.gz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=$pkgbase-$vers
OPT_CONFIG="--with-pam --without-sendmail --with-env-editor
    --with-all-insults --with-hal-insults --with-secure-path"
DOCS="ABOUT-NLS ChangeLog INSTALL* MANIFEST NEWS README*
    `echo doc/{CONTRIBUTORS,HISTORY,LICENSE,TROUBLESHOOTING,UPGRADE}`"
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    for mk in `find . -name "[Mm]akefile" ` ; do
	sed -i -e 's|GCONFTOOL = /usr/bin/gconftool-2|GCONFTOOL = echo|' $mk
    done
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    mv $P/etc/sudoers $C
    mv $C/sudoers $P/etc/sudoers.new
    install -d $P/etc/pam.d
    cat <<- "EOF" > $P/etc/pam.d/sudo
	#%PAM-1.0
	auth		include		plamo-default
	account		include		plamo-default
	password	include		plamo-default
	session		include		plamo-default
	EOF
    install -d $P/install
    cat <<- "EOF" >> $P/install/doinst.sh
	
	mv etc/sudoers.new /tmp
	if [ -f etc/sudoers ] ; then
	  mv /tmp/sudoers.new etc/sudoers.dist
	else
	  mv /tmp/sudoers.new etc/sudoers
	fi
	EOF
}

do_package() {
    mv $docdir/sudo/examples $docdir/$src
    mv $docdir/$src/{examples,$myname.gz} $C
    mv $C/{examples,$myname.gz} $docdir/$src

    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
