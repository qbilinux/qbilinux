#!/bin/sh

######################################################################
pkgbase=openbsd_inetd
vers=0.20080125
url="http://ftp.tku.edu.tw/Linux/LinuxMint/latest/pools/B/pool/main/o/openbsd-inetd/openbsd-inetd_0.20080125.orig.tar.gz
    http://ftp.tku.edu.tw/Linux/LinuxMint/latest/pools/B/pool/main/o/openbsd-inetd/openbsd-inetd_0.20080125-6.diff.gz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=openbsd-inetd-$vers.orig
OPT_CONFIG=""
DOCS="ChangeLog"
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    gunzip -c $W/openbsd-inetd_0.20080125-6.diff.gz | patch -Np1 -i -
    for i in `grep "^[^#]" debian/patches/series` ; do
	patch -Np1 -i debian/patches/$i
    done
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make -f Makefile.debian
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}

    # add extra func
    install -d $P/usr/sbin
    install inetd $P/usr/sbin
    install -d $mandir/man8
    install -m 644 inetd.8 $mandir/man8
    install -d $P/etc
    cat <<- "EOF" > $P/etc/inetd.conf
	# See "man 8 inetd" for more information.
	#
	# If you make changes to this file, either reboot your machine or send the
	# inetd a HUP signal:
	# Do a "ps x" as root and look up the pid of inetd. Then do a
	# "kill -HUP <pid of inetd>".
	# The inetd will re-read this file whenever it gets that signal.
	#
	# <service_name> <sock_type> <proto> <flags> <user> <server_path> <args>
	#
	# The first 4 services are really only used for debugging purposes, so
	# we comment them out since they can otherwise be used for some nasty
	# denial-of-service attacks.  If you need them, uncomment them.
	# echo   	stream	tcp	nowait	root	internal
	# echo   	dgram	udp	wait	root	internal
	# discard	stream	tcp	nowait	root	internal
	# discard	dgram	udp	wait	root	internal
	# daytime	stream	tcp	nowait	root	internal
	# daytime	dgram	udp	wait	root	internal
	# chargen	stream	tcp	nowait	root	internal
	# chargen	dgram	udp	wait	root	internal
	time	stream	tcp	nowait	root	internal
	time	dgram	udp	wait	root	internal
	#
	# These are standard services.
	#
	ftp	stream	tcp	nowait	root	/usr/sbin/tcpd	in.ftpd
	telnet	stream  tcp     nowait  root    /usr/sbin/tcpd	in.telnetd
	#
	# Use this one instead if you want to snoop on telnet users (try to use this
	# for ethical purposes, ok folks?) :
	# telnet stream  tcp     nowait  root    /usr/sbin/tcpd  /usr/sbin/in.telnetsnoopd
	#
	# This is generally unnecessary.  The daemon provided by INN will handle the
	# incoming NNTP connections.
	# nntp	stream	tcp	nowait	root	/usr/sbin/tcpd	in.nntpd
	#
	# This is for BSD sendmail.  NOTE:  It's not a good idea to uncomment this
	# one, since sendmail is already set up to run as a daemon in /etc/rc.d/rc.M.
	# But, if you really want to run sendmail this way for some reason, you'll
	# need to uncomment the smtp line below AND change the line in /etc/rc.d/rc.M
	# to run sendmail like this:  /usr/sbin/sendmail -q30m
	# ...otherwise the queue will not be processed.
	# smtp  stream  tcp     nowait  root    /usr/sbin/tcpd  sendmail -bs
	#
	# The comsat daemon notifies the user of new mail when biff is set to y:
	comsat        dgram   udp     wait    root    /usr/sbin/tcpd  in.comsat
	#
	# Shell, login, exec and talk are BSD protocols.
	#
	shell	stream	tcp	nowait	root	/usr/sbin/tcpd	in.rshd -L
	login	stream	tcp	nowait	root	/usr/sbin/tcpd	in.rlogind
	# exec	stream	tcp	nowait	root	/usr/sbin/tcpd	in.rexecd
	# talk	dgram	udp	wait	root	/usr/sbin/tcpd	in.talkd
	# ntalk	dgram	udp	wait	root	/usr/sbin/tcpd	in.talkd
	ssh     stream  tcp     nowait  root    /usr/sbin/tcpd  /usr/sbin/sshd -i
	
	#
	# Kerberos authenticated services
	#
	# klogin	stream	tcp	nowait	root	/usr/sbin/tcpd	rlogind -k
	# eklogin	stream	tcp	nowait	root	/usr/sbin/tcpd	rlogind -k -x
	# kshell	stream	tcp	nowait	root	/usr/sbin/tcpd	rshd -k
	#
	# Services run ONLY on the Kerberos server
	#
	# krbupdate	stream	tcp	nowait	root	/usr/sbin/tcpd	registerd
	# kpasswd	stream	tcp	nowait	root	/usr/sbin/tcpd	kpasswdd
	#
	# Pop et al
	#
	# pop2	stream	tcp	nowait	root	/usr/sbin/tcpd	in.pop2d
	pop3    stream  tcp     nowait  root    /usr/sbin/tcpd	ipop3d
	imap    stream  tcp     nowait  root    /usr/sbin/tcpd	imapd
	pop3s   stream  tcp     nowait  root    /usr/sbin/tcpd	ipop3d
	imaps   stream  tcp     nowait  root    /usr/sbin/tcpd	imapd
	#
	# The ipop3d POP3 server is part of the Pine distribution.  If you've
	# installed the Pine package, you may wish to switch to ipop3d by
	# commenting out the pop3 line above, and uncommenting the pop3 line below.
	#pop3    stream  tcp     nowait  root    /usr/sbin/tcpd  ipop3d
	# imap2   stream  tcp     nowait  root    /usr/sbin/tcpd  imapd
	#
	# The Internet UUCP service.
	#
	# uucp	stream	tcp	nowait	uucp	/usr/sbin/tcpd	/usr/lib/uucp/uucico	-l
	#
	# Tftp service is provided primarily for booting.  Most sites
	# run this only on machines acting as "boot servers."
	#
	# tftp	dgram	udp	wait	nobody	/usr/sbin/tcpd	in.tftpd
	# bootps	dgram	udp	wait	root	/usr/sbin/in.bootpd	in.bootpd
	#
	# Finger, systat and netstat give out user information which may be
	# valuable to potential "system crackers."  Many sites choose to disable
	# some or all of these services to improve security.
	# Try "telnet localhost systat" and "telnet localhost netstat" to see that
	# information yourself!
	#
	# finger	stream	tcp	nowait	nobody	/usr/sbin/tcpd	in.fingerd -w
	# systat	stream	tcp	nowait	nobody	/usr/sbin/tcpd	/bin/ps	-auwwx
	# netstat	stream	tcp	nowait	root	/usr/sbin/tcpd	/bin/netstat	-a
	#
	# Ident service is used for net authentication
	auth	stream	tcp	wait	root	/usr/sbin/in.identd	in.identd -w -t120 -l
	#
	# These are to start Samba, an smb server that can export filesystems to
	# Pathworks, Lanmanager for DOS, Windows for Workgroups, Windows95, Lanmanager
	# for Windows, Lanmanager for OS/2, Windows NT, etc.
	# If you're running smbd and nmbd from daemons in /etc/rc.d/rc.samba, then you
	# shouldn't uncomment these lines.
	# netbios-ssn     stream  tcp     nowait  root    /usr/local/samba/bin/smbd  smbd
	# netbios-ns      dgram   udp     wait    root    /usr/local/samba/bin/nmbd  nmbd
	#
	# Sun-RPC based services.
	# <service name/version><sock_type><rpc/prot><flags><user><server><args>
	#
	# rstatd/1-3	dgram	rpc/udp	wait	root	/usr/sbin/tcpd	rpc.rstatd
	# rusersd/2-3	dgram	rpc/udp	wait	root	/usr/sbin/tcpd	rpc.rusersd
	# walld/1		dgram	rpc/udp	wait	root	/usr/sbin/tcpd	rpc.rwalld
	#
	
	skkserv       stream  tcp     nowait  nobody  /usr/sbin/tcpd  /usr/libexec/dbskkd-cdb
	printer	      stream tcp nowait lp /usr/lib/cups/daemon/cups-lpd cups-lpd
	# End of inetd.conf.
	swat	stream tcp nowait root /usr/sbin/tcpd /usr/sbin/swat
	EOF
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
