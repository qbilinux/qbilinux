#!/bin/sh

######################################################################
pkgbase=dcron
vers=4.5
url="http://www.jimpryor.net/linux/releases/dcron-${vers}.tar.gz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=$pkgbase-$vers
OPT_CONFIG=""
DOCS="README CHANGELOG CHANGELOG.working"
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
  cp -p extra/crond.rc{,.orig}
  cat <<- "EOF" | patch extra/crond.rc
	3,5c3,5
	< . /etc/rc.conf
	< . /etc/rc.d/functions
	< . /etc/conf.d/crond
	---
	> #. /etc/rc.conf
	> #. /etc/rc.d/functions
	> #. /etc/conf.d/crond
	10c10
	< 	stat_busy "Starting Cron Daemon"
	---
	> 	echo "Starting Cron Daemon"
	15c15
	< 	if [[ -z $PID ]] && env -i PATH="/sbin:/usr/sbin:/bin:/usr/bin" /usr/sbin/crond $CROND_ARGS; then
	---
	> 	if [[ -z $PID ]] && env -i PATH="/sbin:/usr/sbin:/bin:/usr/bin" /usr/sbin/crond -S -l info; then
	19,20c19
	< 		add_daemon crond
	< 		stat_done
	---
	> 		echo "crond started"
	22c21
	< 		stat_fail
	---
	> 		echo "crond failed to start"
	28c27
	< 	stat_busy "Stopping Cron Daemon"
	---
	> 	echo "Stopping Cron Daemon"
	30,31c29,30
	< 		rm_daemon crond
	< 		stat_done
	---
	> 		rm -f /var/run/crond.pid
	> 		echo "crond stopped"
	33c32
	< 		stat_fail
	---
	> 		echo "crond failed to stop"
	EOF
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make PREFIX=/usr
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make -i install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    install extra/run-cron $P/usr/sbin
    install extra/prune-cronstamps $P/etc/cron.d
    install -m 600 extra/root.crontab $P/var/spool/cron/crontabs/root
    cat <<- "EOF" > $P/var/spool/cron/crontabs/nobody
	# This updates the database for 'locate' every day:
	40 4 * * * updatedb 1> /dev/null 2> /dev/null
	EOF
    chmod 600 $P/var/spool/cron/crontabs/nobody
    chown nobody.nogroup $P/var/spool/cron/crontabs/nobody
    install -d $P/etc/cron.{hourly,daily,weekly,monthly}
    cat <<- "EOF" >> $P/etc/cron.daily/logrotate
	logrotate /etc/logrotate.conf
	EOF
    chmod 755 $P/etc/cron.daily/logrotate
    install -d $P/etc/rc.d/init.d
    install -m 744 extra/crond.rc $P/etc/rc.d/init.d/crond
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
