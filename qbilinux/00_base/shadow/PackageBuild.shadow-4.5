#!/bin/sh

######################################################################
pkgbase=shadow
vers=4.5
url="https://github.com/shadow-maint/shadow/releases/download/4.5/shadow-4.5.tar.xz
    ftp://plamo.linet.gr.jp/pub/Plamo-src.new/plamo/00_base/shadow/shadow-adduser-20160122"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=T3
src=$pkgbase-$vers
OPT_CONFIG="--sysconfdir=/etc --enable-man --without-selinux --without-xml-catalog
    --with-libcrack"
DOCS="COPYING ChangeLog NEWS README TODO"
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
  cp -p etc/pam.d/chfn etc/pam.d/chfn.orig
  cat <<- "EOF" | patch etc/pam.d/chfn
	2a3
	> auth		include		system-auth
	EOF
  cp -p etc/pam.d/chsh etc/pam.d/chsh.orig
  cat <<- "EOF" | patch etc/pam.d/chsh
	2a3
	> auth		include		system-auth
	EOF
  cp -p etc/pam.d/login etc/pam.d/login.orig
  cat <<- "EOF" | patch etc/pam.d/login
	7c7
	< session		required	pam_selinux.so close
	---
	> #session		required	pam_selinux.so close
	10,11c10,13
	< session		optional	pam_console.so
	< session		required	pam_selinux.so open
	---
	> session		optional	pam_unix.so
	> #session		required	pam_selinux.so open
	> session		required	pam_lastlog.so
	> session		optional	pam_ck_connector.so nox11
	EOF
  cp -p etc/pam.d/su etc/pam.d/su.orig
  cat <<- "EOF" | patch etc/pam.d/su
	6c6
	< auth		required	pam_wheel.so use_uid
	---
	> #auth		required	pam_wheel.so use_uid
	10c10
	< session		required	pam_selinux.so close
	---
	> #session		required	pam_selinux.so close
	12c12
	< session		required	pam_selinux.so open multiple
	---
	> #session		required	pam_selinux.so open multiple
	EOF
  cp -p etc/pam.d/chage etc/pam.d/chage.orig
  cat <<- "EOF" | patch etc/pam.d/chage
	2a3
	> auth		include		system-auth
	EOF
  cp -p etc/useradd etc/useradd.orig
  sed '/^GROUP=/s@1000@100@g' etc/useradd.orig \
      | sed '/^CREATE_MAIL_SPOOL=/s@yes@no@g' > etc/useradd
  cp -p etc/login.defs etc/login.defs.orig
  cat <<- "EOF" | patch etc/login.defs
	17c17
	< FAILLOG_ENAB		yes
	---
	> #FAILLOG_ENAB		yes
	32c32
	< LASTLOG_ENAB		yes
	---
	> #LASTLOG_ENAB		yes
	40c40
	< MAIL_CHECK_ENAB		yes
	---
	> #MAIL_CHECK_ENAB		yes
	45c45
	< OBSCURE_CHECKS_ENAB	yes
	---
	> #OBSCURE_CHECKS_ENAB	yes
	50c50
	< PORTTIME_CHECKS_ENAB	yes
	---
	> #PORTTIME_CHECKS_ENAB	yes
	55c55
	< QUOTAS_ENAB		yes
	---
	> #QUOTAS_ENAB		yes
	81c81
	< MOTD_FILE	/etc/motd
	---
	> #MOTD_FILE	/etc/motd
	99c99
	< FTMP_FILE	/var/log/btmp
	---
	> #FTMP_FILE	/var/log/btmp
	106c106
	< NOLOGINS_FILE	/etc/nologin
	---
	> #NOLOGINS_FILE	/etc/nologin
	144c144
	< ENV_HZ		HZ=100
	---
	> #ENV_HZ		HZ=100
	205c205
	< PASS_MIN_LEN	5
	---
	> #PASS_MIN_LEN	5
	214c214
	< SU_WHEEL_ONLY	no
	---
	> #SU_WHEEL_ONLY	no
	219c219
	< CRACKLIB_DICTPATH	/var/cache/cracklib/cracklib_dict
	---
	> #CRACKLIB_DICTPATH	/var/cache/cracklib/cracklib_dict
	260c260
	< PASS_CHANGE_TRIES	5
	---
	> #PASS_CHANGE_TRIES	5
	265c265
	< PASS_ALWAYS_WARN	yes
	---
	> #PASS_ALWAYS_WARN	yes
	277c277
	< CHFN_AUTH		yes
	---
	> #CHFN_AUTH		yes
	359c359
	< ENVIRON_FILE	/etc/environment
	---
	> #ENVIRON_FILE	/etc/environment
	EOF
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    for mk in `find . -name "[Mm]akefile" ` ; do
	sed -i -e 's|GCONFTOOL = /usr/bin/gconftool-2|GCONFTOOL = echo|' $mk
    done
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    install $W/shadow-adduser-20160122 $P/usr/sbin/adduser
    install -d $mandir/ja_JP.eucJP/man{1,5,8}
    for i in `cd $mandir/ja ; find . -type f` ; do
	nkf -We $mandir/ja/$i > $mandir/ja_JP.eucJP/$i
    done
    install -d $P/install
    cat <<- EOF >> $P/install/doinst.sh
	#%% begin initialize $pkg
	EOF
    cat <<- "EOF" >> $P/install/doinst.sh
	if [ -z "`grep "^root:" /etc/shadow | cut -d: -f2`" ] ; then
	  echo "root(システム管理者)のパスワードを設定してください。"
	  until passwd root ; do
	    echo "root(システム管理者)のパスワードを設定してください。"
	  done
	  echo "rootのパスワードの設定が完了しました。"
	fi
	#%% end
	EOF
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
