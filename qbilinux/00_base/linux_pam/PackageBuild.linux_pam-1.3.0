#!/bin/sh

######################################################################
pkgbase=linux_pam
vers=1.3.0
url="http://www.linux-pam.org/library/Linux-PAM-${vers}.tar.bz2"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=Linux-PAM-${vers}
patchfiles=""
OPT_CONFIG="--enable-shared --enable-read-both-confs --disable-nis"
DOCS="NEWS ABOUT-NLS Copyright README COPYING AUTHORS CHANGELOG
    ChangeLog INSTALL ChangeLog-CVS"
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/$libdir \
		--infodir='${prefix}'/share/info \
		--mandir='${prefix}'/share/man ${OPT_CONFIG[$1]} \
		--sbindir=/$libdir/security --enable-securedir=/$libdir/security
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    for mk in `find . -name "[Mm]akefile" ` ; do
	sed -i -e 's|GCONFTOOL = /usr/bin/gconftool-2|GCONFTOOL = echo|' $mk
    done
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
  install -d $P/sbin
  ln -s /$libdir/security/pam_tally $P/sbin
  chmod 4755 $P/$libdir/security/unix_chkpwd
  for i in libpam libpamc libpam_misc ; do
    cp -p $P/usr/$libdir/$i.so.0.*.* $P/$libdir
    ( cd $P/$libdir ; ln -s $i.so.0.*.* $i.so.0 )
  done
  cat <<- "EOF" > $P/etc/security/console.handlers
	console consoledevs tty[0-9][0-9]* vc/[0-9][0-9]* :[0-9]\.[0-9] :[0-9]
	EOF
  install -d $P/etc/pam.d
  cat <<- "EOF" > $P/etc/pam.d/system-auth
	#%PAM-1.0
	#
	# The PAM configuration file for system authentication
	#
	
	auth		required	pam_env.so
	auth		sufficient	pam_unix.so try_first_pass nullok
	auth		required	pam_deny.so
	
	account		required	pam_unix.so
	
	password	sufficient	pam_unix.so try_first_pass nullok md5 shadow
	password	required	pam_deny.so
	
	session		required	pam_limits.so
	session		required	pam_unix.so
	EOF
  for i in halt poweroff reboot ; do
    cat <<- "EOF" > $P/etc/pam.d/$i
	#%PAM-1.0
	#
	# The PAM configuration file for shutdown/reboot operations
	#

	auth		sufficient	pam_rootok.so
	auth		required	pam_unix.so
	
	account		required	pam_permit.so
	EOF
  done
  cat <<- "EOF" > $P/etc/pam.d/other
	#%PAM-1.0
	#
	# The PAM configuration file for other
	#
	
	auth		required	pam_deny.so
	auth		required	pam_warn.so
	
	account		required	pam_deny.so
	account		required	pam_warn.so
	
	password	required	pam_deny.so
	password	required	pam_warn.so
	
	session		required	pam_deny.so
	session		required	pam_warn.so
	EOF
  ln -s system-auth $P/etc/pam.d/plamo-default
  cat <<- "EOF" > $P/etc/securetty
	# /etc/securetty: list of terminals on which root is allowed to login.
	# See securetty(5) and login(1).
	console
	EOF
  seq -f "tty%g" 12 >> $P/etc/securetty
  seq -f "ttyp%g" 12 >> $P/etc/securetty
  seq -f "ttyS%g" 0 3 >> $P/etc/securetty
}

do_package() {
    mv $docdir/Linux-PAM $docdir/$src/doc
    mv $docdir/$src/{doc,{ABOUT-NLS,Copyright,README,COPYING,AUTHORS}.gz} $C
    mv $docdir/$src/{CHANGELOG,ChangeLog,INSTALL,ChangeLog-CVS,$myname}.gz $C
    mv $C/{doc,{ABOUT-NLS,Copyright,README,COPYING,AUTHORS}.gz} $docdir/$src
    mv $C/{CHANGELOG,ChangeLog,INSTALL,ChangeLog-CVS,$myname}.gz $docdir/$src

    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
