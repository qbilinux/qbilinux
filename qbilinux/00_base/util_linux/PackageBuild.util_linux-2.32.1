#!/bin/sh

######################################################################
pkgbase=util_linux
vers=2.32.1
url="http://www.kernel.org/pub/linux/utils/util-linux/v2.32/util-linux-${vers}.tar.xz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=util-linux-$vers
OPT_CONFIG="--localstatedir=/var --disable-setpriv --disable-last
    --disable-mesg --disable-chfn-chsh --disable-login --disable-nologin
    --disable-sulogin --disable-su --enable-write --disable-pylibmount
    --without-user --without-python --enable-line"
DOCS="COPYING ABOUT-NLS ChangeLog README NEWS README.licensing AUTHORS"
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    for mk in `find . -name "[Mm]akefile" ` ; do
	sed -i -e 's|GCONFTOOL = /usr/bin/gconftool-2|GCONFTOOL = echo|' $mk
    done
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    mv $P/usr/bin/logger $P/bin
    ln -s /bin/logger $P/usr/bin
    mv $P/bin/{,u}mount $P/sbin
    ln -s /sbin/mount $P/bin
    ln -s /sbin/umount $P/bin
    install -d $P/var/lib/hwclock
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
