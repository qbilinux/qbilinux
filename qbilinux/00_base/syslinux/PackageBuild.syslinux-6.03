#!/bin/sh

######################################################################
pkgbase=syslinux
vers=6.03
url="https://www.kernel.org/pub/linux/utils/boot/syslinux/syslinux-${vers}.tar.xz
    http://git.yoctoproject.org/cgit.cgi/poky/plain/meta/recipes-devtools/syslinux/syslinux/syslinux-fix-parallel-building-issue.patch
    http://git.yoctoproject.org/cgit.cgi/poky/plain/meta/recipes-devtools/syslinux/syslinux/syslinux-libupload-depend-lib.patch
    http://git.yoctoproject.org/cgit.cgi/poky/plain/meta/recipes-devtools/syslinux/syslinux/syslinux-remove-clean-script.patch"
apply_arch="x86_64 i686"
arch=`uname -m`
build=T2
src=$pkgbase-$vers
OPT_CONFIG=""
DOCS="COPYING NEWS README"
patchfiles='0014_fix_ftbfs_no_dynamic_linker.patch patch-aa'
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    patch -Np1 -i $W/syslinux-fix-parallel-building-issue.patch
    patch -Np1 -i $W/syslinux-libupload-depend-lib.patch
    patch -Np1 -i $W/syslinux-remove-clean-script.patch
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    if [ $arch == i686 ] ; then
	cp -p Makefile{,.orig}
	sed -i '/^all_firmware/s@ efi64@@' Makefile
    fi
}

do_build() {
    cd ${B[$1]}
    make
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    make install INSTALLROOT=$P MANDIR=/usr/share/man
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
