#!/bin/sh
##############################################################
pkgbase=efivar
vers=36
url="https://github.com/rhboot/efivar/releases/download/${vers}/efivar-${vers}.tar.bz2"
apply_arch="x86_64 i686"
arch=`uname -m`
build=T1
src=efivar-${vers}
OPT_CONFIG=''
DOCS='COPYING README.md TODO'
patchfiles=''
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}

    # https://projects.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/efivar
    sed 's|-O0|-Os|g' -i "Make.defaults" || true
    sed 's|-rpath=$(TOPDIR)/src/|-rpath=$(libdir)|g' -i "src/test/Makefile" || true

    # for make efivar-static
    sed -i -e "s/LIBS=dl/LIBS=dl popt/" src/Makefile

    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    ( cd src ; make include/efivar/efivar-guids.h )
    ( cd src ; make libefivar.so )
    ( cd src ; make libefiboot.so )
    env LIBDIR=/usr/${libdir} make efivar-static
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	env LIBDIR=/usr/${libdir} make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
