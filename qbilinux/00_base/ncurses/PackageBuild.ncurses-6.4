#!/bin/sh

######################################################################
pkgbase=ncurses
vers=6.4
url="http://ftp.gnu.org/gnu/ncurses/ncurses-${vers}.tar.gz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=${arch:-`uname -m`}
build=1
src=$pkgbase-$vers
OPT_CONFIG="--with-shared --with-cxx-shared --without-debug --enable-widec
    --with-manpage-format=normal --disable-ext-colors --enable-pc-files"
DOCS="README.MinGW README README.emx NEWS ANNOUNCE COPYING INSTALL
    TO-DO AUTHORS"
patchfiles='ncurses-6.0-Charable.patch'
compress=txz
SRC_URL=${SRC_URL:-"https://qbilinux.org/pub/source/"}
SRC_DIR=${SRC_DIR:-"/home/archives/source/"}
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    if [ $arch == x86_64 -o $arch == aarch64 ] ; then
	cp -p misc/run_tic.in{,.orig}
	sed -i 's@\<lib\>@lib64@g' misc/run_tic.in
    fi
    if [ -x ./configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	./configure --prefix=/usr --libdir=/${libdir} --sysconfdir=/etc --with-pkg-config-libdir=/usr/${libdir}/pkgconfig \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    for lib in ncurses form panel menu ; do
	echo "INPUT(-l${lib}w)" > $P/$libdir/lib${lib}.so
	ln -sf ${lib}w.pc         $P/usr/$libdir/pkgconfig/${lib}.pc
    done
    echo "INPUT(-lncursesw)" > $P/$libdir/libcursesw.so
    ln -sf libncurses.so       $P/$libdir/libcurses.so
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
