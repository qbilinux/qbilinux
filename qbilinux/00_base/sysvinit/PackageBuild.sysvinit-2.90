#!/bin/sh

######################################################################
pkgbase=sysvinit
vers=2.90
url="http://download.savannah.gnu.org/releases/sysvinit/sysvinit-${vers}.tar.xz"
apply_arch="x86_64 i686 armv7l"
arch=`uname -m`
build=T1
src=$pkgbase-$vers
patchfiles=""
OPT_CONFIG=""
DOCS="doc/bootlogd.README doc/Install doc/Changelog doc/Propaganda
    COPYING COPYRIGHT README"
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    for mk in `find . -name "[Mm]akefile" ` ; do
	sed -i -e 's|GCONFTOOL = /usr/bin/gconftool-2|GCONFTOOL = echo|' $mk
    done
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install ROOT=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    install -d $P/sbin/
    cat <<- "EOF" > $P/sbin/link_rootdev.sh
	#!/bin/sh
	
	root="`cat /proc/cmdline | sed -n 's@.*\<root\>=\([^ ]*\).*@\1@p'`"
	if grep -q "^PARTUUID=" <<< $root ; then
	  # root=PARTUUID=<your partition UUID>
	  root_part=`blkid | tr -d '"' | grep $root | cut -d: -f1 | sed 's@/dev/@@'`
	else
	  if grep -q "^/dev/" <<< $root ; then
	    # root=/dev/sda1 (grub)
	    root_part=${root#/dev/}
	  else
	    # root=801 (lilo)
	    maj=$((`printf "%d" 0x$root` / 256))
	    min=$((`printf "%d" 0x$root` % 256))
	    root_part=`cat /proc/partitions \
	        | sed -n "/ $maj *$min /s@.* \([^ ]*\)@\1@p"`
	  fi
	fi
	ln -sf $root_part /dev/root
	EOF
    chmod 755 $P/sbin/link_rootdev.sh
}

do_package() {
    cp -a $W/etc $P
    chown -R root.root $P/etc
    touch -r etc/rc.d $P/etc/rc.d
    cat <<- EOF >> $P/install/doinst.sh
	#%% begin initialize $src
	EOF
    cat <<- "EOF" >> $P/install/doinst.sh
	vers=`ls /usr/lib/setup/qbilinux* | tail -n1 | cut -d"/" -f5`
	echo "%s %r ($vers) %v" > /etc/motd.in
	#%% end
	EOF

    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
