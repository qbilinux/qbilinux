#!/bin/sh

######################################################################
pkgbase=linux_firmware
vers=20230404
url="https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git/snapshot/linux-firmware-${vers}.tar.gz"
apply_arch="noarch"
arch=noarch
build=1
src=linux-firmware-${vers}
OPT_CONFIG=""
DOCS="GPL-3 `echo LICENCE.{Abilis,IntcSST2,Marvell,OLPC}` LICENSE.radeon
    `echo LICENCE.{agere,atheros_firmware,broadcom_bcm43xx,ca0132}`
    `echo LICENCE.{chelsio_firmware,cw1200}` README LICENCE.ene_firmware
    `echo LICENCE.{fw_sst_0f28,go7007,i2400m,ibt_firmware,it913x}`
    `echo LICENCE.{iwlwifi_firmware,adsp_sst}` WHENCE LICENCE.mwl8335
    `echo LICENCE.{myri10ge_firmware,phanfw,qla2xxx,r8a779x_usb3}`
    `echo LICENCE.{ralink-firmware.txt,ralink_a_mediatek_company_firmware}`
    `echo LICENCE.{rtlwifi_firmware.txt,siano,tda7706-firmware.txt}`
    `echo LICENCE.{ti-connectivity,ueagle-atm4-firmware,via_vt6656,wl1251}`
    `echo LICENCE.{xc4000,xc5000,xc5000c}` `echo LICENSE.{amd-ucode,dib0700}`
    `echo TDA7706_OM_{v2.5.1,v3.0.2}_boot.txt` `echo LICENCE.{cavium,e100}`
    `echo LICENCE.{kaweth,moxa,nvidia,open-ath9k-htc-firmware,qat_firmware}`
    `echo LICENCE.{qla1280,ti-keystone}`
    `echo LICENSE.{QualcommAtheros_{ar3k,ath10k},amdgpu,atmel,hfi1_firmware}`
    LICENSE.i915"
NOCOMPRESS=y
compress=txz
SRC_URL=${SRC_URL:-"https://qbilinux.org/pub/source/"}
SRC_DIR=${SRC_DIR:-"/home/archives/source/"}
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    if [ -x ./configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # makepkg のバグ回避用 (本当は makepkg を修正したほうが良いけど影響範囲が大きいのでとりあえず..)
    (cd $P/lib/firmware/brcm/; mv "brcmfmac43455-sdio.Raspberry Pi Foundation-Raspberry Pi 4 Model B.txt" "brcmfmac43455-sdio.Raspberry_Pi_Foundation-Raspberry_Pi_4_Model_B.txt")
    (cd $P/lib/firmware/brcm/; mv "brcmfmac43455-sdio.Raspberry Pi Foundation-Raspberry Pi Compute Module 4.txt" "brcmfmac43455-sdio.Raspberry_Pi_Foundation-Raspberry_Pi_4_Compute_Module_4.txt")
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
