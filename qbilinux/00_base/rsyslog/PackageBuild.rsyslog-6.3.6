#!/bin/sh

######################################################################
pkgbase=rsyslog
vers=6.3.6
url="http://download.rsyslog.com/rsyslog/rsyslog-${vers}.tar.gz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=T2
src=$pkgbase-$vers
OPT_CONFIG="--sbindir=/sbin"
DOCS="COPYING README AUTHORS INSTALL COPYING.LESSER NEWS ChangeLog"
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
    cp $W/config.guess .
    cp $W/config.sub .
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    for mk in `find . -name "[Mm]akefile" ` ; do
	sed -i -e 's|GCONFTOOL = /usr/bin/gconftool-2|GCONFTOOL = echo|' $mk
    done
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
  install -d $P/etc/rsyslog.d
  cat <<- "EOF" | unexpand > $P/etc/rsyslog.conf
	# Begin /etc/rsyslog.conf
	# CLFS configuration of rsyslog. For more info use man rsyslog.conf
	
	#######################################################################
	# Rsyslog Modules
	
	# Support for Local System Logging
	$ModLoad imuxsock.so
	
	# Support for Kernel Logging
	$ModLoad imklog.so
	
	#######################################################################
	# Global Options
	
	# Use traditional timestamp format.
	$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
	
	# Set the default permissions for all log files.
	$FileOwner root
	$FileGroup root
	$FileCreateMode 0640
	$DirCreateMode 0755
	
	# Provides UDP reception
	$ModLoad imudp
	$UDPServerRun 514
	
	# Disable Repeating of Entries
	$RepeatedMsgReduction on
	
	#######################################################################
	# Include Rsyslog Config Snippets
	
	$IncludeConfig /etc/rsyslog.d/*.conf
	
	#######################################################################
	# Standard Log Files
	
	auth,authpriv.*			/var/log/auth.log
	*.*;auth,authpriv.none		-/var/log/syslog
	daemon.*			-/var/log/daemon
	kern.*				-/var/log/kern.log
	mail.*				-/var/log/mail.log
	user.*				-/var/log/user.log
	
	# Catch All Logs
	*.=debug;\
	        auth,authpriv.none;\
	        news.none;mail.none	-/var/log/debug
	*.=info;*.=notice;*.=warn;\
	        auth,authpriv.none;\
	        cron,daemon.none;\
	        mail,news.none		-/var/log/messages
	
	# Emergencies are shown to everyone
	*.emerg				*
	
	# End /etc/rsyslog.conf
	EOF
  install -d $P/etc/logrotate.d
  for i in auth.log syslog daemon {kern,mail,user}.log debug messages ; do
    cat <<- EOF > $P/etc/logrotate.d/$i
	/var/log/$i {
	    compress
	    weekly
	    rotate 4
	    missingok
	    notifempty
	    sharedscripts
	    postrotate
	        kill -HUP \`cat /var/run/rsyslogd.pid\` 2> /dev/null || true
	    endscript
	}
	EOF
  done
  sed -i '/rotate/s@4@8@' $P/etc/logrotate.d/{auth.log,syslog}
  cat <<- "EOF" | patch $P/etc/logrotate.d/mail.log
	9c9
	<         kill -HUP `cat /var/run/rsyslogd.pid` 2> /dev/null || true
	---
	>         /etc/rc.d/init.d/postfix reload 2> /dev/null || true
	EOF
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
