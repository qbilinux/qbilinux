#!/bin/sh

######################################################################
pkgbase=lsb_release
vers=1.4
url="https://sourceforge.net/projects/lsb/files/lsb_release/${vers}/lsb-release-${vers}.tar.gz"
apply_arch="noarch"
arch=${arch:-`uname -m`}
build=6
src=lsb-release-$vers
OPT_CONFIG=""
DOCS="ChangeLog INSTALL README lsb-release.template lsb_release.examples"
compress=txz
SRC_URL=${SRC_URL:-"https://qbilinux.org/pub/source/"}
SRC_DIR=${SRC_DIR:-"/home/archives/source/"}
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
    cp -p Makefile{,.orig}
    sed -i -e '/^prefix=/s@/local@@g' -e '/^mandir=/s@/man@/share/man@g' \
	-e 's@${mandir}@$(DESTDIR)&@g' \
	-e '/^mandir=/!s@${prefix}@$(DESTDIR)&@g' Makefile
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    install -d $P/etc
    cat <<- "EOF" > $P/etc/qbilinux-release
	qbilinux release current
	EOF
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
