#!/bin/sh
##############################################################
pkgbase=cdrtools
vers=3.02a09
url="https://sourceforge.net/projects/cdrtools/files/alpha/cdrtools-3.02a09.tar.gz"
apply_arch="x86_64 i686 armv7l"
arch=`uname -m`
build=T1
src=cdrtools-3.02
OPT_CONFIG=''
DOCS='ABOUT CDDL.Schily.txt COPYING Changelog Changelog.1 GPL-2.0.txt INSTALL LGPL-2.1.txt README README.BSDi README.FreeBSD README.NetBSD README.OpenBSD README.QNX README.SSPM README.apple README.compile README.linux-shm README.mkisofs README.next README.openserver README.os2 README.sgi README.unixware README.vms README.xxxBSD READMEs'
patchfiles=''
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################

source /usr/src/plamo-nora/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    for mk in `find . -name "[Mm]akefile" ` ; do
	sed -i -e 's|GCONFTOOL = /usr/bin/gconftool-2|GCONFTOOL = echo|' $mk
    done
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P INS_BASE=/usr
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    if [ "$arch" = "x86_64" ]; then
	mv $P/usr/lib $P/usr/${libdir}
    fi
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/plamo-nora/PackageBuild.func
