#!/bin/sh
##############################################################
pkgbase=totem
vers=3.26.1
url="http://ftp.gnome.org/pub/gnome/sources/totem/${vers%.*}/totem-${vers}.tar.xz"
verify="http://ftp.gnome.org/pub/gnome/sources/totem/${vers%.*}/totem-${vers}.sha256sum"
commitid=
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=T2
src=totem-${vers}
OPT_CONFIG='--default-library shared -D enable-vala=no'
DOCS='AUTHORS COPYING ChangeLog ChangeLog.pre-gitlog INSTALL MAINTAINERS NEWS README TODO license_change'
patchfiles=''
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    meson --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir=/usr/share/man ${OPT_CONFIG[$1]} ${S[$1]}
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    ninja
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    DESTDIR=$P ninja install
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    mkdir -p $P/install
    cat << EOF >> $P/install/initpkg
/usr/bin/glib-compile-schemas /usr/share/glib-2.0/schemas
touch /usr/share/glib-2.0/schemas/gschemas.compiled
EOF
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
