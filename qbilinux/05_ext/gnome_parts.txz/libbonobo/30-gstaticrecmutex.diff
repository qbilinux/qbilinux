diff -ur libbonobo-2.32.1/activation-server/activation-server-main.c libbonobo_2.32.1/activation-server/activation-server-main.c
--- libbonobo-2.32.1/activation-server/activation-server-main.c	2010-08-18 13:41:32.000000000 -0400
+++ libbonobo_2.32.1/activation-server/activation-server-main.c	2013-03-19 15:27:39.333217330 -0400
@@ -68,7 +68,7 @@
 
 static gboolean        server_threaded = FALSE;
 static glong           server_guard_depth = 0;
-static GStaticRecMutex server_guard = G_STATIC_REC_MUTEX_INIT;
+static GRecMutex       server_guard;
 
 static PortableServer_POA
 server_get_poa (void)
@@ -102,7 +102,7 @@
 #endif
         server_guard_depth = 0;
         for (i = 0; i < state; i++)
-                g_static_rec_mutex_unlock (&server_guard);
+                g_rec_mutex_unlock (&server_guard);
         return state;
 }
 
@@ -115,7 +115,7 @@
                 return;
 
         for (i = 0; i < state; i++)
-                g_static_rec_mutex_lock (&server_guard);
+                g_rec_mutex_lock (&server_guard);
         server_guard_depth = state;
 #ifdef BONOBO_ACTIVATION_DEBUG
         fprintf (stderr, "thread %p re-taken server guard with depth %ld\n",
@@ -129,7 +129,7 @@
         if (!server_threaded)
                 return;
 
-        g_static_rec_mutex_lock (&server_guard);
+        g_rec_mutex_lock (&server_guard);
         server_guard_depth++;
         fprintf (stderr, "thread %p take guard [%ld]\n",
                  g_thread_self (), server_guard_depth);
@@ -144,7 +144,7 @@
         fprintf (stderr, "thread %p release guard [%ld]\n",
                  g_thread_self (), server_guard_depth);
         server_guard_depth--;
-        g_static_rec_mutex_unlock (&server_guard);
+        g_rec_mutex_unlock (&server_guard);
 }
 
 #ifdef G_OS_WIN32
@@ -521,8 +521,6 @@
 #endif
 #endif
 
-        g_thread_init (NULL);
-
 #ifdef BONOBO_ACTIVATION_DEBUG
 	debug_output_env = g_getenv ("BONOBO_ACTIVATION_DEBUG_OUTPUT");
 	if (debug_output_env && debug_output_env[0] != '\0') {
diff -ur libbonobo-2.32.1/bonobo-activation/bonobo-activation-init.c libbonobo_2.32.1/bonobo-activation/bonobo-activation-init.c
--- libbonobo-2.32.1/bonobo-activation/bonobo-activation-init.c	2009-04-20 09:16:57.000000000 -0400
+++ libbonobo_2.32.1/bonobo-activation/bonobo-activation-init.c	2013-03-19 15:30:07.392131961 -0400
@@ -46,7 +46,7 @@
 
 #include <orbit/orbit.h>
 
-GStaticRecMutex _bonobo_activation_guard = G_STATIC_REC_MUTEX_INIT;
+GRecMutex _bonobo_activation_guard;
 static CORBA_ORB bonobo_activation_orb = CORBA_OBJECT_NIL;
 static CORBA_Context bonobo_activation_context;
 static gboolean is_initialized = FALSE;
diff -ur libbonobo-2.32.1/bonobo-activation/bonobo-activation-private.h libbonobo_2.32.1/bonobo-activation/bonobo-activation-private.h
--- libbonobo-2.32.1/bonobo-activation/bonobo-activation-private.h	2009-04-20 09:16:57.000000000 -0400
+++ libbonobo_2.32.1/bonobo-activation/bonobo-activation-private.h	2013-03-19 15:25:30.937491886 -0400
@@ -31,7 +31,7 @@
 
 #define BONOBO_ACTIVATION_FACTORY_PRIVATE_TIMEOUT 1
 
-extern GStaticRecMutex _bonobo_activation_guard;
+extern GRecMutex _bonobo_activation_guard;
 #define BONOBO_ACTIVATION_LOCK()   g_static_rec_mutex_lock   (&_bonobo_activation_guard)
 #define BONOBO_ACTIVATION_UNLOCK() g_static_rec_mutex_unlock (&_bonobo_activation_guard)
 
