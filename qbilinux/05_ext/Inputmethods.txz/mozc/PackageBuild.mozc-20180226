#!/bin/sh

######################################################################
pkgbase=mozc
vers=20180226
url="https://github.com/google/mozc.git"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=2
src=mozc
OPT_CONFIG=""
DOCS="AUTHORS CONTRIBUTING.md CONTRIBUTORS LICENSE README.md appveyor.yml"
patchfiles="uim-mozc.patch uim-mozc-namespace.patch mozc-gcc8.patch mozc-dict.patch"
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}/src
    python build_mozc.py gyp --target_platform=Linux
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}/src
    python build_mozc.py build -c Release unix/uim/uim.gyp:uim-mozc unix/ibus/ibus.gyp:ibus_mozc unix/emacs/emacs.gyp:mozc_emacs_helper server/server.gyp:mozc_server gui/gui.gyp:mozc_tool renderer/renderer.gyp:mozc_renderer
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}/src/out_linux/Release

    # ibus
    install -d $P/usr/${libdir}/ibus-mozc
    cp ibus_mozc $P/usr/${libdir}/ibus-mozc

    install -d $P/usr/${libdir}/mozc 
    cp gen_collocation_data_main \
       gen_collocation_suppression_data_main \
       gen_mock_segmenter_bitarray_main \
       gen_oss_segmenter_bitarray_main \
       gen_suggestion_filter_main \
       gen_symbol_rewriter_dictionary_main \
       gen_system_dictionary_data_main \
       gen_usage_rewriter_dictionary_main \
       mozc_renderer \
       mozc_server \
       mozc_tool \
       protoc \
       $P/usr/${libdir}/mozc

    install -d $P/usr/local/bin
    cp mozc_emacs_helper \
       $P/usr/local/bin

    install -d $P/usr/share/ibus/component
    cp gen/unix/ibus/mozc.xml $P/usr/share/ibus/component
    sed -i "s/ibus-engine-mozc/ibus_mozc/" $P/usr/share/ibus/component/mozc.xml
    sed -i "s/lib/${libdir}/" $P/usr/share/ibus/component/mozc.xml

    # uim
    install -d $P/usr/${libdir}/uim/plugin
    cp libuim-mozc.so $P/usr/${libdir}/uim/plugin

    install -d $P/usr/share/uim
    cp ${B[$1]}/src/unix/uim/scm/* $P/usr/share/uim/

    install -d $P/install
    cat <<- EOF >> $P/install/doinst.sh
    #%% begin initialize $pkg
    uim-module-manager --register mozc
    #%% end
EOF

    # emacs
    install -d $P/usr/share/emacs/site-lisp/
    cp ${B[$1]}/src/unix/emacs/mozc.el $P/usr/share/emacs/site-lisp/
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
