#!/bin/sh

######################################################################
pkgbase=mozc
vers=2.29.5268.102_20240222
url="https://github.com/google/mozc.git"
commitid=303b05b815a70a82159893b76de965aea4b7e64f
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=mozc
OPT_CONFIG=""
DOCS="AUTHORS CONTRIBUTING.md CONTRIBUTORS LICENSE README.md"
patchfiles=""
compress=txz
SRC_URL=${SRC_URL:-"https://qbilinux.org/pub/source/"}
SRC_DIR=${SRC_DIR:-"/home/archives/source/"}
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    git submodule update --init --recursive
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
    mv src/config.bzl{,.orig}
    sed -e "s/\/lib\//\/${libdir}\//" src/config.bzl.orig > src/config.bzl
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}/src
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}/src
    bazel build package --config oss_linux --compilation_mode opt
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}/src
    unzip bazel-bin/unix/mozc.zip -d $P
    chown -R root:root $P
    rm -rf $P/tmp
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
