#!/bin/sh
##############################################################
pkgbase=bluez
vers=5.75
url="http://www.kernel.org/pub/linux/bluetooth/bluez-${vers}.tar.xz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=${arch:-`uname -m`}
build=1
src=bluez-${vers}
OPT_CONFIG='--enable-library --disable-static --disable-test --disable-systemd'
DOCS='AUTHORS COPYING COPYING.LIB ChangeLog INSTALL NEWS README TODO'
patchfiles=''
compress=txz
SRC_URL=${SRC_URL:-"https://qbilinux.org/pub/source/"}
SRC_DIR=${SRC_DIR:-"/home/archives/source/"}
##############################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    install -v -dm755 $P/etc/bluetooth &&
    install -v -m644 ${S[$1]}/src/main.conf $P/etc/bluetooth/main.conf
cat > $P/etc/bluetooth/rfcomm.conf << "EOF"
# Start rfcomm.conf
# Set up the RFCOMM configuration of the Bluetooth subsystem in the Linux kernel.
# Use one line per command
# See the rfcomm man page for options


# End of rfcomm.conf
EOF

cat > $P/etc/bluetooth/uart.conf << "EOF"
# Start uart.conf
# Attach serial devices via UART HCI to BlueZ stack
# Use one line per device
# See the hciattach man page for options

# End of uart.conf
EOF
    install -d $P/etc/rc.d/init.d
    cat > $P/etc/rc.d/init.d/bluetoothd << "EOF"
#!/bin/sh

. /lib/lsb/init-functions

SERVER=/usr/libexec/bluetooth/bluetoothd

[ -f $SERVER ] || exit 0
case "${1}" in
start)
  echo "Starting bluetoothd server:"
  $SERVER &
  ;;
stop)
  echo "Shutting down bluetoothd server:"
  killproc $SERVER
  ;;
restart)
  ${0} stop
  sleep 1
  ${0} start
  ;;
status)
  statusproc $SERVER
  ;;
*)
  echo "Usage: bluetoothd {start|stop|restart|status}"
  exit 1
  ;;
esac
exit 0
EOF
    chmod 755 $P/etc/rc.d/init.d/bluetoothd
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
