#!/bin/sh
##############################################################
pkgbase="dovecot"
vers=2.3.18
url="https://www.dovecot.org/releases/2.3/dovecot-${vers}.tar.gz"
commitid=
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=dovecot-${vers}
OPT_CONFIG='--disable-static'
DOCS='AUTHORS COPYING COPYING.LGPL COPYING.MIT ChangeLog INSTALL INSTALL.md NEWS README README.md TODO'
patchfiles=''
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################


source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}


do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
      export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
      export LDFLAGS='-Wl,--as-needed'
      export PANDOC=false
      ${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    export LDFLAGS='-Wl,--as-needed'
    export PANDOC=false
    make
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    export LDFLAGS='-Wl,--as-needed'
    make install DESTDIR=$P
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    install -d $P/etc/rc.d/init.d/
    cp $S/doc/dovecot-initd.sh $P/etc/rc.d/init.d/dovecot
    sed -i '/^\DAEMON/ s:local/::' $P/etc/rc.d/init.d/dovecot
    cp -rv $P/usr/share/doc/dovecot/example-config/* $P/etc/dovecot
    sed -i '/^\!include / s/^/#/' $P/etc/dovecot/dovecot.conf
    cat > $P/etc/dovecot/local.conf << "EOF"
protocols = imap
ssl = no
# The next line is only needed if you have no IPv6 network interfaces
listen = *
mail_location = mbox:~/Mail:INBOX=/var/mail/%u
userdb {
  driver = passwd
}
passdb {
  driver = shadow
}
EOF
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
