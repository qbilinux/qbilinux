#!/bin/sh
##############################################################
pkgbase=samba
vers=4.9.4
url="http://www.samba.org/samba/ftp/stable/samba-${vers}.tar.gz"
verify=
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=${pkgbase}-${vers}
if [ $arch = "x86_64" -o $arch = "aarch64" ]; then
    libdir="lib64"
    suffix="64"
else
    libdir="lib"
    suffix=""
fi
OPT_CONFIG="--with-logfilebase=/var/log/samba --enable-fhs --without-ad-dc --without-systemd --without-regedit --with-pammodulesdir=${libdir}/security"
DOCS='BUILD_SYSTEMS.txt COPYING PFIF.txt README README.Coding README.cifs-utils README.contributing WHATSNEW.txt'
patchfiles=''
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    if [ -x ./configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	export PYTHON=python2
	./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	export LIBS='-lcurses'
	export PYTHON=/usr/bin/python2
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	export PYTHON=/usr/bin/python2
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi
    ( cd $P/usr/share/swat/help ; for f in manpages/* ; do ln -sf $f . ; done )
    #mkdir -p $P/var/run/samba
    #mkdir -p $P/var/log/samba
    #mkdir -p $P/home/samba
    #chmod a+rwx $P/home/samba
    #cp -a ../docs/Samba3* ../docs/htmldocs $P/home/samba
    chk_me=`whoami | grep root`
    if [ ! "$chk_me.x" = ".x" ]; then
	chown -R root.root $P/home/samba/*
	chmod -R a+rx $P/home/samba/*
    fi

    mkdir -p $P/${libdir}
    mv -v $P/usr/lib/libnss_win{s,bind}.so* $P/${libdir}
    ( cd $P/${libdir} ; ln -v -sf ../../${libdir}/libnss_winbind.so.2 libnss_winbind.so )
    ( cd $P/${libdir} ; ln -v -sf ../../${libdir}/libnss_wins.so.2 libnss_wins.so )

    mkdir -p $P/etc/openldap/schema
    install -v -m644    examples/LDAP/README  $P/etc/openldap/schema/README.LDAP
    install -v -m644    examples/LDAP/samba*  $P/etc/openldap/schema
    install -v -m755    examples/LDAP/{convert*,get*,ol*} $P/etc/openldap/schema

    mkdir -p $docdir/$src
    mkdir -p $P/etc/pam.d
    cat <<"EOF" > $P/etc/pam.d/samba
#%PAM-1.0
auth       include      plamo-default
auth       required     pam_nologin.so
account    include      plamo-default
password   include      plamo-default
session    include      plamo-default
EOF

    mkdir -p $P/etc/rc.d/init.d
    cat <<"EOF" > $P/etc/rc.d/init.d/samba
#!/bin/sh

start() {
    if [ -x /usr/sbin/nmbd ]; then
        echo "Starting Samba server.."
        /usr/sbin/nmbd -D
        /usr/sbin/smbd -D
    fi
}

stop() {
     echo "Stopping Samba Server.."
     kill `cat /var/run/samba/nmbd.pid`
     if [ -f /var/run/samba/nmbd.pid ]; then
        rm -rf /var/run/samba/nmbd.pid
     fi
     kill `cat /var/run/samba/smbd.pid`
     if [ -f /var/run/samba/smbd.pid ]; then
        rm -rf /var/run/samba/smbd.pid
     fi
}

case "$1" in
start)
    start
    ;;
stop)
    stop
    ;;
restart)
    stop
    sleep 3
    start
    ;;
*)
    echo $"Usage: $0 {start|stop|restart}"
    exit 1
    ;;
esac

exit 0

EOF

    mkdir -p $P/usr/${libdir}
    mkdir -p $P/etc/samba
    cp examples/smb.conf.default $P/etc/samba/smb.conf.dist

    mkdir -p $P/etc/logrotate.d
    cat <<"EOF" > $P/etc/logrotate.d/samba
/var/log/samba/log.smbd /var/log/samba/log.nmbd /var/log/samba/*.log {
   notifempty
   missingok
   sharedscripts
   copytruncate
   postrotate
      /bin/kill -HUP `cat /var/run/samba/*.pid 2>/dev/null` 2>/dev/null || true
   endscript
}
EOF

    mkdir -p $P/install
    cat <<"EOF" > $P/install/initpkg
chk=`grep swat /etc/services`
if [ "$chk.x" = ".x" ]; then
  echo 'swat            901/tcp' >> /etc/services
fi

chk=`grep swat /etc/inetd.conf`
if [ "$chk.x" = ".x" ]; then
  echo 'swat    stream tcp nowait root /usr/sbin/tcpd /usr/sbin/swat' >> /etc/inetd.conf
fi

chk=`ps axw | grep inetd`
if [ ! "$chk.x" = ".x" ]; then
    kill -HUP `pidof inetd`
fi

if [ ! -f /etc/samba/smb.conf ]; then
    cp /etc/samba/smb.conf.dist /etc/samba/smb.conf
fi

EOF
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
