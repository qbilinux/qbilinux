#!/bin/sh
##############################################################
pkgbase=openldap
vers=2.4.46
url="http://www.openldap.org/software/download/OpenLDAP/openldap-release/openldap-${vers}.tgz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=T2
src=openldap-${vers}
# OPT_CONFIG='--libexecdir=/usr/sbin --disable-static --enable-ipv6 --enable-syslog --enable-local --enable-bdb --enable-hdb --enable-crypt --enable-dynamic --with-threads --disable-wrappers  --without-fetch --enable-spasswd --with-cyrus-sasl --enable-overlays=mod --enable-modules=yes'

OPT_CONFIG='--libexecdir=/usr/sbin --disable-debug --disable-static --enable-syslog --enable-dynamic  --enable-crypt --enable-modules  --enable-overlays=mod --enable-rlookups --disable-bdb --disable-hdb'
DOCS='INSTALL LICENSE README'
patchfiles=''
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
    cp -f /usr/src/qbilinux/{config.guess,config.sub} build
    # from Arch linux PKGBUILD
    sed -i 's|-m 644 $(LIBRARY)|-m 755 $(LIBRARY)|' libraries/{liblber,libldap,libldap_r}/Makefile.in
    sed -i 's|#define LDAPI_SOCK LDAP_RUNDIR LDAP_DIRSEP "run" LDAP_DIRSEP "ldapi"|#define LDAPI_SOCK LDAP_DIRSEP "run" LDAP_DIRSEP "openldap" LDAP_DIRSEP "ldapi"|' include/ldap_defaults.h

    # but Plamo uses /var/run, so disable these substitutions
    # sed -i 's|%LOCALSTATEDIR%/run|/run/openldap|' servers/slapd/slapd.conf
    # sed -i 's|-$(MKDIR) $(DESTDIR)$(localstatedir)/run|-$(MKDIR) $(DESTDIR)/run/openldap|' servers/slapd/Makefile.in
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	${S[$1]}/configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc \
		--localstatedir=/var --infodir='${prefix}'/share/info --mandir='${prefix}'/share/man ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
    make depend
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    ( cd $P/etc/openldap ; rm *.default )

    install -v -m755 -d $P/usr/share/doc/openldap-$vers/{drafts,guide,rfc}
    install -v -m644    doc/drafts/* $P/usr/share/doc/openldap-$vers/drafts
    install -v -m644    doc/rfc/* $P/usr/share/doc/openldap-$vers/rfc 
    cp -v -R            doc/guide/* $P/usr/share/doc/openldap-$vers/guide

  mkdir -p $P/etc/rc.d/init.d
  cat <<"EOF" > $P/etc/rc.d/init.d/openldap
#!/bin/bash
PID=`pidof -o %PPID /usr/sbin/slapd`
case "$1" in
  start)
    echo "Starting OpenLDAP"
    if [ -z "$PID" ]; then
      if [ -z "$SLAPD_SERVICES" ]; then
        /usr/sbin/slapd $SLAPD_OPTIONS
      else
        /usr/sbin/slapd -h "$SLAPD_SERVICES" $SLAPD_OPTIONS
      fi
      if [ $? -gt 0 ]; then
        echo "OpenLDAP start failed!"
      fi
    else
      echo "another OpenLDAP process running!"
    fi
    ;;
  stop)
    echo "Stopping OpenLDAP"
    [ ! -z "$PID" ] && kill $PID &> /dev/null
    if [ $? -gt 0 ]; then
      echo "OpenLDAP stop failed!"
    else
      rm -f /var/run/openldap/slapd.pid
      rm -f /var/run/openldap/slapd.args
      echo "OpenLDAP stopped"
    fi
    ;;
  restart)
    $0 stop
    sleep 3
    $0 start
    ;;
  *)
    echo "usage: $0 {start|stop|restart}"  
esac
exit 0

EOF
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
