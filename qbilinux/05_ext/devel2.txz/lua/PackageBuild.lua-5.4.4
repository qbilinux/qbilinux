#!/bin/sh

######################################################################
pkgbase=lua
vers=5.4.4
url="http://www.lua.org/ftp/lua-${vers}.tar.gz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=${arch:-`uname -m`}
build=1
src=$pkgbase-${vers}
OPT_CONFIG=""
DOCS="README"
patchfiles='patch-ab'
compress=txz
SRC_URL=${SRC_URL:-"https://qbilinux.org/pub/source/"}
SRC_DIR=${SRC_DIR:-"/home/archives/source/"}
######################################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
    cd ${B[$1]}
    cp -p Makefile Makefile.orig
    cat <<- EOF | patch Makefile
	12c12
	< INSTALL_TOP= /usr/local
	---
	> INSTALL_TOP= /usr
	16c16
	< INSTALL_MAN= \$(INSTALL_TOP)/man/man1
	---
	> INSTALL_MAN= \$(INSTALL_TOP)/share/man/man1
	46c46
	< TO_LIB= liblua.a
	---
	> TO_LIB= liblua.a liblua.so.$vers
	EOF
    sed -i -e "/^INSTALL_LIB=/s@lib@$libdir@g" \
	-e "/^INSTALL_CMOD=/s@lib@$libdir@g" \
	-e '/echo/!s@\$(INSTALL_BIN@$(DESTDIR)&@g' \
	-e '/echo/!s@\$(INSTALL_INC@$(DESTDIR)&@g' \
	-e '/echo/!s@\$(INSTALL_LIB@$(DESTDIR)&@g' \
	-e '/echo/!s@\$(INSTALL_MAN@$(DESTDIR)&@g' \
	-e '/echo/!s@\$(INSTALL_LMOD@$(DESTDIR)&@g' \
	-e '/echo/!s@\$(INSTALL_CMOD@$(DESTDIR)&@g' Makefile
    cp -p src/luaconf.h{,.orig}
    sed -i -e 's@local/@@g' -e "s@lib/@$libdir/@g" src/luaconf.h
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make INSTALL_TOP=/usr
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install INSTALL_TOP=/usr DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi
    ln -s liblua.so.$vers $P/usr/$libdir/liblua.so.5
    ln -s liblua.so.$vers $P/usr/$libdir/liblua.so
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
