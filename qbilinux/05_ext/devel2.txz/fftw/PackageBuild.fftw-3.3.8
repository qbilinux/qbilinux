#!/bin/sh

##############################################################
pkgbase=fftw
vers=3.3.8
url="http://www.fftw.org/fftw-${vers}.tar.gz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=T2
src[0]=fftw-${vers}
if [ $arch != "armv7l" -a $arch != "aarch64" ]; then
    src[1]=fftw-${vers}
    src[2]=fftw-${vers}
fi
OPT_CONFIG[0]="--enable-long-double"
if [ $arch != "armv7l" -a $arch != "aarch64" ]; then
    OPT_CONFIG[1]="--enable-sse2"
    OPT_CONFIG[2]="--enable-float --enable-sse"
fi
DOCS='AUTHORS COPYING ChangeLog INSTALL NEWS README TODO'
patchfiles=''
compress=txz
SRC_URL="http://circle2.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################

source /usr/src/plamo-nora/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ $arch = "armv7l" -o $arch = "aarch64" ]; then
	export CFLAGS=" -O3 -fomit-frame-pointer -fstrict-aliasing -ffast-math"
    else
	export CFLAGS=" -O3 -fomit-frame-pointer -malign-double -fstrict-aliasing -ffast-math"
    fi
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed'
	${S[$1]}/configure F77=gfortran --prefix=/usr --libdir=/usr/${libdir} --enable-shared --enable-threads --disable-fortran ${OPT_CONFIG[$1]}
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    for mk in `find . -name "[Mm]akefile" ` ; do
	sed -i -e 's|GCONFTOOL = /usr/bin/gconftool-2|GCONFTOOL = echo|' $mk
    done
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install DESTDIR=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/plamo-nora/PackageBuild.func
