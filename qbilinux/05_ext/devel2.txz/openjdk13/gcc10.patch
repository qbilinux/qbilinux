diff -Nrc jdk13u-jdk-13.0.5+2.orig/src/java.base/unix/native/libjava/childproc.c jdk13u-jdk-13.0.5+2/src/java.base/unix/native/libjava/childproc.c
*** jdk13u-jdk-13.0.5+2.orig/src/java.base/unix/native/libjava/childproc.c	2020-05-07 00:49:58.000000000 +0900
--- jdk13u-jdk-13.0.5+2/src/java.base/unix/native/libjava/childproc.c	2020-10-08 23:06:56.194587521 +0900
***************
*** 33,38 ****
--- 33,39 ----
  
  #include "childproc.h"
  
+ const char * const *parentPathv;
  
  ssize_t
  restartableWrite(int fd, const void *buf, size_t count)
diff -Nrc jdk13u-jdk-13.0.5+2.orig/src/java.base/unix/native/libjava/childproc.h jdk13u-jdk-13.0.5+2/src/java.base/unix/native/libjava/childproc.h
*** jdk13u-jdk-13.0.5+2.orig/src/java.base/unix/native/libjava/childproc.h	2020-05-07 00:49:58.000000000 +0900
--- jdk13u-jdk-13.0.5+2/src/java.base/unix/native/libjava/childproc.h	2020-10-08 23:07:35.415508161 +0900
***************
*** 126,132 ****
   * The cached and split version of the JDK's effective PATH.
   * (We don't support putenv("PATH=...") in native code)
   */
! const char * const *parentPathv;
  
  ssize_t restartableWrite(int fd, const void *buf, size_t count);
  int restartableDup2(int fd_from, int fd_to);
--- 126,132 ----
   * The cached and split version of the JDK's effective PATH.
   * (We don't support putenv("PATH=...") in native code)
   */
! extern const char * const *parentPathv;
  
  ssize_t restartableWrite(int fd, const void *buf, size_t count);
  int restartableDup2(int fd_from, int fd_to);
diff -Nrc jdk13u-jdk-13.0.5+2.orig/src/java.security.jgss/share/native/libj2gss/NativeFunc.c jdk13u-jdk-13.0.5+2/src/java.security.jgss/share/native/libj2gss/NativeFunc.c
*** jdk13u-jdk-13.0.5+2.orig/src/java.security.jgss/share/native/libj2gss/NativeFunc.c	2020-05-07 00:49:58.000000000 +0900
--- jdk13u-jdk-13.0.5+2/src/java.security.jgss/share/native/libj2gss/NativeFunc.c	2020-10-08 23:08:23.505636960 +0900
***************
*** 27,32 ****
--- 27,35 ----
  #include <stdlib.h>
  #include "NativeFunc.h"
  
+ /* global GSS function table */
+ GSS_FUNCTION_TABLE_PTR ftab;
+ 
  /* standard GSS method names (ordering is from mapfile) */
  static const char RELEASE_NAME[]                = "gss_release_name";
  static const char IMPORT_NAME[]                 = "gss_import_name";
diff -Nrc jdk13u-jdk-13.0.5+2.orig/src/java.security.jgss/share/native/libj2gss/NativeFunc.h jdk13u-jdk-13.0.5+2/src/java.security.jgss/share/native/libj2gss/NativeFunc.h
*** jdk13u-jdk-13.0.5+2.orig/src/java.security.jgss/share/native/libj2gss/NativeFunc.h	2020-05-07 00:49:58.000000000 +0900
--- jdk13u-jdk-13.0.5+2/src/java.security.jgss/share/native/libj2gss/NativeFunc.h	2020-10-08 23:08:48.659227360 +0900
***************
*** 277,282 ****
  typedef GSS_FUNCTION_TABLE *GSS_FUNCTION_TABLE_PTR;
  
  /* global GSS function table */
! GSS_FUNCTION_TABLE_PTR ftab;
  
  #endif
--- 277,282 ----
  typedef GSS_FUNCTION_TABLE *GSS_FUNCTION_TABLE_PTR;
  
  /* global GSS function table */
! extern GSS_FUNCTION_TABLE_PTR ftab;
  
  #endif
diff -Nrc jdk13u-jdk-13.0.5+2.orig/src/jdk.sctp/unix/native/libsctp/Sctp.c jdk13u-jdk-13.0.5+2/src/jdk.sctp/unix/native/libsctp/Sctp.c
*** jdk13u-jdk-13.0.5+2.orig/src/jdk.sctp/unix/native/libsctp/Sctp.c	1970-01-01 09:00:00.000000000 +0900
--- jdk13u-jdk-13.0.5+2/src/jdk.sctp/unix/native/libsctp/Sctp.c	2020-10-08 23:10:18.845344110 +0900
***************
*** 0 ****
--- 1,33 ----
+ /*
+  * Copyright (c) 2009, 2019, Oracle and/or its affiliates. All rights reserved.
+  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+  *
+  * This code is free software; you can redistribute it and/or modify it
+  * under the terms of the GNU General Public License version 2 only, as
+  * published by the Free Software Foundation.  Oracle designates this
+  * particular file as subject to the "Classpath" exception as provided
+  * by Oracle in the LICENSE file that accompanied this code.
+  *
+  * This code is distributed in the hope that it will be useful, but WITHOUT
+  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+  * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+  * version 2 for more details (a copy is included in the LICENSE file that
+  * accompanied this code).
+  *
+  * You should have received a copy of the GNU General Public License version
+  * 2 along with this work; if not, write to the Free Software Foundation,
+  * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+  *
+  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+  * or visit www.oracle.com if you need additional information or have any
+  * questions.
+  */
+ 
+ #include "Sctp.h"
+ 
+ sctp_getladdrs_func* nio_sctp_getladdrs;
+ sctp_freeladdrs_func* nio_sctp_freeladdrs;
+ sctp_getpaddrs_func* nio_sctp_getpaddrs;
+ sctp_freepaddrs_func* nio_sctp_freepaddrs;
+ sctp_bindx_func* nio_sctp_bindx;
+ sctp_peeloff_func* nio_sctp_peeloff;
diff -Nrc jdk13u-jdk-13.0.5+2.orig/src/jdk.sctp/unix/native/libsctp/Sctp.h jdk13u-jdk-13.0.5+2/src/jdk.sctp/unix/native/libsctp/Sctp.h
*** jdk13u-jdk-13.0.5+2.orig/src/jdk.sctp/unix/native/libsctp/Sctp.h	2020-05-07 00:49:58.000000000 +0900
--- jdk13u-jdk-13.0.5+2/src/jdk.sctp/unix/native/libsctp/Sctp.h	2020-10-08 23:09:52.909735398 +0900
***************
*** 322,333 ****
  
  #endif /* __linux__ */
  
! sctp_getladdrs_func* nio_sctp_getladdrs;
! sctp_freeladdrs_func* nio_sctp_freeladdrs;
! sctp_getpaddrs_func* nio_sctp_getpaddrs;
! sctp_freepaddrs_func* nio_sctp_freepaddrs;
! sctp_bindx_func* nio_sctp_bindx;
! sctp_peeloff_func* nio_sctp_peeloff;
  
  jboolean loadSocketExtensionFuncs(JNIEnv* env);
  
--- 322,333 ----
  
  #endif /* __linux__ */
  
! extern sctp_getladdrs_func* nio_sctp_getladdrs;
! extern sctp_freeladdrs_func* nio_sctp_freeladdrs;
! extern sctp_getpaddrs_func* nio_sctp_getpaddrs;
! extern sctp_freepaddrs_func* nio_sctp_freepaddrs;
! extern sctp_bindx_func* nio_sctp_bindx;
! extern sctp_peeloff_func* nio_sctp_peeloff;
  
  jboolean loadSocketExtensionFuncs(JNIEnv* env);
  
