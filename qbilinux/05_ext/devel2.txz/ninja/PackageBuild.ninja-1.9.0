#!/bin/sh
##############################################################
pkgbase=ninja
vers=1.9.0
url="https://github.com/ninja-build/ninja/archive/v${vers}.tar.gz"
srcfile=${pkgbase}-${vers}.tar.gz
commitid=
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=3
src=ninja-${vers}
OPT_CONFIG=''
DOCS='COPYING HACKING.md README RELEASING doc misc'
patchfiles=''
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
    sed -i '/int Guess/a \
    int   j = 0;\
    char* jobs = getenv( "NINJAJOBS" );\
    if ( jobs != NULL ) j = atoi( jobs );\
    if ( j > 0 ) return j;\
    ' src/ninja.cc
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    cp -a ${S[$1]} ${B[$1]}
}

do_build() {
    cd ${B[$1]}
    if [ -f configure.py ] ; then
	python3 ./configure.py --bootstrap
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}

    mkdir -p $P/usr/bin
    mkdir -p $P/usr/share/bash-completion/completions/
    mkdir -p $P/usr/share/zsh/site-functions/
    install ninja $P/usr/bin
    install -vDm644 misc/bash-completion $P/usr/share/bash-completion/completions/ninja
    install -vDm644 misc/zsh-completion  $P/usr/share/zsh/site-functions/_ninja
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
