#!/bin/sh
##############################################################
pkgbase=qt6
vers=6.7.0
url="http://download.qt.io/archive/qt/${vers%.*}/${vers}/single/qt-everywhere-src-${vers}.tar.xz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=qt-everywhere-src-${vers}
if [ $arch = "armv7l" ]; then
OPT_CONFIG="-confirm-license           \
            -opensource                \
            -dbus-linked               \
            -openssl-linked            \
            -system-harfbuzz           \
            -system-sqlite             \
            -nomake examples           \
            -no-rpath                  \
	    -ssl -icu -release -qpa xcb \
            -skip qtwebengine"
else
OPT_CONFIG="-confirm-license           \
            -opensource                \
            -dbus-linked               \
            -openssl-linked            \
            -system-sqlite             \
            -nomake examples           \
            -no-rpath                  \
	    -ssl -icu -release -qpa xcb \
            -skip qtquick3d -skip qtquick3dphysics -skip qtgraphs"
fi
DOCS='LGPL_EXCEPTION.txt LICENSE.FDL LICENSE.GPLv2 LICENSE.GPLv3 LICENSE.LGPLv21 LICENSE.LGPLv3 LICENSE.PREVIEW.COMMERCIAL README'
patchfiles='CVE-2024-33861-qtbase-6.7.diff'
compress=txz
SRC_URL=${SRC_URL:-"https://qbilinux.org/pub/source/"}
SRC_DIR=${SRC_DIR:-"/home/archives/source/"}
##############################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$1]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    export CXXFLAGS=-std=c++11
    ${S[$i]}/configure -prefix /usr -bindir /usr/${libdir}/qt6/bin -libdir /usr/${libdir} -archdatadir /usr/${libdir}/qt6 \
    	    -plugindir /usr/${libdir}/qt6/plugins -datadir /usr/${libdir}/qt6 -sysconfdir /etc/xdg \
    	    -examplesdir /usr/${libdir}/qt6/examples -testsdir /usr/${libdir}/qt6/tests -hostdatadir /usr/${libdir}/qt6 \
	    -headerdir /usr/include/qt6 -docdir /usr/share/doc/${src} \
    	    -L /opt/mariadb/${libdir} $OPT_CONFIG
    # cmake -DCMAKE_INSTALL_PREFIX=/usr \
    # 	  -DINSTALL_BINDIR=${libdir}/qt6/bin \
    # 	  -DINSTALL_PUBLICBINDIR=usr/bin \
    # 	  -DINSTALL_LIBEXECDIR=${libdir}/qt6 \
    # 	  -DINSTALL_DOCDIR=share/doc/qt6 \
    # 	  -DINSTALL_ARCHDATADIR=${libdir}/qt6 \
    # 	  -DINSTALL_DATADIR=share/qt6 \
    # 	  -DINSTALL_INCLUDEDIR=include/qt6 \
    # 	  -DINSTALL_MKSPECSDIR=${libdir}/qt6/mkspecs \
    # 	  -DINSTALL_EXAMPLESDIR=share/doc/qt6/examples \
    # 	  -DINSTALL_SYSCONFDIR=/etc/xdg \
    # 	  -DQT_FEATURE_openssl_linked=ON \
    # 	  -DQT_FEATURE_system_sqlite=ON \
    # 	  -DQT_FEATURE_system_assimp=ON \
    # 	  -DQT_BUILD_EXAMPLES=OFF \
    # 	  ${S[$i]}
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    export LDFLAGS='-Wl,--as-needed'
    export CXXFLAGS=-std=c++11
    cmake --build .
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    export LDFLAGS='-Wl,--as-needed'
    export CXXFLAGS=-std=c++11
    DESTDIR=$P cmake --install .
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    mkdir -p $P/usr/bin
    for BIN in $P/usr/lib${suffix}/qt6/bin/*; do
	TMP_FILE=$(echo $BIN | sed -e "s|$P||")
	case $(basename $BIN) in
	    syncqt.pl)
		ln -s $TMP_FILE $P/usr/bin/$(basename $BIN)
		;;
	    *)
		ln -s $TMP_FILE $P/usr/bin/$(basename $BIN)-qt6
		;;
	esac
    done

    mkdir -p $P/usr/lib${suffix}/pkgconfig
    cat > $P/usr/lib${suffix}/pkgconfig/Qt6.pc << EOF
prefix=/usr/lib${suffix}/qt6
bindir=\${prefix}/bin
datadir=\${prefix}
docdir=/usr/share/doc/qt-${vers}
archdatadir=\${prefix}
examplesdir=\${prefix}/examples
headerdir=/usr/include/qt6
qmldir=\${prefix}/qml
libdir=/usr/lib${suffix}
libexec=\${prefix}/libexec
moc=\${bindir}/moc
plugindir=\${prefix}/plugins
qmake=\${bindir}/qmake
sysconfdir=/etc/xdg
translationdir=\${prefix}/translations

Name: Qt6
Description: Qt6 Configuration
Version: $VERSION
EOF

    # While we are at it, there isn't any reason to keep references to $PKG in the *.prl files.
    for PRL in $(find $P -name "*\.prl"); do
	sed -i '/^QMAKE_PRL_BUILD_DIR/d' $PRL
    done

    for i in $W/*.desktop; do
	install -D -m 0644 $i $P/usr/share/applications/$(basename $i)
    done
    sed -i "s|@LIBDIRSUFFIX@|$suffix|" $P/usr/share/applications/*

    # Remove executable bits from files.
    #find $P \( -name "*.qml" -o -name "*.app" \) -perm 755 -exec chmod 644 '{}' \;

    mkdir -p $P/etc/profile.d
    sed -e "s|@LIBDIRSUFFIX@|${suffix}|g" $W/qt6.sh  > $P/etc/profile.d/qt6.sh
    sed -e "s|@LIBDIRSUFFIX@|${suffix}|g" $W/qt6.csh > $P/etc/profile.d/qt6.csh
    chmod 0755 $PKG/etc/profile.d/*

    # application configurations from BLFS
    install -dm755 $P/usr/share/applications
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
