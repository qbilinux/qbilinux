#!/bin/sh
##############################################################
pkgbase=qt5
vers=5.10.1
url="http://download.qt.io/archive/qt/${vers%.*}/${vers}/single/qt-everywhere-src-${vers}.tar.xz"
apply_arch="x86_64 i686 armv7l aarch64"
arch=`uname -m`
build=1
src=qt-everywhere-src-${vers}
if [ $arch = "armv7l" ]; then
OPT_CONFIG="-sysconfdir     /etc/xdg   \
            -no-opengl                 \
            -confirm-license           \
            -opensource                \
            -dbus-linked               \
            -openssl-linked            \
            -system-harfbuzz           \
            -system-sqlite             \
            -nomake examples           \
            -no-rpath                  \
	    -headerdir /usr/include/qt5 \
	    -docdir /usr/share/doc/${src} \
	    -ssl -icu -release -qpa xcb -pulseaudio \
            -skip qtwebengine"
else
OPT_CONFIG="-sysconfdir     /etc/xdg   \
            -confirm-license           \
            -opensource                \
            -dbus-linked               \
            -openssl-linked            \
            -system-harfbuzz           \
            -system-sqlite             \
            -nomake examples           \
            -no-rpath                  \
	    -headerdir /usr/include/qt5 \
	    -docdir /usr/share/doc/${src} \
	    -ssl -icu -release -qpa xcb -pulseaudio \
            -skip qtwebengine"
fi
#OPT_CONFIG="-no-webkit -confirm-license -opensource -sysconfdir /etc/xdg -headerdir /usr/include/qt5 -docdir /usr/share/doc/${src} -system-libpng -system-libjpeg -system-zlib -system-sqlite -system-pcre -plugin-sql-sqlite -icu -openssl -verbose -optimized-qmake -dbus-linked -qpa xcb -xcb -glib -accessibility -no-separate-debug-info -no-pch -no-rpath -no-strip -release -no-use-gold-linker -reduce-relocations -pulseaudio -nomake examples"
DOCS='LGPL_EXCEPTION.txt LICENSE.FDL LICENSE.GPLv2 LICENSE.GPLv3 LICENSE.LGPLv21 LICENSE.LGPLv3 LICENSE.PREVIEW.COMMERCIAL README'
patchfiles='qt-5.10.1-glibc228-1.patch'
compress=txz
SRC_URL="https://qbilinux.org/pub/source/"
SRC_DIR="/home/archives/source/"
##############################################################

source /usr/src/qbilinux/PackageBuild.def

do_prepare() {
    cd ${S[$i]}
    for patch in $patchfiles ; do
	patch -p1 < $W/$patch
    done
    # Fix missing private includes https://bugreports.qt.io/browse/QTBUG-37417
    sed -e '/CMAKE_NO_PRIVATE_INCLUDES\ \=\ true/d' -i qtbase/mkspecs/features/create_cmake.prf
}

do_config() {
    if [ -d ${B[$1]} ] ; then rm -rf ${B[$1]} ; fi

    mkdir ${B[$1]}
    cd ${B[$1]}
    if [ -x ${S[$1]}/configure ] ; then
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
        ${S[$i]}/configure -prefix /usr/${libdir}/qt5 -libdir /usr/${libdir} -L /opt/mariadb/${libdir} -plugindir /usr/${libdir}/qt5/plugins -importdir /usr/${libdir}/qt5/imports $OPT_CONFIG
    fi
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
}

do_build() {
    cd ${B[$1]}
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make
    fi
    if [ $? != 0 ]; then
	echo "make error. $0 script stop"
	exit 255
    fi
}

do_install() {
    cd ${B[$1]}
    for mk in `find . -name "[Mm]akefile" ` ; do
	sed -i -e 's|GCONFTOOL = /usr/bin/gconftool-2|GCONFTOOL = echo|' $mk
    done
    if [ -f Makefile ] ; then
	export LDFLAGS='-Wl,--as-needed'
	make install INSTALL_ROOT=$P
    fi
    if [ $? != 0 ]; then
	echo "make install error. $0 script stop"
	exit 255
    fi

    # add extra func
    mkdir -p $P/usr/bin
    for BIN in $P/usr/lib${suffix}/qt5/bin/*; do
	TMP_FILE=$(echo $BIN | sed -e "s|$P||")
	case $(basename $BIN) in
	    syncqt.pl)
		ln -s $TMP_FILE $P/usr/bin/$(basename $BIN)
		;;
	    *)
		ln -s $TMP_FILE $P/usr/bin/$(basename $BIN)-qt5
		;;
	esac
    done

    cat > $P/usr/lib${suffix}/pkgconfig/Qt5.pc << EOF
prefix=/usr/lib${suffix}/qt5
bindir=\${prefix}/bin
datadir=\${prefix}
docdir=/usr/share/doc/qt-${vers}
archdatadir=\${prefix}
examplesdir=\${prefix}/examples
headerdir=/usr/include/qt5
importdir=\${prefix}/imports
qmldir=\${prefix}/qml
libdir=/usr/lib${suffix}
libexec=\${prefix}/libexec
moc=\${bindir}/moc
plugindir=\${prefix}/plugins
qmake=\${bindir}/qmake
sysconfdir=/etc/xdg
translationdir=\${prefix}/translations

Name: Qt5
Description: Qt5 Configuration
Version: $VERSION
EOF

    # Fix internal linking for Qt5WebEngineCore.pc.
    sed -i 's|-Wl,--start-group.*-Wl,--end-group||' $P/usr/lib${suffix}/pkgconfig/Qt5WebEngineCore.pc

    #./usr/lib64/pkgconfig/Qt5WebEngineCore.pc
    sed -i 's|-L$W[^ ]* ||g' $P/usr/lib${suffix}/pkgconfig/Qt5WebEngineCore.pc
    #./usr/lib64/libqgsttools_p.prl
    sed -i 's|-L$W[^ ]* ||g' $P/usr/lib${suffix}/libqgsttools_p.prl

    # While we are at it, there isn't any reason to keep references to $PKG in the *.prl files.
    for PRL in $(find $P -name "*\.prl"); do
	sed -i '/^QMAKE_PRL_BUILD_DIR/d' $PRL
    done

    for i in $W/*.desktop; do
	install -D -m 0644 $i $P/usr/share/applications/$(basename $i)
    done
    sed -i "s|@LIBDIR@|$suffix|" $P/usr/share/applications/*

    # Remove executable bits from files.
    find $P \( -name "*.qml" -o -name "*.app" \) -perm 755 -exec chmod 644 '{}' \;

    mkdir -p $P/etc/profile.d
    sed -e "s|@LIBDIRSUFFIX@|${suffix}|g" $W/qt5.sh  > $P/etc/profile.d/qt5.sh
    sed -e "s|@LIBDIRSUFFIX@|${suffix}|g" $W/qt5.csh > $P/etc/profile.d/qt5.csh
    chmod 0755 $PKG/etc/profile.d/*

    # application configurations from BLFS
    install -dm755 $P/usr/share/applications
}

do_package() {
    for i in $pkgbase ; do
        cd $P
        /sbin/makepkg $W/$pkg.$compress <<EOF
y
1
EOF
    done
}

source /usr/src/qbilinux/PackageBuild.func
